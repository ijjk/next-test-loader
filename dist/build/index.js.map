{"version":3,"sources":["../../build/index.ts"],"names":["staticCheckWorker","require","resolve","build","dir","conf","reactProductionProfiling","debugOutput","nextBuildSpan","traceAsyncFn","loadedEnvFiles","traceChild","traceFn","Log","config","PHASE_PRODUCTION_BUILD","target","buildId","generateBuildId","nanoid","distDir","path","join","headers","rewrites","redirects","ciEnvironment","isCI","hasNextSupport","cacheDir","hasCache","console","log","prefixes","warn","buildSpinner","prefixText","info","telemetry","Telemetry","publicDir","pagesDir","hasPublicDir","record","cliCommand","isSrcDir","relative","startsWith","hasNowJson","cwd","isCustomServer","then","events","ignoreTypeScriptErrors","Boolean","typescript","ignoreBuildErrors","isLikeServerless","pagePaths","pageExtensions","allStaticPages","Set","allPageInfos","Map","previewProps","previewModeId","crypto","randomBytes","toString","previewModeSigningKey","previewModeEncryptionKey","mappedPages","entrypoints","pageKeys","Object","keys","conflictingPublicFiles","hasCustomErrorPage","hasPages404","hasPublicUnderScoreNextDir","Error","PUBLIC_DIR_MIDDLEWARE_CONFLICT","page","hasPublicPageFile","push","numConflicting","length","nestedReservedPages","filter","match","dirname","buildCustomRoute","r","type","routeRegex","source","strict","sensitive","delimiter","statusCode","permanent","undefined","regex","routesManifestPath","ROUTES_MANIFEST","routesManifest","version","pages404","basePath","map","dynamicRoutes","isDynamicRoute","re","routeKeys","namedRegex","dataRoutes","i18n","distDirCreated","promises","mkdir","recursive","err","code","writeFile","JSON","stringify","manifestPath","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","PAGES_MANIFEST","requiredServerFiles","compress","configFile","appDir","files","BUILD_MANIFEST","PRERENDER_MANIFEST","REACT_LOADABLE_MANIFEST","experimental","optimizeFonts","FONT_MANIFEST","BUILD_ID_FILE","nonNullable","file","ignore","configs","Promise","all","isServer","client","server","clientConfig","optimization","minimize","minimizer","webpackBuildStart","process","hrtime","result","warnings","errors","clientResult","serverResult","webpackBuildEnd","stopAndPersist","error","chalk","red","indexOf","page_name_regex","parsed","exec","page_name","groups","durationInSeconds","postCompileSpinner","buildManifestPath","ssgPages","ssgStaticFallbackPages","ssgBlockingFallbackPages","staticPages","invalidPages","hybridAmpPages","serverPropsPages","additionalSsgPaths","additionalSsgPathsEncoded","pageInfos","pagesManifest","parse","readFile","buildManifest","customAppGetInitialProps","namedExports","isNextImageImported","analysisBegin","hasSsrAmpPages","staticCheckSpan","hasNonStaticErrorPage","env","NEXT_PHASE","staticCheckWorkers","Worker","numWorkers","cpus","enableWorkerThreads","workerThreads","getStdout","pipe","stdout","getStderr","stderr","runtimeEnvConfig","publicRuntimeConfig","serverRuntimeConfig","nonStaticErrorPageSpan","nonStaticErrorPage","appPageToCheck","bold","yellow","checkPageSpan","actualPage","selfSize","allSize","isSsg","isStatic","isHybridAmp","ssgPageRoutes","nonReservedPage","isPageStaticSpan","workerResult","isPageStatic","locales","defaultLocale","id","isAmpOnly","add","hasStaticProps","prerenderRoutes","encodedPrerenderRoutes","set","prerenderFallback","hasServerProps","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","delete","STATIC_STATUS_PAGES","includes","message","size","totalSize","static","initialRevalidateSeconds","end","pagePath","dataRoute","posix","dataRouteRegex","namedDataRouteRegex","replace","RegExp","useStatic404","pg","optimizeCss","cssFilePaths","filePath","SERVER_FILES_MANIFEST","finalPrerenderRoutes","tbdPrerenderRoutes","ssgNotFoundPaths","usedStaticStatusPages","forEach","has","hasPages500","useDefaultStatic500","staticGenerationSpan","combinedPages","exportApp","default","exportOptions","silent","buildExport","threads","pages","outdir","statusMessage","exportConfig","initialPageRevalidationMap","exportPathMap","defaultMap","query","__nextFallback","routes","encodedRoutes","get","route","routeIdx","__nextSsgPath","isDynamic","isFallback","locale","outputPath","__nextLocale","trailingSlash","postBuildSpinner","serverBundle","unlink","serverOutputDir","moveExportedPage","originPage","ext","additionalSsgFile","orig","relativeDest","substr","split","dest","isNotFound","rename","curPath","localeExt","extname","relativeDestNoPages","updatedRelativeDest","updatedOrig","updatedDest","isStaticSsgFallback","hasAmp","hasHtmlOutput","ampPage","localePage","srcRoute","pageInfo","extraRoutes","pageFile","rmdir","analysisEnd","staticPageCount","staticPropsPageCount","serverPropsPageCount","ssrPageCount","hasStatic404","hasReportWebVitals","rewritesCount","headersCount","redirectsCount","headersWithHasCount","rewritesWithHasCount","redirectsWithHasCount","finalDynamicRoutes","tbdRoute","normalizedRoute","fallback","prerenderManifest","notFoundRoutes","preview","generateClientSsgManifest","images","deviceSizes","imageSizes","sizes","IMAGES_MANIFEST","EXPORT_MARKER","hasExportPathMap","exportTrailingSlash","EXPORT_DETAIL","catch","reject","key","distPath","analyticsId","green","flush","entries","pathname","clientSsgManifestContent","CLIENT_STATIC_FILES_PATH"],"mappings":"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","sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport chalk from 'chalk'\nimport crypto from 'crypto'\nimport { promises, writeFileSync } from 'fs'\nimport Worker from 'jest-worker'\nimport devalue from 'next/dist/compiled/devalue'\nimport escapeStringRegexp from 'next/dist/compiled/escape-string-regexp'\nimport findUp from 'next/dist/compiled/find-up'\nimport { nanoid } from 'next/dist/compiled/nanoid/index.cjs'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport path from 'path'\nimport formatWebpackMessages from '../client/dev/error-overlay/format-webpack-messages'\nimport {\n  STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR,\n  PUBLIC_DIR_MIDDLEWARE_CONFLICT,\n} from '../lib/constants'\nimport { fileExists } from '../lib/file-exists'\nimport { findPagesDir } from '../lib/find-pages-dir'\nimport loadCustomRoutes, {\n  getRedirectStatus,\n  normalizeRouteRegex,\n  Redirect,\n  RouteType,\n} from '../lib/load-custom-routes'\nimport { nonNullable } from '../lib/non-nullable'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport { verifyTypeScriptSetup } from '../lib/verifyTypeScriptSetup'\nimport {\n  BUILD_ID_FILE,\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  FONT_MANIFEST,\n  IMAGES_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  PRERENDER_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  SERVER_FILES_MANIFEST,\n  STATIC_STATUS_PAGES,\n} from '../next-server/lib/constants'\nimport {\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../next-server/lib/router/utils'\nimport { __ApiPreviewProps } from '../next-server/server/api-utils'\nimport loadConfig, {\n  isTargetLikeServerless,\n} from '../next-server/server/config'\nimport { BuildManifest } from '../next-server/server/get-page-files'\nimport '../next-server/server/node-polyfill-fetch'\nimport { normalizePagePath } from '../next-server/server/normalize-page-path'\nimport { getPagePath } from '../next-server/server/require'\nimport * as ciEnvironment from '../telemetry/ci-info'\nimport {\n  eventBuildCompleted,\n  eventBuildOptimize,\n  eventCliSession,\n  eventNextPlugins,\n} from '../telemetry/events'\nimport { Telemetry } from '../telemetry/storage'\nimport { CompilerResult, runCompiler } from './compiler'\nimport { createEntrypoints, createPagesMapping } from './entries'\nimport { generateBuildId } from './generate-build-id'\nimport { isWriteable } from './is-writeable'\nimport * as Log from './output/log'\nimport createSpinner from './spinner'\nimport { trace, setGlobal } from '../telemetry/trace'\nimport {\n  collectPages,\n  detectConflictingPaths,\n  getJsPageSizeInKb,\n  getNamedExports,\n  hasCustomGetInitialProps,\n  isPageStatic,\n  PageInfo,\n  printCustomRoutes,\n  printTreeView,\n  getCssFilePaths,\n} from './utils'\nimport getBaseWebpackConfig from './webpack-config'\nimport { PagesManifest } from './webpack/plugins/pages-manifest-plugin'\nimport { writeBuildId } from './write-build-id'\nimport { normalizeLocalePath } from '../next-server/lib/i18n/normalize-locale-path'\n\nconst staticCheckWorker = require.resolve('./utils')\n\nexport type SsgRoute = {\n  initialRevalidateSeconds: number | false\n  srcRoute: string | null\n  dataRoute: string\n}\n\nexport type DynamicSsgRoute = {\n  routeRegex: string\n  fallback: string | null | false\n  dataRoute: string\n  dataRouteRegex: string\n}\n\nexport type PrerenderManifest = {\n  version: 3\n  routes: { [route: string]: SsgRoute }\n  dynamicRoutes: { [route: string]: DynamicSsgRoute }\n  notFoundRoutes: string[]\n  preview: __ApiPreviewProps\n}\n\nexport default async function build(\n  dir: string,\n  conf = null,\n  reactProductionProfiling = false,\n  debugOutput = false\n): Promise<void> {\n  const nextBuildSpan = trace('next-build')\n\n  return nextBuildSpan.traceAsyncFn(async () => {\n    // attempt to load global env values so they are available in next.config.js\n    const { loadedEnvFiles } = nextBuildSpan\n      .traceChild('load-dotenv')\n      .traceFn(() => loadEnvConfig(dir, false, Log))\n\n    const config = await nextBuildSpan\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_PRODUCTION_BUILD, dir, conf))\n    const { target } = config\n    const buildId = await nextBuildSpan\n      .traceChild('generate-buildid')\n      .traceAsyncFn(() => generateBuildId(config.generateBuildId, nanoid))\n    const distDir = path.join(dir, config.distDir)\n\n    const { headers, rewrites, redirects } = await nextBuildSpan\n      .traceChild('load-custom-routes')\n      .traceAsyncFn(() => loadCustomRoutes(config))\n\n    if (ciEnvironment.isCI && !ciEnvironment.hasNextSupport) {\n      const cacheDir = path.join(distDir, 'cache')\n      const hasCache = await fileExists(cacheDir)\n\n      if (!hasCache) {\n        // Intentionally not piping to stderr in case people fail in CI when\n        // stderr is detected.\n        console.log(\n          `${Log.prefixes.warn} No build cache found. Please configure build caching for faster rebuilds. Read more: https://err.sh/next.js/no-cache`\n        )\n      }\n    }\n\n    const buildSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Creating an optimized production build`,\n    })\n\n    const telemetry = new Telemetry({ distDir })\n    setGlobal('telemetry', telemetry)\n\n    const publicDir = path.join(dir, 'public')\n    const pagesDir = findPagesDir(dir)\n    const hasPublicDir = await fileExists(publicDir)\n\n    telemetry.record(\n      eventCliSession(PHASE_PRODUCTION_BUILD, dir, {\n        cliCommand: 'build',\n        isSrcDir: path.relative(dir, pagesDir!).startsWith('src'),\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n\n    eventNextPlugins(path.resolve(dir)).then((events) =>\n      telemetry.record(events)\n    )\n\n    const ignoreTypeScriptErrors = Boolean(config.typescript?.ignoreBuildErrors)\n    await nextBuildSpan\n      .traceChild('verify-typescript-setup')\n      .traceAsyncFn(() =>\n        verifyTypeScriptSetup(dir, pagesDir, !ignoreTypeScriptErrors)\n      )\n\n    const isLikeServerless = isTargetLikeServerless(target)\n\n    const pagePaths: string[] = await nextBuildSpan\n      .traceChild('collect-pages')\n      .traceAsyncFn(() => collectPages(pagesDir, config.pageExtensions))\n\n    // needed for static exporting since we want to replace with HTML\n    // files\n    const allStaticPages = new Set<string>()\n    let allPageInfos = new Map<string, PageInfo>()\n\n    const previewProps: __ApiPreviewProps = {\n      previewModeId: crypto.randomBytes(16).toString('hex'),\n      previewModeSigningKey: crypto.randomBytes(32).toString('hex'),\n      previewModeEncryptionKey: crypto.randomBytes(32).toString('hex'),\n    }\n\n    const mappedPages = nextBuildSpan\n      .traceChild('create-pages-mapping')\n      .traceFn(() => createPagesMapping(pagePaths, config.pageExtensions))\n    const entrypoints = nextBuildSpan\n      .traceChild('create-entrypoints')\n      .traceFn(() =>\n        createEntrypoints(\n          mappedPages,\n          target,\n          buildId,\n          previewProps,\n          config,\n          loadedEnvFiles\n        )\n      )\n    const pageKeys = Object.keys(mappedPages)\n    const conflictingPublicFiles: string[] = []\n    const hasCustomErrorPage = mappedPages['/_error'].startsWith(\n      'private-next-pages'\n    )\n    const hasPages404 = Boolean(\n      mappedPages['/404'] &&\n        mappedPages['/404'].startsWith('private-next-pages')\n    )\n\n    if (hasPublicDir) {\n      const hasPublicUnderScoreNextDir = await fileExists(\n        path.join(publicDir, '_next')\n      )\n      if (hasPublicUnderScoreNextDir) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    await nextBuildSpan\n      .traceChild('public-dir-conflict-check')\n      .traceAsyncFn(async () => {\n        // Check if pages conflict with files in `public`\n        // Only a page of public file can be served, not both.\n        for (const page in mappedPages) {\n          const hasPublicPageFile = await fileExists(\n            path.join(publicDir, page === '/' ? '/index' : page),\n            'file'\n          )\n          if (hasPublicPageFile) {\n            conflictingPublicFiles.push(page)\n          }\n        }\n\n        const numConflicting = conflictingPublicFiles.length\n\n        if (numConflicting) {\n          throw new Error(\n            `Conflicting public and page file${\n              numConflicting === 1 ? ' was' : 's were'\n            } found. https://err.sh/vercel/next.js/conflicting-public-file-page\\n${conflictingPublicFiles.join(\n              '\\n'\n            )}`\n          )\n        }\n      })\n\n    const nestedReservedPages = pageKeys.filter((page) => {\n      return (\n        page.match(/\\/(_app|_document|_error)$/) && path.dirname(page) !== '/'\n      )\n    })\n\n    if (nestedReservedPages.length) {\n      Log.warn(\n        `The following reserved Next.js pages were detected not directly under the pages directory:\\n` +\n          nestedReservedPages.join('\\n') +\n          `\\nSee more info here: https://err.sh/next.js/nested-reserved-page\\n`\n      )\n    }\n\n    const buildCustomRoute = (\n      r: {\n        source: string\n        locale?: false\n        basePath?: false\n        statusCode?: number\n        destination?: string\n      },\n      type: RouteType\n    ) => {\n      const keys: any[] = []\n\n      const routeRegex = pathToRegexp(r.source, keys, {\n        strict: true,\n        sensitive: false,\n        delimiter: '/', // default is `/#?`, but Next does not pass query info\n      })\n\n      return {\n        ...r,\n        ...(type === 'redirect'\n          ? {\n              statusCode: getRedirectStatus(r as Redirect),\n              permanent: undefined,\n            }\n          : {}),\n        regex: normalizeRouteRegex(routeRegex.source),\n      }\n    }\n\n    const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n    const routesManifest: {\n      version: number\n      pages404: boolean\n      basePath: string\n      redirects: Array<ReturnType<typeof buildCustomRoute>>\n      rewrites: Array<ReturnType<typeof buildCustomRoute>>\n      headers: Array<ReturnType<typeof buildCustomRoute>>\n      dynamicRoutes: Array<{\n        page: string\n        regex: string\n        namedRegex?: string\n        routeKeys?: { [key: string]: string }\n      }>\n      dataRoutes: Array<{\n        page: string\n        routeKeys?: { [key: string]: string }\n        dataRouteRegex: string\n        namedDataRouteRegex?: string\n      }>\n      i18n?: {\n        domains?: Array<{\n          http?: true\n          domain: string\n          locales?: string[]\n          defaultLocale: string\n        }>\n        locales: string[]\n        defaultLocale: string\n        localeDetection?: false\n      }\n    } = nextBuildSpan.traceChild('generate-routes-manifest').traceFn(() => ({\n      version: 3,\n      pages404: true,\n      basePath: config.basePath,\n      redirects: redirects.map((r: any) => buildCustomRoute(r, 'redirect')),\n      rewrites: rewrites.map((r: any) => buildCustomRoute(r, 'rewrite')),\n      headers: headers.map((r: any) => buildCustomRoute(r, 'header')),\n      dynamicRoutes: getSortedRoutes(pageKeys)\n        .filter(isDynamicRoute)\n        .map((page) => {\n          const routeRegex = getRouteRegex(page)\n          return {\n            page,\n            regex: normalizeRouteRegex(routeRegex.re.source),\n            routeKeys: routeRegex.routeKeys,\n            namedRegex: routeRegex.namedRegex,\n          }\n        }),\n      dataRoutes: [],\n      i18n: config.i18n || undefined,\n    }))\n\n    const distDirCreated = await nextBuildSpan\n      .traceChild('create-dist-dir')\n      .traceAsyncFn(async () => {\n        try {\n          await promises.mkdir(distDir, { recursive: true })\n          return true\n        } catch (err) {\n          if (err.code === 'EPERM') {\n            return false\n          }\n          throw err\n        }\n      })\n\n    if (!distDirCreated || !(await isWriteable(distDir))) {\n      throw new Error(\n        '> Build directory is not writeable. https://err.sh/vercel/next.js/build-dir-not-writeable'\n      )\n    }\n\n    // We need to write the manifest with rewrites before build\n    // so serverless can import the manifest\n    await nextBuildSpan\n      .traceChild('write-routes-manifest')\n      .traceAsyncFn(() =>\n        promises.writeFile(\n          routesManifestPath,\n          JSON.stringify(routesManifest),\n          'utf8'\n        )\n      )\n\n    const manifestPath = path.join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )\n\n    const requiredServerFiles = nextBuildSpan\n      .traceChild('generate-required-server-files')\n      .traceFn(() => ({\n        version: 1,\n        config: {\n          ...config,\n          compress: false,\n          configFile: undefined,\n        },\n        appDir: dir,\n        files: [\n          ROUTES_MANIFEST,\n          path.relative(distDir, manifestPath),\n          BUILD_MANIFEST,\n          PRERENDER_MANIFEST,\n          REACT_LOADABLE_MANIFEST,\n          config.experimental.optimizeFonts\n            ? path.join(\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                FONT_MANIFEST\n              )\n            : null,\n          BUILD_ID_FILE,\n        ]\n          .filter(nonNullable)\n          .map((file) => path.join(config.distDir, file)),\n        ignore: [] as string[],\n      }))\n\n    const configs = await nextBuildSpan\n      .traceChild('generate-webpack-config')\n      .traceAsyncFn(() =>\n        Promise.all([\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: false,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.client,\n            rewrites,\n          }),\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: true,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.server,\n            rewrites,\n          }),\n        ])\n      )\n\n    const clientConfig = configs[0]\n\n    if (\n      clientConfig.optimization &&\n      (clientConfig.optimization.minimize !== true ||\n        (clientConfig.optimization.minimizer &&\n          clientConfig.optimization.minimizer.length === 0))\n    ) {\n      Log.warn(\n        `Production code optimization has been disabled in your project. Read more: https://err.sh/vercel/next.js/minification-disabled`\n      )\n    }\n\n    const webpackBuildStart = process.hrtime()\n\n    let result: CompilerResult = { warnings: [], errors: [] }\n    // TODO: why do we need this?? https://github.com/vercel/next.js/issues/8253\n    if (isLikeServerless) {\n      const clientResult = await runCompiler(clientConfig)\n      // Fail build if clientResult contains errors\n      if (clientResult.errors.length > 0) {\n        result = {\n          warnings: [...clientResult.warnings],\n          errors: [...clientResult.errors],\n        }\n      } else {\n        const serverResult = await runCompiler(configs[1])\n        result = {\n          warnings: [...clientResult.warnings, ...serverResult.warnings],\n          errors: [...clientResult.errors, ...serverResult.errors],\n        }\n      }\n    } else {\n      result = await nextBuildSpan\n        .traceChild('run-webpack-compiler')\n        .traceAsyncFn(() => runCompiler(configs))\n    }\n\n    const webpackBuildEnd = process.hrtime(webpackBuildStart)\n    if (buildSpinner) {\n      buildSpinner.stopAndPersist()\n    }\n\n    result = nextBuildSpan\n      .traceChild('format-webpack-messages')\n      .traceFn(() => formatWebpackMessages(result))\n\n    if (result.errors.length > 0) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (result.errors.length > 1) {\n        result.errors.length = 1\n      }\n      const error = result.errors.join('\\n\\n')\n\n      console.error(chalk.red('Failed to compile.\\n'))\n\n      if (\n        error.indexOf('private-next-pages') > -1 &&\n        error.indexOf('does not contain a default export') > -1\n      ) {\n        const page_name_regex = /'private-next-pages\\/(?<page_name>[^']*)'/\n        const parsed = page_name_regex.exec(error)\n        const page_name = parsed && parsed.groups && parsed.groups.page_name\n        throw new Error(\n          `webpack build failed: found page without a React Component as default export in pages/${page_name}\\n\\nSee https://err.sh/vercel/next.js/page-without-valid-component for more info.`\n        )\n      }\n\n      console.error(error)\n      console.error()\n\n      if (\n        error.indexOf('private-next-pages') > -1 ||\n        error.indexOf('__next_polyfill__') > -1\n      ) {\n        throw new Error(\n          '> webpack config.resolve.alias was incorrectly overridden. https://err.sh/vercel/next.js/invalid-resolve-alias'\n        )\n      }\n      throw new Error('> Build failed because of webpack errors')\n    } else {\n      telemetry.record(\n        eventBuildCompleted(pagePaths, {\n          durationInSeconds: webpackBuildEnd[0],\n        })\n      )\n\n      if (result.warnings.length > 0) {\n        Log.warn('Compiled with warnings\\n')\n        console.warn(result.warnings.join('\\n\\n'))\n        console.warn()\n      } else {\n        Log.info('Compiled successfully')\n      }\n    }\n\n    const postCompileSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Collecting page data`,\n    })\n\n    const buildManifestPath = path.join(distDir, BUILD_MANIFEST)\n\n    const ssgPages = new Set<string>()\n    const ssgStaticFallbackPages = new Set<string>()\n    const ssgBlockingFallbackPages = new Set<string>()\n    const staticPages = new Set<string>()\n    const invalidPages = new Set<string>()\n    const hybridAmpPages = new Set<string>()\n    const serverPropsPages = new Set<string>()\n    const additionalSsgPaths = new Map<string, Array<string>>()\n    const additionalSsgPathsEncoded = new Map<string, Array<string>>()\n    const pageInfos = new Map<string, PageInfo>()\n    const pagesManifest = JSON.parse(\n      await promises.readFile(manifestPath, 'utf8')\n    ) as PagesManifest\n    const buildManifest = JSON.parse(\n      await promises.readFile(buildManifestPath, 'utf8')\n    ) as BuildManifest\n\n    let customAppGetInitialProps: boolean | undefined\n    let namedExports: Array<string> | undefined\n    let isNextImageImported: boolean | undefined\n    const analysisBegin = process.hrtime()\n    let hasSsrAmpPages = false\n\n    const staticCheckSpan = nextBuildSpan.traceChild('static-check')\n    const { hasNonStaticErrorPage } = await staticCheckSpan.traceAsyncFn(\n      async () => {\n        process.env.NEXT_PHASE = PHASE_PRODUCTION_BUILD\n\n        const staticCheckWorkers = new Worker(staticCheckWorker, {\n          numWorkers: config.experimental.cpus,\n          enableWorkerThreads: config.experimental.workerThreads,\n        }) as Worker & { isPageStatic: typeof isPageStatic }\n\n        staticCheckWorkers.getStdout().pipe(process.stdout)\n        staticCheckWorkers.getStderr().pipe(process.stderr)\n\n        const runtimeEnvConfig = {\n          publicRuntimeConfig: config.publicRuntimeConfig,\n          serverRuntimeConfig: config.serverRuntimeConfig,\n        }\n\n        const nonStaticErrorPageSpan = staticCheckSpan.traceChild(\n          'check-static-error-page'\n        )\n        const nonStaticErrorPage = await nonStaticErrorPageSpan.traceAsyncFn(\n          async () =>\n            hasCustomErrorPage &&\n            (await hasCustomGetInitialProps(\n              '/_error',\n              distDir,\n              isLikeServerless,\n              runtimeEnvConfig,\n              false\n            ))\n        )\n        // we don't output _app in serverless mode so use _app export\n        // from _error instead\n        const appPageToCheck = isLikeServerless ? '/_error' : '/_app'\n\n        customAppGetInitialProps = await hasCustomGetInitialProps(\n          appPageToCheck,\n          distDir,\n          isLikeServerless,\n          runtimeEnvConfig,\n          true\n        )\n\n        namedExports = await getNamedExports(\n          appPageToCheck,\n          distDir,\n          isLikeServerless,\n          runtimeEnvConfig\n        )\n\n        if (customAppGetInitialProps) {\n          console.warn(\n            chalk.bold.yellow(`Warning: `) +\n              chalk.yellow(\n                `You have opted-out of Automatic Static Optimization due to \\`getInitialProps\\` in \\`pages/_app\\`. This does not opt-out pages with \\`getStaticProps\\``\n              )\n          )\n          console.warn(\n            'Read more: https://err.sh/next.js/opt-out-auto-static-optimization\\n'\n          )\n        }\n\n        await Promise.all(\n          pageKeys.map(async (page) => {\n            const checkPageSpan = staticCheckSpan.traceChild('check-page', {\n              page,\n            })\n            return checkPageSpan.traceAsyncFn(async () => {\n              const actualPage = normalizePagePath(page)\n              const [selfSize, allSize] = await getJsPageSizeInKb(\n                actualPage,\n                distDir,\n                buildManifest\n              )\n\n              let isSsg = false\n              let isStatic = false\n              let isHybridAmp = false\n              let ssgPageRoutes: string[] | null = null\n\n              const nonReservedPage = !page.match(\n                /^\\/(_app|_error|_document|api(\\/|$))/\n              )\n\n              if (nonReservedPage) {\n                try {\n                  let isPageStaticSpan = checkPageSpan.traceChild(\n                    'is-page-static'\n                  )\n                  let workerResult = await isPageStaticSpan.traceAsyncFn(() => {\n                    return staticCheckWorkers.isPageStatic(\n                      page,\n                      distDir,\n                      isLikeServerless,\n                      runtimeEnvConfig,\n                      config.i18n?.locales,\n                      config.i18n?.defaultLocale,\n                      isPageStaticSpan.id\n                    )\n                  })\n\n                  if (\n                    workerResult.isStatic === false &&\n                    (workerResult.isHybridAmp || workerResult.isAmpOnly)\n                  ) {\n                    hasSsrAmpPages = true\n                  }\n\n                  if (workerResult.isHybridAmp) {\n                    isHybridAmp = true\n                    hybridAmpPages.add(page)\n                  }\n\n                  if (workerResult.isNextImageImported) {\n                    isNextImageImported = true\n                  }\n\n                  if (workerResult.hasStaticProps) {\n                    ssgPages.add(page)\n                    isSsg = true\n\n                    if (\n                      workerResult.prerenderRoutes &&\n                      workerResult.encodedPrerenderRoutes\n                    ) {\n                      additionalSsgPaths.set(page, workerResult.prerenderRoutes)\n                      additionalSsgPathsEncoded.set(\n                        page,\n                        workerResult.encodedPrerenderRoutes\n                      )\n                      ssgPageRoutes = workerResult.prerenderRoutes\n                    }\n\n                    if (workerResult.prerenderFallback === 'blocking') {\n                      ssgBlockingFallbackPages.add(page)\n                    } else if (workerResult.prerenderFallback === true) {\n                      ssgStaticFallbackPages.add(page)\n                    }\n                  } else if (workerResult.hasServerProps) {\n                    serverPropsPages.add(page)\n                  } else if (\n                    workerResult.isStatic &&\n                    customAppGetInitialProps === false\n                  ) {\n                    staticPages.add(page)\n                    isStatic = true\n                  }\n\n                  if (hasPages404 && page === '/404') {\n                    if (\n                      !workerResult.isStatic &&\n                      !workerResult.hasStaticProps\n                    ) {\n                      throw new Error(\n                        `\\`pages/404\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                      )\n                    }\n                    // we need to ensure the 404 lambda is present since we use\n                    // it when _app has getInitialProps\n                    if (\n                      customAppGetInitialProps &&\n                      !workerResult.hasStaticProps\n                    ) {\n                      staticPages.delete(page)\n                    }\n                  }\n\n                  if (\n                    STATIC_STATUS_PAGES.includes(page) &&\n                    !workerResult.isStatic &&\n                    !workerResult.hasStaticProps\n                  ) {\n                    throw new Error(\n                      `\\`pages${page}\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                    )\n                  }\n                } catch (err) {\n                  if (err.message !== 'INVALID_DEFAULT_EXPORT') throw err\n                  invalidPages.add(page)\n                }\n              }\n\n              pageInfos.set(page, {\n                size: selfSize,\n                totalSize: allSize,\n                static: isStatic,\n                isSsg,\n                isHybridAmp,\n                ssgPageRoutes,\n                initialRevalidateSeconds: false,\n              })\n            })\n          })\n        )\n        staticCheckWorkers.end()\n\n        return { hasNonStaticErrorPage: nonStaticErrorPage }\n      }\n    )\n\n    if (!hasSsrAmpPages) {\n      requiredServerFiles.ignore.push(\n        path.relative(\n          dir,\n          path.join(\n            path.dirname(\n              require.resolve(\n                'next/dist/compiled/@ampproject/toolbox-optimizer'\n              )\n            ),\n            '**/*'\n          )\n        )\n      )\n    }\n\n    if (serverPropsPages.size > 0 || ssgPages.size > 0) {\n      // We update the routes manifest after the build with the\n      // data routes since we can't determine these until after build\n      routesManifest.dataRoutes = getSortedRoutes([\n        ...serverPropsPages,\n        ...ssgPages,\n      ]).map((page) => {\n        const pagePath = normalizePagePath(page)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${pagePath}.json`\n        )\n\n        let dataRouteRegex: string\n        let namedDataRouteRegex: string | undefined\n        let routeKeys: { [named: string]: string } | undefined\n\n        if (isDynamicRoute(page)) {\n          const routeRegex = getRouteRegex(dataRoute.replace(/\\.json$/, ''))\n\n          dataRouteRegex = normalizeRouteRegex(\n            routeRegex.re.source.replace(/\\(\\?:\\\\\\/\\)\\?\\$$/, '\\\\.json$')\n          )\n          namedDataRouteRegex = routeRegex.namedRegex!.replace(\n            /\\(\\?:\\/\\)\\?\\$$/,\n            '\\\\.json$'\n          )\n          routeKeys = routeRegex.routeKeys\n        } else {\n          dataRouteRegex = normalizeRouteRegex(\n            new RegExp(\n              `^${path.posix.join(\n                '/_next/data',\n                escapeStringRegexp(buildId),\n                `${pagePath}.json`\n              )}$`\n            ).source\n          )\n        }\n\n        return {\n          page,\n          routeKeys,\n          dataRouteRegex,\n          namedDataRouteRegex,\n        }\n      })\n\n      await promises.writeFile(\n        routesManifestPath,\n        JSON.stringify(routesManifest),\n        'utf8'\n      )\n    }\n\n    // Since custom _app.js can wrap the 404 page we have to opt-out of static optimization if it has getInitialProps\n    // Only export the static 404 when there is no /_error present\n    const useStatic404 =\n      !customAppGetInitialProps && (!hasNonStaticErrorPage || hasPages404)\n\n    if (invalidPages.size > 0) {\n      throw new Error(\n        `Build optimization failed: found page${\n          invalidPages.size === 1 ? '' : 's'\n        } without a React Component as default export in \\n${[...invalidPages]\n          .map((pg) => `pages${pg}`)\n          .join(\n            '\\n'\n          )}\\n\\nSee https://err.sh/vercel/next.js/page-without-valid-component for more info.\\n`\n      )\n    }\n\n    await writeBuildId(distDir, buildId)\n\n    if (config.experimental.optimizeCss) {\n      const cssFilePaths = getCssFilePaths(buildManifest)\n\n      requiredServerFiles.files.push(\n        ...cssFilePaths.map((filePath) => path.join(config.distDir, filePath))\n      )\n    }\n\n    await promises.writeFile(\n      path.join(distDir, SERVER_FILES_MANIFEST),\n      JSON.stringify(requiredServerFiles),\n      'utf8'\n    )\n\n    const finalPrerenderRoutes: { [route: string]: SsgRoute } = {}\n    const tbdPrerenderRoutes: string[] = []\n    let ssgNotFoundPaths: string[] = []\n\n    if (postCompileSpinner) postCompileSpinner.stopAndPersist()\n\n    const { i18n } = config\n\n    const usedStaticStatusPages = STATIC_STATUS_PAGES.filter(\n      (page) =>\n        mappedPages[page] && mappedPages[page].startsWith('private-next-pages')\n    )\n    usedStaticStatusPages.forEach((page) => {\n      if (!ssgPages.has(page)) {\n        staticPages.add(page)\n      }\n    })\n\n    const hasPages500 = usedStaticStatusPages.includes('/500')\n    const useDefaultStatic500 = !hasPages500 && !hasNonStaticErrorPage\n\n    const staticGenerationSpan = nextBuildSpan.traceChild('static-generation')\n    await staticGenerationSpan.traceAsyncFn(async () => {\n      const combinedPages = [...staticPages, ...ssgPages]\n\n      detectConflictingPaths(\n        [\n          ...combinedPages,\n          ...pageKeys.filter((page) => !combinedPages.includes(page)),\n        ],\n        ssgPages,\n        additionalSsgPaths\n      )\n      const exportApp = require('../export').default\n      const exportOptions = {\n        silent: false,\n        buildExport: true,\n        threads: config.experimental.cpus,\n        pages: combinedPages,\n        outdir: path.join(distDir, 'export'),\n        statusMessage: 'Generating static pages',\n      }\n      const exportConfig: any = {\n        ...config,\n        initialPageRevalidationMap: {},\n        ssgNotFoundPaths: [] as string[],\n        // Default map will be the collection of automatic statically exported\n        // pages and incremental pages.\n        // n.b. we cannot handle this above in combinedPages because the dynamic\n        // page must be in the `pages` array, but not in the mapping.\n        exportPathMap: (defaultMap: any) => {\n          // Dynamically routed pages should be prerendered to be used as\n          // a client-side skeleton (fallback) while data is being fetched.\n          // This ensures the end-user never sees a 500 or slow response from the\n          // server.\n          //\n          // Note: prerendering disables automatic static optimization.\n          ssgPages.forEach((page) => {\n            if (isDynamicRoute(page)) {\n              tbdPrerenderRoutes.push(page)\n\n              if (ssgStaticFallbackPages.has(page)) {\n                // Override the rendering for the dynamic page to be treated as a\n                // fallback render.\n                if (i18n) {\n                  defaultMap[`/${i18n.defaultLocale}${page}`] = {\n                    page,\n                    query: { __nextFallback: true },\n                  }\n                } else {\n                  defaultMap[page] = { page, query: { __nextFallback: true } }\n                }\n              } else {\n                // Remove dynamically routed pages from the default path map when\n                // fallback behavior is disabled.\n                delete defaultMap[page]\n              }\n            }\n          })\n          // Append the \"well-known\" routes we should prerender for, e.g. blog\n          // post slugs.\n          additionalSsgPaths.forEach((routes, page) => {\n            const encodedRoutes = additionalSsgPathsEncoded.get(page)\n\n            routes.forEach((route, routeIdx) => {\n              defaultMap[route] = {\n                page,\n                query: { __nextSsgPath: encodedRoutes?.[routeIdx] },\n              }\n            })\n          })\n\n          if (useStatic404) {\n            defaultMap['/404'] = {\n              page: hasPages404 ? '/404' : '/_error',\n            }\n          }\n\n          if (useDefaultStatic500) {\n            defaultMap['/500'] = {\n              page: '/_error',\n            }\n          }\n\n          if (i18n) {\n            for (const page of [\n              ...staticPages,\n              ...ssgPages,\n              ...(useStatic404 ? ['/404'] : []),\n              ...(useDefaultStatic500 ? ['/500'] : []),\n            ]) {\n              const isSsg = ssgPages.has(page)\n              const isDynamic = isDynamicRoute(page)\n              const isFallback = isSsg && ssgStaticFallbackPages.has(page)\n\n              for (const locale of i18n.locales) {\n                // skip fallback generation for SSG pages without fallback mode\n                if (isSsg && isDynamic && !isFallback) continue\n                const outputPath = `/${locale}${page === '/' ? '' : page}`\n\n                defaultMap[outputPath] = {\n                  page: defaultMap[page]?.page || page,\n                  query: { __nextLocale: locale },\n                }\n\n                if (isFallback) {\n                  defaultMap[outputPath].query.__nextFallback = true\n                }\n              }\n\n              if (isSsg) {\n                // remove non-locale prefixed variant from defaultMap\n                delete defaultMap[page]\n              }\n            }\n          }\n          return defaultMap\n        },\n        trailingSlash: false,\n      }\n\n      await exportApp(dir, exportOptions, exportConfig)\n\n      const postBuildSpinner = createSpinner({\n        prefixText: `${Log.prefixes.info} Finalizing page optimization`,\n      })\n      ssgNotFoundPaths = exportConfig.ssgNotFoundPaths\n\n      // remove server bundles that were exported\n      for (const page of staticPages) {\n        const serverBundle = getPagePath(page, distDir, isLikeServerless)\n        await promises.unlink(serverBundle)\n      }\n      const serverOutputDir = path.join(\n        distDir,\n        isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n      )\n\n      const moveExportedPage = async (\n        originPage: string,\n        page: string,\n        file: string,\n        isSsg: boolean,\n        ext: 'html' | 'json',\n        additionalSsgFile = false\n      ) => {\n        return staticGenerationSpan\n          .traceChild('move-exported-page')\n          .traceAsyncFn(async () => {\n            file = `${file}.${ext}`\n            const orig = path.join(exportOptions.outdir, file)\n            const pagePath = getPagePath(originPage, distDir, isLikeServerless)\n\n            const relativeDest = path\n              .relative(\n                serverOutputDir,\n                path.join(\n                  path.join(\n                    pagePath,\n                    // strip leading / and then recurse number of nested dirs\n                    // to place from base folder\n                    originPage\n                      .substr(1)\n                      .split('/')\n                      .map(() => '..')\n                      .join('/')\n                  ),\n                  file\n                )\n              )\n              .replace(/\\\\/g, '/')\n\n            const dest = path.join(\n              distDir,\n              isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n              relativeDest\n            )\n\n            if (\n              !isSsg &&\n              !(\n                // don't add static status page to manifest if it's\n                // the default generated version e.g. no pages/500\n                (\n                  STATIC_STATUS_PAGES.includes(page) &&\n                  !usedStaticStatusPages.includes(page)\n                )\n              )\n            ) {\n              pagesManifest[page] = relativeDest\n            }\n\n            const isNotFound = ssgNotFoundPaths.includes(page)\n\n            // for SSG files with i18n the non-prerendered variants are\n            // output with the locale prefixed so don't attempt moving\n            // without the prefix\n            if ((!i18n || additionalSsgFile) && !isNotFound) {\n              await promises.mkdir(path.dirname(dest), { recursive: true })\n              await promises.rename(orig, dest)\n            } else if (i18n && !isSsg) {\n              // this will be updated with the locale prefixed variant\n              // since all files are output with the locale prefix\n              delete pagesManifest[page]\n            }\n\n            if (i18n) {\n              if (additionalSsgFile) return\n\n              for (const locale of i18n.locales) {\n                const curPath = `/${locale}${page === '/' ? '' : page}`\n                const localeExt = page === '/' ? path.extname(file) : ''\n                const relativeDestNoPages = relativeDest.substr('pages/'.length)\n\n                if (isSsg && ssgNotFoundPaths.includes(curPath)) {\n                  continue\n                }\n\n                const updatedRelativeDest = path\n                  .join(\n                    'pages',\n                    locale + localeExt,\n                    // if it's the top-most index page we want it to be locale.EXT\n                    // instead of locale/index.html\n                    page === '/' ? '' : relativeDestNoPages\n                  )\n                  .replace(/\\\\/g, '/')\n\n                const updatedOrig = path.join(\n                  exportOptions.outdir,\n                  locale + localeExt,\n                  page === '/' ? '' : file\n                )\n                const updatedDest = path.join(\n                  distDir,\n                  isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                  updatedRelativeDest\n                )\n\n                if (!isSsg) {\n                  pagesManifest[curPath] = updatedRelativeDest\n                }\n                await promises.mkdir(path.dirname(updatedDest), {\n                  recursive: true,\n                })\n                await promises.rename(updatedOrig, updatedDest)\n              }\n            }\n          })\n      }\n\n      // Only move /404 to /404 when there is no custom 404 as in that case we don't know about the 404 page\n      if (!hasPages404 && useStatic404) {\n        await moveExportedPage('/_error', '/404', '/404', false, 'html')\n      }\n\n      if (useDefaultStatic500) {\n        await moveExportedPage('/_error', '/500', '/500', false, 'html')\n      }\n\n      for (const page of combinedPages) {\n        const isSsg = ssgPages.has(page)\n        const isStaticSsgFallback = ssgStaticFallbackPages.has(page)\n        const isDynamic = isDynamicRoute(page)\n        const hasAmp = hybridAmpPages.has(page)\n        const file = normalizePagePath(page)\n\n        // The dynamic version of SSG pages are only prerendered if the\n        // fallback is enabled. Below, we handle the specific prerenders\n        // of these.\n        const hasHtmlOutput = !(isSsg && isDynamic && !isStaticSsgFallback)\n\n        if (hasHtmlOutput) {\n          await moveExportedPage(page, page, file, isSsg, 'html')\n        }\n\n        if (hasAmp && (!isSsg || (isSsg && !isDynamic))) {\n          const ampPage = `${file}.amp`\n          await moveExportedPage(page, ampPage, ampPage, isSsg, 'html')\n\n          if (isSsg) {\n            await moveExportedPage(page, ampPage, ampPage, isSsg, 'json')\n          }\n        }\n\n        if (isSsg) {\n          // For a non-dynamic SSG page, we must copy its data file\n          // from export, we already moved the HTML file above\n          if (!isDynamic) {\n            await moveExportedPage(page, page, file, isSsg, 'json')\n\n            if (i18n) {\n              // TODO: do we want to show all locale variants in build output\n              for (const locale of i18n.locales) {\n                const localePage = `/${locale}${page === '/' ? '' : page}`\n\n                if (!ssgNotFoundPaths.includes(localePage)) {\n                  finalPrerenderRoutes[localePage] = {\n                    initialRevalidateSeconds:\n                      exportConfig.initialPageRevalidationMap[localePage],\n                    srcRoute: null,\n                    dataRoute: path.posix.join(\n                      '/_next/data',\n                      buildId,\n                      `${file}.json`\n                    ),\n                  }\n                }\n              }\n            } else {\n              finalPrerenderRoutes[page] = {\n                initialRevalidateSeconds:\n                  exportConfig.initialPageRevalidationMap[page],\n                srcRoute: null,\n                dataRoute: path.posix.join(\n                  '/_next/data',\n                  buildId,\n                  `${file}.json`\n                ),\n              }\n            }\n            // Set Page Revalidation Interval\n            const pageInfo = pageInfos.get(page)\n            if (pageInfo) {\n              pageInfo.initialRevalidateSeconds =\n                exportConfig.initialPageRevalidationMap[page]\n              pageInfos.set(page, pageInfo)\n            }\n          } else {\n            // For a dynamic SSG page, we did not copy its data exports and only\n            // copy the fallback HTML file (if present).\n            // We must also copy specific versions of this page as defined by\n            // `getStaticPaths` (additionalSsgPaths).\n            const extraRoutes = additionalSsgPaths.get(page) || []\n            for (const route of extraRoutes) {\n              const pageFile = normalizePagePath(route)\n              await moveExportedPage(page, route, pageFile, isSsg, 'html', true)\n              await moveExportedPage(page, route, pageFile, isSsg, 'json', true)\n\n              if (hasAmp) {\n                const ampPage = `${pageFile}.amp`\n                await moveExportedPage(\n                  page,\n                  ampPage,\n                  ampPage,\n                  isSsg,\n                  'html',\n                  true\n                )\n                await moveExportedPage(\n                  page,\n                  ampPage,\n                  ampPage,\n                  isSsg,\n                  'json',\n                  true\n                )\n              }\n\n              finalPrerenderRoutes[route] = {\n                initialRevalidateSeconds:\n                  exportConfig.initialPageRevalidationMap[route],\n                srcRoute: page,\n                dataRoute: path.posix.join(\n                  '/_next/data',\n                  buildId,\n                  `${normalizePagePath(route)}.json`\n                ),\n              }\n\n              // Set route Revalidation Interval\n              const pageInfo = pageInfos.get(route)\n              if (pageInfo) {\n                pageInfo.initialRevalidateSeconds =\n                  exportConfig.initialPageRevalidationMap[route]\n                pageInfos.set(route, pageInfo)\n              }\n            }\n          }\n        }\n      }\n\n      // remove temporary export folder\n      await recursiveDelete(exportOptions.outdir)\n      await promises.rmdir(exportOptions.outdir)\n      await promises.writeFile(\n        manifestPath,\n        JSON.stringify(pagesManifest, null, 2),\n        'utf8'\n      )\n\n      if (postBuildSpinner) postBuildSpinner.stopAndPersist()\n      console.log()\n    })\n\n    const analysisEnd = process.hrtime(analysisBegin)\n    telemetry.record(\n      eventBuildOptimize(pagePaths, {\n        durationInSeconds: analysisEnd[0],\n        staticPageCount: staticPages.size,\n        staticPropsPageCount: ssgPages.size,\n        serverPropsPageCount: serverPropsPages.size,\n        ssrPageCount:\n          pagePaths.length -\n          (staticPages.size + ssgPages.size + serverPropsPages.size),\n        hasStatic404: useStatic404,\n        hasReportWebVitals: namedExports?.includes('reportWebVitals') ?? false,\n        rewritesCount: rewrites.length,\n        headersCount: headers.length,\n        redirectsCount: redirects.length - 1, // reduce one for trailing slash\n        headersWithHasCount: headers.filter((r: any) => !!r.has).length,\n        rewritesWithHasCount: rewrites.filter((r: any) => !!r.has).length,\n        redirectsWithHasCount: redirects.filter((r: any) => !!r.has).length,\n      })\n    )\n\n    if (ssgPages.size > 0) {\n      const finalDynamicRoutes: PrerenderManifest['dynamicRoutes'] = {}\n      tbdPrerenderRoutes.forEach((tbdRoute) => {\n        const normalizedRoute = normalizePagePath(tbdRoute)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${normalizedRoute}.json`\n        )\n\n        finalDynamicRoutes[tbdRoute] = {\n          routeRegex: normalizeRouteRegex(getRouteRegex(tbdRoute).re.source),\n          dataRoute,\n          fallback: ssgBlockingFallbackPages.has(tbdRoute)\n            ? null\n            : ssgStaticFallbackPages.has(tbdRoute)\n            ? `${normalizedRoute}.html`\n            : false,\n          dataRouteRegex: normalizeRouteRegex(\n            getRouteRegex(dataRoute.replace(/\\.json$/, '')).re.source.replace(\n              /\\(\\?:\\\\\\/\\)\\?\\$$/,\n              '\\\\.json$'\n            )\n          ),\n        }\n      })\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: finalPrerenderRoutes,\n        dynamicRoutes: finalDynamicRoutes,\n        notFoundRoutes: ssgNotFoundPaths,\n        preview: previewProps,\n      }\n\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n      await generateClientSsgManifest(prerenderManifest, {\n        distDir,\n        buildId,\n        locales: config.i18n?.locales || [],\n      })\n    } else {\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: {},\n        dynamicRoutes: {},\n        preview: previewProps,\n        notFoundRoutes: [],\n      }\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n    }\n\n    const images = { ...config.images }\n    const { deviceSizes, imageSizes } = images\n    images.sizes = [...deviceSizes, ...imageSizes]\n\n    await promises.writeFile(\n      path.join(distDir, IMAGES_MANIFEST),\n      JSON.stringify({\n        version: 1,\n        images,\n      }),\n      'utf8'\n    )\n    await promises.writeFile(\n      path.join(distDir, EXPORT_MARKER),\n      JSON.stringify({\n        version: 1,\n        hasExportPathMap: typeof config.exportPathMap === 'function',\n        exportTrailingSlash: config.trailingSlash === true,\n        isNextImageImported: isNextImageImported === true,\n      }),\n      'utf8'\n    )\n    await promises.unlink(path.join(distDir, EXPORT_DETAIL)).catch((err) => {\n      if (err.code === 'ENOENT') {\n        return Promise.resolve()\n      }\n      return Promise.reject(err)\n    })\n\n    staticPages.forEach((pg) => allStaticPages.add(pg))\n    pageInfos.forEach((info: PageInfo, key: string) => {\n      allPageInfos.set(key, info)\n    })\n\n    await nextBuildSpan.traceChild('print-tree-view').traceAsyncFn(() =>\n      printTreeView(Object.keys(mappedPages), allPageInfos, isLikeServerless, {\n        distPath: distDir,\n        buildId: buildId,\n        pagesDir,\n        useStatic404,\n        pageExtensions: config.pageExtensions,\n        buildManifest,\n      })\n    )\n\n    if (debugOutput) {\n      nextBuildSpan\n        .traceChild('print-custom-routes')\n        .traceFn(() => printCustomRoutes({ redirects, rewrites, headers }))\n    }\n\n    if (config.analyticsId) {\n      console.log(\n        chalk.bold.green('Next.js Analytics') +\n          ' is enabled for this production build. ' +\n          \"You'll receive a Real Experience Score computed by all of your visitors.\"\n      )\n      console.log('')\n    }\n\n    await nextBuildSpan\n      .traceChild('telemetry-flush')\n      .traceAsyncFn(() => telemetry.flush())\n  })\n}\n\nexport type ClientSsgManifest = Set<string>\n\nfunction generateClientSsgManifest(\n  prerenderManifest: PrerenderManifest,\n  {\n    buildId,\n    distDir,\n    locales,\n  }: { buildId: string; distDir: string; locales: string[] }\n) {\n  const ssgPages: ClientSsgManifest = new Set<string>([\n    ...Object.entries(prerenderManifest.routes)\n      // Filter out dynamic routes\n      .filter(([, { srcRoute }]) => srcRoute == null)\n      .map(([route]) => normalizeLocalePath(route, locales).pathname),\n    ...Object.keys(prerenderManifest.dynamicRoutes),\n  ])\n\n  const clientSsgManifestContent = `self.__SSG_MANIFEST=${devalue(\n    ssgPages\n  )};self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n  writeFileSync(\n    path.join(distDir, CLIENT_STATIC_FILES_PATH, buildId, '_ssgManifest.js'),\n    clientSsgManifestContent\n  )\n}\n"]}