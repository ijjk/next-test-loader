{"version":3,"sources":["../../../../../build/webpack/config/blocks/base.ts"],"names":["base","ctx","config","mode","isDevelopment","name","isServer","target","bail","isProduction","process","env","__NEXT_TEST_MODE","__NEXT_TEST_WITH_DEVTOOL","devtool","platform","productionBrowserSourceMaps","module","rules","strictExportPresence"],"mappings":"yDAAA,+E,mFAIO,KAAMA,CAAAA,IAAI,CAAG,oBAAM,QAASA,CAAAA,IAAT,CACxBC,GADwB,CAExBC,MAFwB,CAGxB,CACAA,MAAM,CAACC,IAAP,CAAcF,GAAG,CAACG,aAAJ,CAAoB,aAApB,CAAoC,YAAlD,CACAF,MAAM,CAACG,IAAP,CAAcJ,GAAG,CAACK,QAAJ,CAAe,QAAf,CAA0B,QAAxC,CACAJ,MAAM,CAACK,MAAP,CAAgBN,GAAG,CAACK,QAAJ,CAAe,MAAf,CAAwB,KAAxC,CAEA;AACA;AACA;AACAJ,MAAM,CAACM,IAAP,CAAcP,GAAG,CAACQ,YAAlB,CAEA;AACA,GAAIR,GAAG,CAACG,aAAR,CAAuB,CACrB,GAAIM,OAAO,CAACC,GAAR,CAAYC,gBAAZ,EAAgC,CAACF,OAAO,CAACC,GAAR,CAAYE,wBAAjD,CAA2E,CACzEX,MAAM,CAACY,OAAP,CAAiB,KAAjB,CACD,CAFD,IAEO,IAAIJ,OAAO,CAACK,QAAR,GAAqB,OAAzB,CAAkC,CACvC;AACA;AACA;AACAb,MAAM,CAACY,OAAP,CAAiB,mBAAjB,CACD,CALM,IAKA,CACL;AACA;AACA;AACA;AACAZ,MAAM,CAACY,OAAP,CAAiB,iBAAjB,CACD,CACF,CAfD,IAeO,CACL;AACA,GAAIb,GAAG,CAACe,2BAAR,CAAqC,CACnCd,MAAM,CAACY,OAAP,CAAiB,YAAjB,CACD,CAFD,IAEO,CACLZ,MAAM,CAACY,OAAP,CAAiB,KAAjB,CACD,CACF,CAED,GAAI,CAACZ,MAAM,CAACe,MAAZ,CAAoB,CAClBf,MAAM,CAACe,MAAP,CAAgB,CAAEC,KAAK,CAAE,EAAT,CAAhB,CACD,CACDhB,MAAM,CAACe,MAAP,CAAcE,oBAAd,CAAqC,IAArC,CAEA,MAAOjB,CAAAA,MAAP,CACD,CA5CmB,CAAb,C","sourcesContent":["import curry from 'next/dist/compiled/lodash.curry'\nimport { Configuration } from 'webpack'\nimport { ConfigurationContext } from '../utils'\n\nexport const base = curry(function base(\n  ctx: ConfigurationContext,\n  config: Configuration\n) {\n  config.mode = ctx.isDevelopment ? 'development' : 'production'\n  config.name = ctx.isServer ? 'server' : 'client'\n  config.target = ctx.isServer ? 'node' : 'web'\n\n  // Stop compilation early in a production build when an error is encountered.\n  // This behavior isn't desirable in development due to how the HMR system\n  // works, but is a good default for production.\n  config.bail = ctx.isProduction\n\n  // https://webpack.js.org/configuration/devtool/#development\n  if (ctx.isDevelopment) {\n    if (process.env.__NEXT_TEST_MODE && !process.env.__NEXT_TEST_WITH_DEVTOOL) {\n      config.devtool = false\n    } else if (process.platform === 'win32') {\n      // Non-eval based source maps are slow to rebuild, so we only enable\n      // them for Windows. Unfortunately, eval source maps are flagged as\n      // suspicious by Windows Defender and block HMR.\n      config.devtool = 'inline-source-map'\n    } else {\n      // `eval-source-map` provides full-fidelity source maps for the\n      // original source, including columns and original variable names.\n      // This is desirable so the in-browser debugger can correctly pause\n      // and show scoped variables with their original names.\n      config.devtool = 'eval-source-map'\n    }\n  } else {\n    // Enable browser sourcemaps\n    if (ctx.productionBrowserSourceMaps) {\n      config.devtool = 'source-map'\n    } else {\n      config.devtool = false\n    }\n  }\n\n  if (!config.module) {\n    config.module = { rules: [] }\n  }\n  config.module.strictExportPresence = true\n\n  return config\n})\n"]}