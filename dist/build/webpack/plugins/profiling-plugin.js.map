{"version":3,"sources":["../../../../build/webpack/plugins/profiling-plugin.ts"],"names":["pluginName","spans","WeakMap","ProfilingPlugin","apply","compiler","tracer","getCurrentSpan","hooks","compile","tap","span","startSpan","attributes","name","set","done","get","end","compilation","buildModule","module","withSpan","setAttribute","userRequest","normalModuleLoader","loaderContext","parentSpan","currentTraceSpan","succeedModule"],"mappings":"kFAAA,oCAEA,KAAMA,CAAAA,UAAU,CAAG,iBAAnB,CAEO,KAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,OAAJ,EAAd,C,oBAEA,KAAMC,CAAAA,eAAgB,CAC3BC,KAAK,CAACC,QAAD,CAAgB,CACnB;AACA,GAAI,CAACC,eAAOC,cAAP,EAAL,CAA8B,CAC5B,OACD,CAEDF,QAAQ,CAACG,KAAT,CAAeC,OAAf,CAAuBC,GAAvB,CAA2BV,UAA3B,CAAuC,IAAM,CAC3C,KAAMW,CAAAA,IAAI,CAAGL,eAAOM,SAAP,CAAiB,iBAAjB,CAAoC,CAC/CC,UAAU,CAAE,CAAEC,IAAI,CAAET,QAAQ,CAACS,IAAjB,CADmC,CAApC,CAAb,CAGAb,KAAK,CAACc,GAAN,CAAUV,QAAV,CAAoBM,IAApB,EACD,CALD,EAMAN,QAAQ,CAACG,KAAT,CAAeQ,IAAf,CAAoBN,GAApB,CAAwBV,UAAxB,CAAoC,IAAM,CACxCC,KAAK,CAACgB,GAAN,CAAUZ,QAAV,EAAoBa,GAApB,GACD,CAFD,EAGAb,QAAQ,CAACG,KAAT,CAAeW,WAAf,CAA2BT,GAA3B,CAA+BV,UAA/B,CAA4CmB,WAAD,EAAsB,CAC/DA,WAAW,CAACX,KAAZ,CAAkBY,WAAlB,CAA8BV,GAA9B,CAAkCV,UAAlC,CAA+CqB,MAAD,EAAiB,CAC7Df,eAAOgB,QAAP,CAAgBrB,KAAK,CAACgB,GAAN,CAAUZ,QAAV,CAAhB,CAAqC,IAAM,CACzC,KAAMM,CAAAA,IAAI,CAAGL,eAAOM,SAAP,CAAiB,cAAjB,CAAb,CACAD,IAAI,CAACY,YAAL,CAAkB,MAAlB,CAA0BF,MAAM,CAACG,WAAjC,EACAvB,KAAK,CAACc,GAAN,CAAUM,MAAV,CAAkBV,IAAlB,EACD,CAJD,EAKD,CAND,EAQAQ,WAAW,CAACX,KAAZ,CAAkBiB,kBAAlB,CAAqCf,GAArC,CACEV,UADF,CAEE,CAAC0B,aAAD,CAAqBL,MAArB,GAAqC,CACnC,KAAMM,CAAAA,UAAU,CAAG1B,KAAK,CAACgB,GAAN,CAAUI,MAAV,CAAnB,CACAK,aAAa,CAACE,gBAAd,CAAiCD,UAAjC,CACD,CALH,EAQAR,WAAW,CAACX,KAAZ,CAAkBqB,aAAlB,CAAgCnB,GAAhC,CAAoCV,UAApC,CAAiDqB,MAAD,EAAiB,CAC/DpB,KAAK,CAACgB,GAAN,CAAUI,MAAV,EAAkBH,GAAlB,GACD,CAFD,EAGD,CApBD,EAqBD,CArC0B,C","sourcesContent":["import { tracer } from '../../tracer'\n\nconst pluginName = 'ProfilingPlugin'\n\nexport const spans = new WeakMap()\n\nexport class ProfilingPlugin {\n  apply(compiler: any) {\n    // Only enabled when instrumentation is loaded\n    if (!tracer.getCurrentSpan()) {\n      return\n    }\n\n    compiler.hooks.compile.tap(pluginName, () => {\n      const span = tracer.startSpan('webpack-compile', {\n        attributes: { name: compiler.name },\n      })\n      spans.set(compiler, span)\n    })\n    compiler.hooks.done.tap(pluginName, () => {\n      spans.get(compiler).end()\n    })\n    compiler.hooks.compilation.tap(pluginName, (compilation: any) => {\n      compilation.hooks.buildModule.tap(pluginName, (module: any) => {\n        tracer.withSpan(spans.get(compiler), () => {\n          const span = tracer.startSpan('build-module')\n          span.setAttribute('name', module.userRequest)\n          spans.set(module, span)\n        })\n      })\n\n      compilation.hooks.normalModuleLoader.tap(\n        pluginName,\n        (loaderContext: any, module: any) => {\n          const parentSpan = spans.get(module)\n          loaderContext.currentTraceSpan = parentSpan\n        }\n      )\n\n      compilation.hooks.succeedModule.tap(pluginName, (module: any) => {\n        spans.get(module).end()\n      })\n    })\n  }\n}\n"]}