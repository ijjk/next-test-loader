{"version":3,"sources":["../../../../build/webpack/plugins/profiling-plugin.ts"],"names":["pluginName","spans","WeakMap","getNormalModuleLoaderHook","compilation","isWebpack5","webpack","NormalModule","getCompilationHooks","loader","hooks","normalModuleLoader","ProfilingPlugin","apply","compiler","currentSpan","tracer","getCurrentSpan","isRecording","compile","tap","span","startSpan","attributes","name","set","done","get","end","buildModule","module","withSpan","setAttribute","userRequest","loaderContext","parentSpan","currentTraceSpan","succeedModule"],"mappings":"kFAAA,oCACA,2DAEA,KAAMA,CAAAA,UAAU,CAAG,iBAAnB,CAEO,KAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,OAAJ,EAAd,C,oBAEP,QAASC,CAAAA,yBAAT,CAAmCC,WAAnC,CAAqD,CACnD,GAAIC,mBAAJ,CAAgB,CACd;AACA,MAAOC,kBAAQC,YAAR,CAAqBC,mBAArB,CAAyCJ,WAAzC,EAAsDK,MAA7D,CACD,CAED,MAAOL,CAAAA,WAAW,CAACM,KAAZ,CAAkBC,kBAAzB,CACD,CAEM,KAAMC,CAAAA,eAAgB,CAC3BC,KAAK,CAACC,QAAD,CAAgB,CACnB;AACA,KAAMC,CAAAA,WAAW,CAAGC,eAAOC,cAAP,EAApB,CACA,GAAI,CAACF,WAAD,EAAgB,CAACA,WAAW,CAACG,WAAZ,EAArB,CAAgD,CAC9C,OACD,CAEDJ,QAAQ,CAACJ,KAAT,CAAeS,OAAf,CAAuBC,GAAvB,CAA2BpB,UAA3B,CAAuC,IAAM,CAC3C,KAAMqB,CAAAA,IAAI,CAAGL,eAAOM,SAAP,CAAiB,iBAAjB,CAAoC,CAC/CC,UAAU,CAAE,CAAEC,IAAI,CAAEV,QAAQ,CAACU,IAAjB,CADmC,CAApC,CAAb,CAGAvB,KAAK,CAACwB,GAAN,CAAUX,QAAV,CAAoBO,IAApB,EACD,CALD,EAMAP,QAAQ,CAACJ,KAAT,CAAegB,IAAf,CAAoBN,GAApB,CAAwBpB,UAAxB,CAAoC,IAAM,CACxCC,KAAK,CAAC0B,GAAN,CAAUb,QAAV,EAAoBc,GAApB,GACD,CAFD,EAGAd,QAAQ,CAACJ,KAAT,CAAeN,WAAf,CAA2BgB,GAA3B,CAA+BpB,UAA/B,CAA4CI,WAAD,EAAsB,CAC/DA,WAAW,CAACM,KAAZ,CAAkBmB,WAAlB,CAA8BT,GAA9B,CAAkCpB,UAAlC,CAA+C8B,MAAD,EAAiB,CAC7Dd,eAAOe,QAAP,CAAgB9B,KAAK,CAAC0B,GAAN,CAAUb,QAAV,CAAhB,CAAqC,IAAM,CACzC,KAAMO,CAAAA,IAAI,CAAGL,eAAOM,SAAP,CAAiB,cAAjB,CAAb,CACAD,IAAI,CAACW,YAAL,CAAkB,MAAlB,CAA0BF,MAAM,CAACG,WAAjC,EACAhC,KAAK,CAACwB,GAAN,CAAUK,MAAV,CAAkBT,IAAlB,EACD,CAJD,EAKD,CAND,EAQAlB,yBAAyB,CAACC,WAAD,CAAzB,CAAuCgB,GAAvC,CACEpB,UADF,CAEE,CAACkC,aAAD,CAAqBJ,MAArB,GAAqC,CACnC,KAAMK,CAAAA,UAAU,CAAGlC,KAAK,CAAC0B,GAAN,CAAUG,MAAV,CAAnB,CACAI,aAAa,CAACE,gBAAd,CAAiCD,UAAjC,CACD,CALH,EAQA/B,WAAW,CAACM,KAAZ,CAAkB2B,aAAlB,CAAgCjB,GAAhC,CAAoCpB,UAApC,CAAiD8B,MAAD,EAAiB,CAC/D7B,KAAK,CAAC0B,GAAN,CAAUG,MAAV,EAAkBF,GAAlB,GACD,CAFD,EAGD,CApBD,EAqBD,CAtC0B,C","sourcesContent":["import { tracer } from '../../tracer'\nimport { webpack, isWebpack5 } from 'next/dist/compiled/webpack/webpack'\n\nconst pluginName = 'ProfilingPlugin'\n\nexport const spans = new WeakMap()\n\nfunction getNormalModuleLoaderHook(compilation: any) {\n  if (isWebpack5) {\n    // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n    return webpack.NormalModule.getCompilationHooks(compilation).loader\n  }\n\n  return compilation.hooks.normalModuleLoader\n}\n\nexport class ProfilingPlugin {\n  apply(compiler: any) {\n    // Only enabled when instrumentation is loaded\n    const currentSpan = tracer.getCurrentSpan()\n    if (!currentSpan || !currentSpan.isRecording()) {\n      return\n    }\n\n    compiler.hooks.compile.tap(pluginName, () => {\n      const span = tracer.startSpan('webpack-compile', {\n        attributes: { name: compiler.name },\n      })\n      spans.set(compiler, span)\n    })\n    compiler.hooks.done.tap(pluginName, () => {\n      spans.get(compiler).end()\n    })\n    compiler.hooks.compilation.tap(pluginName, (compilation: any) => {\n      compilation.hooks.buildModule.tap(pluginName, (module: any) => {\n        tracer.withSpan(spans.get(compiler), () => {\n          const span = tracer.startSpan('build-module')\n          span.setAttribute('name', module.userRequest)\n          spans.set(module, span)\n        })\n      })\n\n      getNormalModuleLoaderHook(compilation).tap(\n        pluginName,\n        (loaderContext: any, module: any) => {\n          const parentSpan = spans.get(module)\n          loaderContext.currentTraceSpan = parentSpan\n        }\n      )\n\n      compilation.hooks.succeedModule.tap(pluginName, (module: any) => {\n        spans.get(module).end()\n      })\n    })\n  }\n}\n"]}