{"version":3,"sources":["../../client/image.tsx"],"names":["loaders","imgix","imgixLoader","cloudinary","cloudinaryLoader","default","defaultLoader","imageData","process","env","__NEXT_IMAGE_OPTS","breakpoints","sizes","cachedObserver","IntersectionObserver","window","getObserver","undefined","entries","forEach","entry","isIntersecting","lazyImage","target","dataset","src","srcset","classList","remove","unobserve","rootMargin","computeSrc","host","unoptimized","callLoader","selectedHost","hosts","NODE_ENV","console","error","width","loader","root","path","generateSrcSet","widths","map","join","generatePreload","Image","priority","lazy","className","rest","thisEl","slice","current","observer","observe","imgSrc","imgSrcSet","imgAttributes","srcSet","shouldPreload","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useRef } from 'react'\nimport Head from '../next-server/lib/head'\n\nconst loaders: { [key: string]: (props: LoaderProps) => string } = {\n  imgix: imgixLoader,\n  cloudinary: cloudinaryLoader,\n  default: defaultLoader,\n}\n\ntype ImageData = {\n  sizes?: number[]\n  hosts: {\n    [key: string]: {\n      path: string\n      loader: string\n    }\n  }\n}\n\ntype ImageProps = Omit<\n  JSX.IntrinsicElements['img'],\n  'src' | 'srcSet' | 'ref'\n> & {\n  src: string\n  host?: string\n  priority?: boolean\n  lazy?: boolean\n  unoptimized?: boolean\n}\n\nlet imageData: any = process.env.__NEXT_IMAGE_OPTS\nconst breakpoints = imageData.sizes || [640, 1024, 1600]\n\nlet cachedObserver: IntersectionObserver\nconst IntersectionObserver =\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\n\nfunction getObserver(): IntersectionObserver | undefined {\n  // Return shared instance of IntersectionObserver if already created\n  if (cachedObserver) {\n    return cachedObserver\n  }\n\n  // Only create shared IntersectionObserver if supported in browser\n  if (!IntersectionObserver) {\n    return undefined\n  }\n\n  return (cachedObserver = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          let lazyImage = entry.target as HTMLImageElement\n          if (lazyImage.dataset.src) {\n            lazyImage.src = lazyImage.dataset.src\n          }\n          if (lazyImage.dataset.srcset) {\n            lazyImage.srcset = lazyImage.dataset.srcset\n          }\n          lazyImage.classList.remove('__lazy')\n          cachedObserver.unobserve(lazyImage)\n        }\n      })\n    },\n    { rootMargin: '200px' }\n  ))\n}\n\nfunction computeSrc(src: string, host: string, unoptimized: boolean): string {\n  if (unoptimized) {\n    return src\n  }\n  if (!host) {\n    // No host provided, use default\n    return callLoader(src, 'default')\n  } else {\n    let selectedHost = imageData.hosts[host]\n    if (!selectedHost) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          `Image tag is used specifying host ${host}, but that host is not defined in next.config`\n        )\n      }\n      return src\n    }\n    return callLoader(src, host)\n  }\n}\n\nfunction callLoader(src: string, host: string, width?: number): string {\n  let loader = loaders[imageData.hosts[host].loader || 'default']\n  return loader({ root: imageData.hosts[host].path, src, width })\n}\n\ntype SrcSetData = {\n  src: string\n  host: string\n  widths: number[]\n}\n\nfunction generateSrcSet({ src, host, widths }: SrcSetData): string {\n  // At each breakpoint, generate an image url using the loader, such as:\n  // ' www.example.com/foo.jpg?w=480 480w, '\n  return widths\n    .map((width: number) => `${callLoader(src, host, width)} ${width}w`)\n    .join(', ')\n}\n\ntype PreloadData = {\n  src: string\n  host: string\n  widths: number[]\n  sizes?: string\n  unoptimized?: boolean\n}\n\nfunction generatePreload({\n  src,\n  host,\n  widths,\n  unoptimized = false,\n  sizes,\n}: PreloadData): ReactElement {\n  // This function generates an image preload that makes use of the \"imagesrcset\" and \"imagesizes\"\n  // attributes for preloading responsive images. They're still experimental, but fully backward\n  // compatible, as the link tag includes all necessary attributes, even if the final two are ignored.\n  // See: https://web.dev/preload-responsive-images/\n  return (\n    <Head>\n      <link\n        rel=\"preload\"\n        as=\"image\"\n        href={computeSrc(src, host, unoptimized)}\n        // @ts-ignore: imagesrcset and imagesizes not yet in the link element type\n        imagesrcset={generateSrcSet({ src, host, widths })}\n        imagesizes={sizes}\n      />\n    </Head>\n  )\n}\n\nexport default function Image({\n  src,\n  host,\n  sizes,\n  unoptimized = false,\n  priority = false,\n  lazy = false,\n  className,\n  ...rest\n}: ImageProps) {\n  const thisEl = useRef<HTMLImageElement>(null)\n\n  // Sanity Checks:\n  if (process.env.NODE_ENV !== 'production') {\n    if (unoptimized && host) {\n      console.error(`Image tag used specifying both a host and the unoptimized attribute--these are mutually exclusive. \n          With the unoptimized attribute, no host will be used, so specify an absolute URL.`)\n    }\n  }\n  if (host && !imageData.hosts[host]) {\n    // If unregistered host is selected, log an error and use the default instead\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(`Image host identifier ${host} could not be resolved.`)\n    }\n    host = 'default'\n  }\n  // If priority and lazy are present, log an error and use priority only.\n  if (priority && lazy) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        `Image with src ${src} has both priority and lazy tags. Only one should be used.`\n      )\n    }\n    lazy = false\n  }\n\n  host = host || 'default'\n\n  // Normalize provided src\n  if (src[0] === '/') {\n    src = src.slice(1)\n  }\n\n  useEffect(() => {\n    const target = thisEl.current\n\n    if (target && lazy) {\n      const observer = getObserver()\n\n      if (observer) {\n        observer.observe(target)\n\n        return () => {\n          observer.unobserve(target)\n        }\n      }\n    }\n  }, [thisEl, lazy])\n\n  // Generate attribute values\n  const imgSrc = computeSrc(src, host, unoptimized)\n  const imgSrcSet = !unoptimized\n    ? generateSrcSet({\n        src,\n        host: host,\n        widths: breakpoints,\n      })\n    : undefined\n\n  let imgAttributes:\n    | {\n        src: string\n        srcSet?: string\n      }\n    | {\n        'data-src': string\n        'data-srcset'?: string\n      }\n  if (!lazy) {\n    imgAttributes = {\n      src: imgSrc,\n    }\n    if (imgSrcSet) {\n      imgAttributes.srcSet = imgSrcSet\n    }\n  } else {\n    imgAttributes = {\n      'data-src': imgSrc,\n    }\n    if (imgSrcSet) {\n      imgAttributes['data-srcset'] = imgSrcSet\n    }\n    className = className ? className + ' __lazy' : '__lazy'\n  }\n\n  // No need to add preloads on the client side--by the time the application is hydrated,\n  // it's too late for preloads\n  const shouldPreload = priority && typeof window === 'undefined'\n\n  return (\n    <div>\n      {shouldPreload\n        ? generatePreload({\n            src,\n            host,\n            widths: breakpoints,\n            unoptimized,\n            sizes,\n          })\n        : ''}\n      <img\n        {...rest}\n        {...imgAttributes}\n        className={className}\n        sizes={sizes}\n        ref={thisEl}\n      />\n    </div>\n  )\n}\n\n//BUILT IN LOADERS\n\ntype LoaderProps = {\n  root: string\n  src: string\n  width?: number\n}\n\nfunction imgixLoader({ root, src, width }: LoaderProps): string {\n  return `${root}${src}${width ? '?w=' + width : ''}`\n}\n\nfunction cloudinaryLoader({ root, src, width }: LoaderProps): string {\n  return `${root}${width ? 'w_' + width + '/' : ''}${src}`\n}\n\nfunction defaultLoader({ root, src, width }: LoaderProps): string {\n  // TODO: change quality parameter to be configurable\n  return `${root}?url=${encodeURIComponent(src)}&${\n    width ? `w=${width}&` : ''\n  }q=100`\n}\n"]}