{"version":3,"sources":["../../client/next-dev.js"],"names":["__REPLACE_NOOP_IMPORT__","window","EventSource","EventSourcePolyfill","__NEXT_DATA__","assetPrefix","prefix","webpackHMR","next","version","router","emitter","render","renderError","then","renderCtx","buildIndicatorHandler","devPagesManifestListener","event","data","indexOf","fetch","res","json","manifest","__DEV_PAGES_MANIFEST","catch","err","console","log","pages","JSON","parse","clc","includes","pathname","clearIndicator","replace","String","query","URLSearchParams","location","search","asPath","finally","unfiltered","process","env","__NEXT_BUILD_INDICATOR","handler","error"],"mappings":"gGACA,oBACA,wFACA,6FACA,uGACA,gFACA,gCACA,4DACA,mEARA,qC,CAaA;AACA;AACA;AACA;AACA;AACAA,uBAAuB,CAEvB;AACA,GAAI,CAACC,MAAM,CAACC,WAAZ,CAAyB,CACvBD,MAAM,CAACC,WAAP,CAAqBC,4BAArB,CACD,CAED,KAAM,CACJC,aAAa,CAAE,CAAEC,WAAF,CADX,EAEFJ,MAFJ,CAIA,KAAMK,CAAAA,MAAM,CAAGD,WAAW,EAAI,EAA9B,CACA,KAAME,CAAAA,UAAU,CAAG,yCAAnB,CAEAN,MAAM,CAACO,IAAP,CAAc,CACZC,OAAO,CAAPA,SADY,CAEZ;AACA,GAAIC,CAAAA,MAAJ,EAAa,CACX,MAAOA,SAAP,CACD,CALW,CAMZC,OAAO,CAAPA,SANY,CAOZC,MAAM,CAANA,QAPY,CAQZC,WAAW,CAAXA,aARY,CAAd,CAUA,eAAS,CAAEN,UAAF,CAAT,EACGO,IADH,CACQ,CAAC,CAAEC,SAAF,CAAD,GAAmB,CACvB,mCAAoB,CAAEV,WAAW,CAAEC,MAAf,CAApB,EAEA,GAAIU,CAAAA,qBAAqB,CAAG,IAAM,CAAE,CAApC,CAEA,QAASC,CAAAA,wBAAT,CAAkCC,KAAlC,CAAyC,CACvC,GAAIA,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,kBAAnB,IAA2C,CAAC,CAAhD,CAAmD,CACjDC,KAAK,CAAE,GAAEf,MAAO,kDAAX,CAAL,CACGQ,IADH,CACSQ,GAAD,EAASA,GAAG,CAACC,IAAJ,EADjB,EAEGT,IAFH,CAESU,QAAD,EAAc,CAClBvB,MAAM,CAACwB,oBAAP,CAA8BD,QAA9B,CACD,CAJH,EAKGE,KALH,CAKUC,GAAD,EAAS,CACdC,OAAO,CAACC,GAAR,CAAa,kCAAb,CAAgDF,GAAhD,EACD,CAPH,EAQD,CATD,IASO,IAAIT,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,mBAAnB,IAA4C,CAAC,CAAjD,CAAoD,CACzD,KAAM,CAAEU,KAAF,EAAYC,IAAI,CAACC,KAAL,CAAWd,KAAK,CAACC,IAAjB,CAAlB,CAEA,GAAI,CAACT,SAAOuB,GAAR,EAAeH,KAAK,CAACI,QAAN,CAAexB,SAAOyB,QAAtB,CAAnB,CAAoD,CAClDP,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAEAb,qBAAqB,CAAC,UAAD,CAArB,CAEA,KAAMoB,CAAAA,cAAc,CAAG,IAAMpB,qBAAqB,CAAC,OAAD,CAAlD,CAEAN,SACG2B,OADH,CAEI3B,SAAOyB,QAAP,CACE,GADF,CAEEG,MAAM,CACJ,wBACE,wCAAuB5B,SAAO6B,KAA9B,CADF,CAEE,GAAIC,CAAAA,eAAJ,CAAoBC,QAAQ,CAACC,MAA7B,CAFF,CADI,CAJZ,CAUIhC,SAAOiC,MAVX,EAYGC,OAZH,CAYWR,cAZX,EAaD,CACF,CACF,CACDnB,wBAAwB,CAAC4B,UAAzB,CAAsC,IAAtC,CACA,oCAAmB5B,wBAAnB,EAEA,GAAI6B,OAAO,CAACC,GAAR,CAAYC,sBAAhB,CAAwC,CACtC,6BAAwBC,OAAD,EAAa,CAClCjC,qBAAqB,CAAGiC,OAAxB,CACD,CAFD,EAGD,CAED;AACA,yBAAe,IAAM,CACnB,aAAOlC,SAAP,EACD,CAFD,EAGD,CAvDH,EAwDGW,KAxDH,CAwDUC,GAAD,EAAS,CACdC,OAAO,CAACsB,KAAR,CAAc,sBAAd,CAAsCvB,GAAtC,EACD,CA1DH","sourcesContent":["/* globals __REPLACE_NOOP_IMPORT__ */\nimport { initNext, version, router, emitter, render, renderError } from './'\nimport EventSourcePolyfill from './dev/event-source-polyfill'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport initWebpackHMR from './dev/webpack-hot-middleware-client'\nimport initializeBuildWatcher from './dev/dev-build-watcher'\nimport { displayContent } from './dev/fouc'\nimport { addMessageListener } from './dev/error-overlay/eventsource'\nimport {\n  assign,\n  urlQueryToSearchParams,\n} from '../shared/lib/router/utils/querystring'\n\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n__REPLACE_NOOP_IMPORT__\n\n// Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst {\n  __NEXT_DATA__: { assetPrefix },\n} = window\n\nconst prefix = assetPrefix || ''\nconst webpackHMR = initWebpackHMR()\n\nwindow.next = {\n  version,\n  // router is initialized later so it has to be live-binded\n  get router() {\n    return router\n  },\n  emitter,\n  render,\n  renderError,\n}\ninitNext({ webpackHMR })\n  .then(({ renderCtx }) => {\n    initOnDemandEntries({ assetPrefix: prefix })\n\n    let buildIndicatorHandler = () => {}\n\n    function devPagesManifestListener(event) {\n      if (event.data.indexOf('devPagesManifest') !== -1) {\n        fetch(`${prefix}/_next/static/development/_devPagesManifest.json`)\n          .then((res) => res.json())\n          .then((manifest) => {\n            window.__DEV_PAGES_MANIFEST = manifest\n          })\n          .catch((err) => {\n            console.log(`Failed to fetch devPagesManifest`, err)\n          })\n      } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n        const { pages } = JSON.parse(event.data)\n\n        if (!router.clc && pages.includes(router.pathname)) {\n          console.log('Refreshing page data due to server-side change')\n\n          buildIndicatorHandler('building')\n\n          const clearIndicator = () => buildIndicatorHandler('built')\n\n          router\n            .replace(\n              router.pathname +\n                '?' +\n                String(\n                  assign(\n                    urlQueryToSearchParams(router.query),\n                    new URLSearchParams(location.search)\n                  )\n                ),\n              router.asPath\n            )\n            .finally(clearIndicator)\n        }\n      }\n    }\n    devPagesManifestListener.unfiltered = true\n    addMessageListener(devPagesManifestListener)\n\n    if (process.env.__NEXT_BUILD_INDICATOR) {\n      initializeBuildWatcher((handler) => {\n        buildIndicatorHandler = handler\n      })\n    }\n\n    // delay rendering until after styles have been applied in development\n    displayContent(() => {\n      render(renderCtx)\n    })\n  })\n  .catch((err) => {\n    console.error('Error was not caught', err)\n  })\n"]}