{"version":3,"sources":["lib/eslint/runLintCheck.ts"],"sourcesContent":["import { promises as fs } from 'fs'\nimport chalk from 'chalk'\nimport path from 'path'\n\nimport findUp from 'next/dist/compiled/find-up'\nimport semver from 'next/dist/compiled/semver'\nimport * as CommentJson from 'next/dist/compiled/comment-json'\n\nimport { LintResult, formatResults } from './customFormatter'\nimport { writeDefaultConfig } from './writeDefaultConfig'\nimport { existsSync, findPagesDir } from '../find-pages-dir'\nimport {\n  hasNecessaryDependencies,\n  NecessaryDependencies,\n} from '../has-necessary-dependencies'\n\nimport * as Log from '../../build/output/log'\nimport { EventLintCheckCompleted } from '../../telemetry/events/build'\n\ntype Config = {\n  plugins: string[]\n  rules: { [key: string]: Array<number | string> }\n}\n\nasync function lint(\n  deps: NecessaryDependencies,\n  baseDir: string,\n  lintDirs: string[],\n  eslintrcFile: string | null,\n  pkgJsonPath: string | null,\n  eslintOptions: any = null,\n  reportErrorsOnly: boolean = false,\n  maxWarnings: number = -1\n): Promise<\n  | string\n  | null\n  | {\n      output: string | null\n      isError: boolean\n      eventInfo: EventLintCheckCompleted\n    }\n> {\n  // Load ESLint after we're sure it exists:\n  const mod = await import(deps.resolved.get('eslint')!)\n\n  const { ESLint } = mod\n  let eslintVersion = ESLint?.version\n\n  if (!ESLint) {\n    eslintVersion = mod?.CLIEngine?.version\n\n    if (!eslintVersion || semver.lt(eslintVersion, '7.0.0')) {\n      return `${chalk.red(\n        'error'\n      )} - Your project has an older version of ESLint installed${\n        eslintVersion ? ' (' + eslintVersion + ')' : ''\n      }. Please upgrade to ESLint version 7 or later`\n    }\n\n    return `${chalk.red(\n      'error'\n    )} - ESLint class not found. Please upgrade to ESLint version 7 or later`\n  }\n  let options: any = {\n    useEslintrc: true,\n    baseConfig: {},\n    errorOnUnmatchedPattern: false,\n    extensions: ['.js', '.jsx', '.ts', '.tsx'],\n    ...eslintOptions,\n  }\n  let eslint = new ESLint(options)\n\n  let nextEslintPluginIsEnabled = false\n  const pagesDirRules = ['@next/next/no-html-link-for-pages']\n\n  for (const configFile of [eslintrcFile, pkgJsonPath]) {\n    if (!configFile) continue\n\n    const completeConfig: Config = await eslint.calculateConfigForFile(\n      configFile\n    )\n\n    if (completeConfig.plugins?.includes('@next/next')) {\n      nextEslintPluginIsEnabled = true\n      break\n    }\n  }\n\n  const pagesDir = findPagesDir(baseDir)\n\n  if (nextEslintPluginIsEnabled) {\n    let updatedPagesDir = false\n\n    for (const rule of pagesDirRules) {\n      if (\n        !options.baseConfig!.rules?.[rule] &&\n        !options.baseConfig!.rules?.[\n          rule.replace('@next/next', '@next/babel-plugin-next')\n        ]\n      ) {\n        if (!options.baseConfig!.rules) {\n          options.baseConfig!.rules = {}\n        }\n        options.baseConfig!.rules[rule] = [1, pagesDir]\n        updatedPagesDir = true\n      }\n    }\n\n    if (updatedPagesDir) {\n      eslint = new ESLint(options)\n    }\n  }\n  const lintStart = process.hrtime()\n\n  let results = await eslint.lintFiles(lintDirs)\n  if (options.fix) await ESLint.outputFixes(results)\n  if (reportErrorsOnly) results = await ESLint.getErrorResults(results) // Only return errors if --quiet flag is used\n\n  const formattedResult = formatResults(baseDir, results)\n  const lintEnd = process.hrtime(lintStart)\n  const totalWarnings = results.reduce(\n    (sum: number, file: LintResult) => sum + file.warningCount,\n    0\n  )\n\n  return {\n    output: formattedResult.output,\n    isError:\n      ESLint.getErrorResults(results)?.length > 0 ||\n      (maxWarnings >= 0 && totalWarnings > maxWarnings),\n    eventInfo: {\n      durationInSeconds: lintEnd[0],\n      eslintVersion: eslintVersion,\n      lintedFilesCount: results.length,\n      lintFix: !!options.fix,\n      nextEslintPluginVersion: nextEslintPluginIsEnabled\n        ? require(path.join(\n            path.dirname(deps.resolved.get('eslint-config-next')!),\n            'package.json'\n          )).version\n        : null,\n      nextEslintPluginErrorsCount: formattedResult.totalNextPluginErrorCount,\n      nextEslintPluginWarningsCount:\n        formattedResult.totalNextPluginWarningCount,\n    },\n  }\n}\n\nexport async function runLintCheck(\n  baseDir: string,\n  lintDirs: string[],\n  lintDuringBuild: boolean = false,\n  eslintOptions: any = null,\n  reportErrorsOnly: boolean = false,\n  maxWarnings: number = -1\n): ReturnType<typeof lint> {\n  try {\n    // Find user's .eslintrc file\n    const eslintrcFile =\n      (await findUp(\n        [\n          '.eslintrc.js',\n          '.eslintrc.yaml',\n          '.eslintrc.yml',\n          '.eslintrc.json',\n          '.eslintrc',\n        ],\n        {\n          cwd: baseDir,\n        }\n      )) ?? null\n\n    const pkgJsonPath = (await findUp('package.json', { cwd: baseDir })) ?? null\n    let packageJsonConfig = null\n    if (pkgJsonPath) {\n      const pkgJsonContent = await fs.readFile(pkgJsonPath, {\n        encoding: 'utf8',\n      })\n      packageJsonConfig = CommentJson.parse(pkgJsonContent)\n    }\n\n    // Warning displayed if no ESLint configuration is present during build\n    if (lintDuringBuild && !eslintrcFile && !packageJsonConfig.eslintConfig) {\n      Log.warn(\n        `No ESLint configuration detected. Run ${chalk.bold.cyan(\n          'next lint'\n        )} to begin setup`\n      )\n      return null\n    }\n\n    // Ensure ESLint and necessary plugins and configs are installed:\n    const deps: NecessaryDependencies = await hasNecessaryDependencies(\n      baseDir,\n      false,\n      true,\n      lintDuringBuild\n    )\n\n    // Write default ESLint config if none is present\n    // Check for /pages and src/pages is to make sure this happens in Next.js folder\n    if (\n      existsSync(path.join(baseDir, 'pages')) ||\n      existsSync(path.join(baseDir, 'src/pages'))\n    ) {\n      await writeDefaultConfig(eslintrcFile, pkgJsonPath, packageJsonConfig)\n    }\n\n    // Run ESLint\n    return await lint(\n      deps,\n      baseDir,\n      lintDirs,\n      eslintrcFile,\n      pkgJsonPath,\n      eslintOptions,\n      reportErrorsOnly,\n      maxWarnings\n    )\n  } catch (err) {\n    throw err\n  }\n}\n"],"names":[],"mappings":"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"}