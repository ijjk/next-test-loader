{"version":3,"sources":["lib/recursive-delete.ts"],"sourcesContent":["import { promises } from 'fs'\nimport { join } from 'path'\nimport { promisify } from 'util'\n\nconst sleep = promisify(setTimeout)\n\nconst unlinkFile = async (p: string, t = 1): Promise<void> => {\n  try {\n    await promises.unlink(p)\n  } catch (e) {\n    if (\n      (e.code === 'EBUSY' ||\n        e.code === 'ENOTEMPTY' ||\n        e.code === 'EPERM' ||\n        e.code === 'EMFILE') &&\n      t < 3\n    ) {\n      await sleep(t * 100)\n      return unlinkFile(p, t++)\n    }\n\n    if (e.code === 'ENOENT') {\n      return\n    }\n\n    throw e\n  }\n}\n\n/**\n * Recursively delete directory contents\n * @param  {string} dir Directory to delete the contents of\n * @param  {RegExp} [exclude] Exclude based on relative file path\n * @param  {string} [previousPath] Ensures that parameter dir exists, this is not passed recursively\n * @returns Promise void\n */\nexport async function recursiveDelete(\n  dir: string,\n  exclude?: RegExp,\n  previousPath: string = ''\n): Promise<void> {\n  let result\n  try {\n    result = await promises.readdir(dir)\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      return\n    }\n    throw e\n  }\n\n  await Promise.all(\n    result.map(async (part: string) => {\n      const absolutePath = join(dir, part)\n      const pathStat = await promises.stat(absolutePath).catch((e) => {\n        if (e.code !== 'ENOENT') throw e\n      })\n      if (!pathStat) {\n        return\n      }\n\n      const pp = join(previousPath, part)\n      if (pathStat.isDirectory() && (!exclude || !exclude.test(pp))) {\n        await recursiveDelete(absolutePath, exclude, pp)\n        return promises.rmdir(absolutePath)\n      }\n\n      if (!exclude || !exclude.test(pp)) {\n        return unlinkFile(absolutePath)\n      }\n    })\n  )\n}\n"],"names":[],"mappings":";;;;QAoCsB,eAAe,GAAf,eAAe;AApCZ,GAAI,CAAJ,GAAI;AACR,GAAM,CAAN,KAAM;AACD,GAAM,CAAN,KAAM;AAEhC,KAAK,CAAC,KAAK,OAFe,KAAM,YAER,UAAU;AAElC,KAAK,CAAC,UAAU,UAAU,CAAS,EAAE,CAAC,GAAG,CAAC,GAAoB,CAAC;QACzD,CAAC;cAPkB,GAAI,UAQV,MAAM,CAAC,CAAC;IACzB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACX,EAAE,GACC,CAAC,CAAC,IAAI,MAAK,KAAO,KACjB,CAAC,CAAC,IAAI,MAAK,SAAW,KACtB,CAAC,CAAC,IAAI,MAAK,KAAO,KAClB,CAAC,CAAC,IAAI,MAAK,MAAQ,MACrB,CAAC,GAAG,CAAC,EACL,CAAC;kBACK,KAAK,CAAC,CAAC,GAAG,GAAG;mBACZ,UAAU,CAAC,CAAC,EAAE,CAAC;QACxB,CAAC;QAED,EAAE,EAAE,CAAC,CAAC,IAAI,MAAK,MAAQ,GAAE,CAAC;;QAE1B,CAAC;QAED,KAAK,CAAC,CAAC;IACT,CAAC;AACH,CAAC;eASqB,eAAe,CACnC,GAAW,EACX,OAAgB,EAChB,YAAoB,OACL,CAAC;IAChB,GAAG,CAAC,MAAM;QACN,CAAC;QACH,MAAM,SA3Ce,GAAI,UA2CD,OAAO,CAAC,GAAG;IACrC,CAAC,QAAQ,CAAC,EAAE,CAAC;QACX,EAAE,EAAE,CAAC,CAAC,IAAI,MAAK,MAAQ,GAAE,CAAC;;QAE1B,CAAC;QACD,KAAK,CAAC,CAAC;IACT,CAAC;UAEK,OAAO,CAAC,GAAG,CACf,MAAM,CAAC,GAAG,QAAQ,IAAY,GAAK,CAAC;QAClC,KAAK,CAAC,YAAY,OApDH,KAAM,OAoDK,GAAG,EAAE,IAAI;QACnC,KAAK,CAAC,QAAQ,SAtDK,GAAI,UAsDS,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,GAAK,CAAC;YAC/D,EAAE,EAAE,CAAC,CAAC,IAAI,MAAK,MAAQ,GAAE,KAAK,CAAC,CAAC;QAClC,CAAC;QACD,EAAE,GAAG,QAAQ,EAAE,CAAC;;QAEhB,CAAC;QAED,KAAK,CAAC,EAAE,OA5DO,KAAM,OA4DL,YAAY,EAAE,IAAI;QAClC,EAAE,EAAE,QAAQ,CAAC,WAAW,QAAQ,OAAO,KAAK,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;kBACxD,eAAe,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE;mBA/D9B,GAAI,UAgEL,KAAK,CAAC,YAAY;QACpC,CAAC;QAED,EAAE,GAAG,OAAO,KAAK,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;mBAC3B,UAAU,CAAC,YAAY;QAChC,CAAC;IACH,CAAC;AAEL,CAAC"}