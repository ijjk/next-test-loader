{"version":3,"sources":["../../../../next-server/lib/i18n/detect-domain-locale.ts"],"names":["detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","item","domainHostname","domain","split","toLowerCase","defaultLocale"],"mappings":"mFAAO,QAASA,CAAAA,kBAAT,CACLC,WADK,CAQLC,QARK,CASLC,cATK,CAUL,CACA,GAAIC,CAAAA,UAAJ,CAQA,GAAIH,WAAJ,CAAiB,CACf,IAAK,KAAMI,CAAAA,IAAX,GAAmBJ,CAAAA,WAAnB,CAAgC,kBAC9B;AACA,KAAMK,CAAAA,cAAc,eAAGD,IAAI,CAACE,MAAR,eAAG,aAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,EAA2BC,WAA3B,EAAvB,CACA,GACEP,QAAQ,GAAKI,cAAb,EACA,CAAAH,cAAc,MAAd,QAAAA,cAAc,CAAEM,WAAhB,MAAkCJ,IAAI,CAACK,aAAL,CAAmBD,WAAnB,EAFpC,CAGE,CACAL,UAAU,CAAGC,IAAb,CACA,MACD,CACF,CACF,CAED,MAAOD,CAAAA,UAAP,CACD","sourcesContent":["export function detectDomainLocale(\n  domainItems:\n    | Array<{\n        http?: boolean\n        domain: string\n        defaultLocale: string\n      }>\n    | undefined,\n  hostname?: string,\n  detectedLocale?: string\n) {\n  let domainItem:\n    | {\n        http?: boolean\n        domain: string\n        defaultLocale: string\n      }\n    | undefined\n\n  if (domainItems) {\n    for (const item of domainItems) {\n      // remove port if present\n      const domainHostname = item.domain?.split(':')[0].toLowerCase()\n      if (\n        hostname === domainHostname ||\n        detectedLocale?.toLowerCase() === item.defaultLocale.toLowerCase()\n      ) {\n        domainItem = item\n        break\n      }\n    }\n  }\n\n  return domainItem\n}\n"]}