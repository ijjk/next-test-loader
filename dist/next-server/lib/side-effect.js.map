{"version":3,"sources":["../../../next-server/lib/side-effect.tsx"],"names":["isServer","window","Component","constructor","props","emitChange","headManager","updateHead","reduceComponentsToState","mountedInstances","add","componentDidMount","componentDidUpdate","componentWillUnmount","delete","render"],"mappings":"4DAAA,4BAEA,KAAMA,CAAAA,QAAQ,CAAG,MAAOC,CAAAA,MAAP,GAAkB,WAAnC,CAce,sBAAcC,iBAA2B,CAUtDC,WAAW,CAACC,KAAD,CAAa,CACtB,MAAMA,KAAN,EADsB,KATxBC,UASwB,CATX,IAAY,CACvB,KAAKD,KAAL,CAAWE,WAAX,CAAuBC,UAAvB,CACE,KAAKH,KAAL,CAAWI,uBAAX,CACE,CAAC,GAAG,KAAKJ,KAAL,CAAWE,WAAX,CAAuBG,gBAA3B,CADF,CAEE,KAAKL,KAFP,CADF,EAMD,CAEuB,CAEtB,GAAIJ,QAAJ,CAAc,CACZ,KAAKI,KAAL,CAAWE,WAAX,CAAuBG,gBAAvB,CAAwCC,GAAxC,CAA4C,IAA5C,EACA,KAAKL,UAAL,GACD,CACF,CACDM,iBAAiB,EAAG,CAClB,KAAKP,KAAL,CAAWE,WAAX,CAAuBG,gBAAvB,CAAwCC,GAAxC,CAA4C,IAA5C,EACA,KAAKL,UAAL,GACD,CACDO,kBAAkB,EAAG,CACnB,KAAKP,UAAL,GACD,CACDQ,oBAAoB,EAAG,CACrB,KAAKT,KAAL,CAAWE,WAAX,CAAuBG,gBAAvB,CAAwCK,MAAxC,CAA+C,IAA/C,EACA,KAAKT,UAAL,GACD,CAEDU,MAAM,EAAG,CACP,MAAO,KAAP,CACD,CA/BqD,C","sourcesContent":["import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  emitChange = (): void => {\n    this.props.headManager.updateHead(\n      this.props.reduceComponentsToState(\n        [...this.props.headManager.mountedInstances],\n        this.props\n      )\n    )\n  }\n\n  constructor(props: any) {\n    super(props)\n    if (isServer) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    this.props.headManager.mountedInstances.add(this)\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    this.props.headManager.mountedInstances.delete(this)\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n"]}