{"version":3,"sources":["../../../next-server/server/image-optimizer.ts"],"names":["sharp","WEBP","PNG","JPEG","GIF","MIME_TYPES","CACHE_VERSION","ANIMATABLE_TYPES","imageOptimizer","server","req","res","parsedUrl","nextConfig","distDir","sizes","domains","images","headers","url","w","q","query","mimeType","accept","href","statusCode","end","finished","Array","isArray","isAbsolute","startsWith","hrefParsed","URL","toString","_error","includes","protocol","hostname","width","parseInt","isNaN","quality","hash","getHash","imagesDir","hashDir","now","Date","files","promises","readdir","file","filename","extension","split","expireAt","Number","contentType","setHeader","pipe","unlink","upstreamBuffer","upstreamType","maxAge","upstreamRes","fetch","ok","status","Buffer","from","arrayBuffer","get","getMaxAge","_req","method","resBuffers","mockRes","Stream","Writable","write","chunk","push","isBuffer","_write","mockHeaders","writeHead","_status","_headers","Object","assign","getHeader","name","toLowerCase","getHeaders","getHeaderNames","keys","value","_implicitHeader","getRequestHandler","nodeUrl","parse","concat","err","require","error","code","message","logError","transformer","resize","webp","png","jpeg","optimizedBuffer","toBuffer","mkdir","recursive","writeFile","items","item","update","String","digest","replace","parseCacheControl","str","map","Map","directive","key","trim","set","minimum","age","endsWith","slice","n","Math","max"],"mappings":"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","sourcesContent":["import nodeUrl, { UrlWithParsedQuery } from 'url'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { join } from 'path'\nimport { mediaType } from '@hapi/accept'\nimport { createReadStream, promises } from 'fs'\nimport { createHash } from 'crypto'\nimport Server from './next-server'\nimport { getContentType, getExtension } from './serve-static'\nimport { fileExists } from '../../lib/file-exists'\n// @ts-ignore no types for is-animated\nimport isAnimated from 'next/dist/compiled/is-animated'\nimport Stream from 'stream'\n\nlet sharp: typeof import('sharp')\n//const AVIF = 'image/avif'\nconst WEBP = 'image/webp'\nconst PNG = 'image/png'\nconst JPEG = 'image/jpeg'\nconst GIF = 'image/gif'\nconst MIME_TYPES = [/* AVIF, */ WEBP, PNG, JPEG]\nconst CACHE_VERSION = 1\nconst ANIMATABLE_TYPES = [WEBP, PNG, GIF]\n\nexport async function imageOptimizer(\n  server: Server,\n  req: IncomingMessage,\n  res: ServerResponse,\n  parsedUrl: UrlWithParsedQuery\n) {\n  const { nextConfig, distDir } = server\n  const { sizes = [], domains = [] } = nextConfig?.images || {}\n  const { headers } = req\n  const { url, w, q } = parsedUrl.query\n  const mimeType = mediaType(headers.accept, MIME_TYPES) || ''\n  let href: string\n\n  if (!url) {\n    res.statusCode = 400\n    res.end('\"url\" parameter is required')\n    return { finished: true }\n  } else if (Array.isArray(url)) {\n    res.statusCode = 400\n    res.end('\"url\" parameter cannot be an array')\n    return { finished: true }\n  }\n\n  let isAbsolute: boolean\n\n  if (url.startsWith('/')) {\n    href = url\n    isAbsolute = false\n  } else {\n    let hrefParsed: URL\n\n    try {\n      hrefParsed = new URL(url)\n      href = hrefParsed.toString()\n      isAbsolute = true\n    } catch (_error) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is invalid')\n      return { finished: true }\n    }\n\n    if (!['http:', 'https:'].includes(hrefParsed.protocol)) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is invalid')\n      return { finished: true }\n    }\n\n    if (!domains.includes(hrefParsed.hostname)) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is not allowed')\n      return { finished: true }\n    }\n  }\n\n  if (!w) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) is required')\n    return { finished: true }\n  } else if (Array.isArray(w)) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) cannot be an array')\n    return { finished: true }\n  }\n\n  if (!q) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) is required')\n    return { finished: true }\n  } else if (Array.isArray(q)) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) cannot be an array')\n    return { finished: true }\n  }\n\n  const width = parseInt(w, 10)\n\n  if (!width || isNaN(width)) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) must be a number greater than 0')\n    return { finished: true }\n  }\n\n  if (!sizes.includes(width)) {\n    res.statusCode = 400\n    res.end(`\"w\" parameter (width) of ${width} is not allowed`)\n    return { finished: true }\n  }\n\n  const quality = parseInt(q)\n\n  if (isNaN(quality) || quality < 1 || quality > 100) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) must be a number between 1 and 100')\n    return { finished: true }\n  }\n\n  const hash = getHash([CACHE_VERSION, href, width, quality, mimeType])\n  const imagesDir = join(distDir, 'cache', 'images')\n  const hashDir = join(imagesDir, hash)\n  const now = Date.now()\n\n  if (await fileExists(hashDir, 'directory')) {\n    const files = await promises.readdir(hashDir)\n    for (let file of files) {\n      const [filename, extension] = file.split('.')\n      const expireAt = Number(filename)\n      const contentType = getContentType(extension)\n      if (now < expireAt) {\n        if (contentType) {\n          res.setHeader('Content-Type', contentType)\n        }\n        createReadStream(join(hashDir, file)).pipe(res)\n        return { finished: true }\n      } else {\n        await promises.unlink(join(hashDir, file))\n      }\n    }\n  }\n\n  let upstreamBuffer: Buffer\n  let upstreamType: string | null\n  let maxAge: number\n\n  if (isAbsolute) {\n    const upstreamRes = await fetch(href)\n\n    if (!upstreamRes.ok) {\n      res.statusCode = upstreamRes.status\n      res.end('\"url\" parameter is valid but upstream response is invalid')\n      return { finished: true }\n    }\n\n    res.statusCode = upstreamRes.status\n    upstreamBuffer = Buffer.from(await upstreamRes.arrayBuffer())\n    upstreamType = upstreamRes.headers.get('Content-Type')\n    maxAge = getMaxAge(upstreamRes.headers.get('Cache-Control'))\n  } else {\n    try {\n      const _req: any = {\n        headers: req.headers,\n        method: req.method,\n        url: href,\n      }\n      const resBuffers: Buffer[] = []\n      const mockRes: any = new Stream.Writable()\n\n      mockRes.write = (chunk: Buffer | string) => {\n        resBuffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n      }\n      mockRes._write = (chunk: Buffer | string) => {\n        mockRes.write(chunk)\n      }\n\n      const mockHeaders: Record<string, string | string[]> = {}\n\n      mockRes.writeHead = (_status: any, _headers: any) =>\n        Object.assign(mockHeaders, _headers)\n      mockRes.getHeader = (name: string) => mockHeaders[name.toLowerCase()]\n      mockRes.getHeaders = () => mockHeaders\n      mockRes.getHeaderNames = () => Object.keys(mockHeaders)\n      mockRes.setHeader = (name: string, value: string | string[]) =>\n        (mockHeaders[name.toLowerCase()] = value)\n      mockRes._implicitHeader = () => {}\n      mockRes.finished = false\n      mockRes.statusCode = 200\n\n      await server.getRequestHandler()(_req, mockRes, nodeUrl.parse(href, true))\n      res.statusCode = mockRes.statusCode\n\n      upstreamBuffer = Buffer.concat(resBuffers)\n      upstreamType = mockRes.getHeader('Content-Type')\n      maxAge = getMaxAge(mockRes.getHeader('Cache-Control'))\n    } catch (err) {\n      res.statusCode = 500\n      res.end('\"url\" parameter is valid but upstream response is invalid')\n      return { finished: true }\n    }\n  }\n\n  const expireAt = maxAge * 1000 + now\n  let contentType: string\n\n  if (\n    upstreamType &&\n    ANIMATABLE_TYPES.includes(upstreamType) &&\n    isAnimated(upstreamBuffer)\n  ) {\n    if (upstreamType) {\n      res.setHeader('Content-Type', upstreamType)\n    }\n    res.end(upstreamBuffer)\n    return { finished: true }\n  }\n\n  if (mimeType) {\n    contentType = mimeType\n  } else if (upstreamType?.startsWith('image/') && getExtension(upstreamType)) {\n    contentType = upstreamType\n  } else {\n    contentType = JPEG\n  }\n\n  if (!sharp) {\n    try {\n      // eslint-disable-next-line import/no-extraneous-dependencies\n      sharp = require('sharp')\n    } catch (error) {\n      if (error.code === 'MODULE_NOT_FOUND') {\n        error.message += '\\n\\nLearn more: https://err.sh/next.js/install-sharp'\n        server.logError(error)\n        if (upstreamType) {\n          res.setHeader('Content-Type', upstreamType)\n        }\n        res.end(upstreamBuffer)\n      }\n      throw error\n    }\n  }\n\n  const transformer = sharp(upstreamBuffer).resize(width)\n\n  //if (contentType === AVIF) {\n  // Soon https://github.com/lovell/sharp/issues/2289\n  //}\n  if (contentType === WEBP) {\n    transformer.webp({ quality })\n  } else if (contentType === PNG) {\n    transformer.png({ quality })\n  } else if (contentType === JPEG) {\n    transformer.jpeg({ quality })\n  }\n\n  try {\n    const optimizedBuffer = await transformer.toBuffer()\n    await promises.mkdir(hashDir, { recursive: true })\n    const extension = getExtension(contentType)\n    const filename = join(hashDir, `${expireAt}.${extension}`)\n    await promises.writeFile(filename, optimizedBuffer)\n    res.setHeader('Content-Type', contentType)\n    res.end(optimizedBuffer)\n  } catch (error) {\n    server.logError(error)\n    if (upstreamType) {\n      res.setHeader('Content-Type', upstreamType)\n    }\n    res.end(upstreamBuffer)\n  }\n\n  return { finished: true }\n}\n\nfunction getHash(items: (string | number | undefined)[]) {\n  const hash = createHash('sha256')\n  for (let item of items) {\n    hash.update(String(item))\n  }\n  // See https://en.wikipedia.org/wiki/Base64#Filenames\n  return hash.digest('base64').replace(/\\//g, '-')\n}\n\nfunction parseCacheControl(str: string | null): Map<string, string> {\n  const map = new Map<string, string>()\n  if (!str) {\n    return map\n  }\n  for (let directive of str.split(',')) {\n    let [key, value] = directive.trim().split('=')\n    key = key.toLowerCase()\n    if (value) {\n      value = value.toLowerCase()\n    }\n    map.set(key, value)\n  }\n  return map\n}\n\nexport function getMaxAge(str: string | null): number {\n  const minimum = 60\n  const map = parseCacheControl(str)\n  if (map) {\n    let age = map.get('s-maxage') || map.get('max-age') || ''\n    if (age.startsWith('\"') && age.endsWith('\"')) {\n      age = age.slice(1, -1)\n    }\n    const n = parseInt(age, 10)\n    if (!isNaN(n)) {\n      return Math.max(n, minimum)\n    }\n  }\n  return minimum\n}\n"]}