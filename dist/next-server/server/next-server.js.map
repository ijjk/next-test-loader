{"version":3,"sources":["../../../next-server/server/next-server.ts"],"names":["getCustomRouteMatcher","Server","constructor","dir","quiet","conf","dev","customServer","nextConfig","distDir","pagesDir","publicDir","hasStaticDir","serverBuildDir","pagesManifest","buildId","renderOpts","compression","onErrorMiddleware","router","dynamicRoutes","customRoutes","staticPathsWorker","_cachedPreviewManifest","customErrorNo404Warn","console","warn","chalk","bold","yellow","_validFilesystemPathSet","phase","currentPhase","CLIENT_PUBLIC_FILES_PATH","fs","existsSync","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","generateEtags","compress","readBuildId","poweredByHeader","canonicalBase","amp","previewProps","getPreviewProps","undefined","ampOptimizerConfig","experimental","optimizer","basePath","Object","keys","length","runtimeConfig","target","envConfig","setConfig","_isLikeServerless","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","pagesManifestPath","PAGES_MANIFEST","require","getCustomRoutes","Router","generateRoutes","setAssetPrefix","plugins","initServer","default","flushToDisk","sprFlushToDisk","PHASE_PRODUCTION_SERVER","logError","err","error","handleRequest","req","res","parsedUrl","url","query","startsWith","render404","pathname","replace","statusCode","run","end","getRequestHandler","bind","prefix","prepare","close","setImmutableAssetCacheControl","setHeader","ROUTES_MANIFEST","getPrerenderManifest","manifest","PRERENDER_MANIFEST","preview","publicRoutes","generatePublicRoutes","staticFilesRoute","match","name","fn","params","p","path","map","encodeURIComponent","serveStatic","finished","fsRoutes","type","CLIENT_STATIC_FILES_RUNTIME","CLIENT_STATIC_FILES_PATH","_parsedUrl","shift","endsWith","param","join","render","_nextDataReq","_params","getCustomRoute","r","source","_req","_res","updateHeaderValue","value","includes","parsedDestination","validate","substr","headers","headerRoute","hasParams","header","key","redirects","redirect","redirectRoute","destination","updatedDestination","rewrites","rewrite","rewriteRoute","check","newUrl","protocol","proxy","Proxy","changeOrigin","ignorePath","web","on","_nextDidRewrite","_nextRewroteUrl","catchAllRoute","Error","handled","handleApiRequest","useFileSystemPublicRoutes","getDynamicRoutes","pageChecker","hasPage","getPagePath","found","_","_beforeCatchAllRender","ensureApiPage","_pathname","page","pageFound","dynamicRoute","builtPagePath","code","pageModule","prepareServerlessUrl","publicFiles","Set","pathParts","has","filter","isDynamicRoute","handleCompression","matched","execute","renderError","sendHTML","html","renderToHTML","findPageComponents","paths","Boolean","pagePath","components","getStaticProps","getStaticPaths","staticPaths","hasStaticFallback","fallback","__getStaticPaths","loadStaticPaths","renderToHTMLWithComponents","opts","Component","isLikeServerless","renderReqToHTML","isSSG","isServerProps","getServerSideProps","hasStaticPaths","isDataReq","previewData","isPreviewMode","urlPathname","split","pop","ssgCacheKey","cachedData","data","JSON","stringify","pageData","private","stateful","revalidate","curRevalidate","isStale","maybeCoalesceInvoke","isOrigin","doRender","sprRevalidate","renderResult","isProduction","isDynamicPathname","didRespond","NoFallbackError","__nextFallback","resHtml","result","dynamicRouteResult","renderErrorToHTML","is404","using404Page","process","env","NODE_ENV","maybeFallbackError","renderToHtmlError","isServeableUrl","method","getFilesystemPaths","pathUserFilesStatic","userFilesStatic","f","userFilesPublic","nextFilesStatic","untrustedFileUrl","decodedUntrustedFilePath","decodeURIComponent","untrustedFilePath","indexOf","sep","filesystemUrls","resolved","buildIdFile","BUILD_ID_FILE","readFileSync","trim","curUrl","search"],"mappings":"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","sourcesContent":["import compression from 'next/dist/compiled/compression'\nimport fs from 'fs'\nimport chalk from 'next/dist/compiled/chalk'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport Proxy from 'next/dist/compiled/http-proxy'\nimport { join, relative, resolve, sep } from 'path'\nimport { parse as parseQs, ParsedUrlQuery } from 'querystring'\nimport { format as formatUrl, parse as parseUrl, UrlWithParsedQuery } from 'url'\nimport { PrerenderManifest } from '../../build'\nimport {\n  getRedirectStatus,\n  Header,\n  Redirect,\n  Rewrite,\n  RouteType,\n  CustomRoutes,\n} from '../../lib/load-custom-routes'\nimport { withCoalescedInvoke } from '../../lib/coalesced-function'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME,\n  PAGES_MANIFEST,\n  PHASE_PRODUCTION_SERVER,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n} from '../lib/constants'\nimport {\n  getRouteMatcher,\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../lib/router/utils'\nimport * as envConfig from '../lib/runtime-config'\nimport { isResSent, NextApiRequest, NextApiResponse } from '../lib/utils'\nimport { apiResolver, tryGetPreviewData, __ApiPreviewProps } from './api-utils'\nimport loadConfig, { isTargetLikeServerless } from './config'\nimport pathMatch from './lib/path-match'\nimport { recursiveReadDirSync } from './lib/recursive-readdir-sync'\nimport { loadComponents, LoadComponentsReturnType } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport { RenderOpts, RenderOptsPartial, renderToHTML } from './render'\nimport { getPagePath } from './require'\nimport Router, {\n  DynamicRoutes,\n  PageChecker,\n  Params,\n  prepareDestination,\n  route,\n  Route,\n} from './router'\nimport { sendHTML } from './send-html'\nimport { sendPayload } from './send-payload'\nimport { serveStatic } from './serve-static'\nimport {\n  getFallback,\n  getSprCache,\n  initializeSprCache,\n  setSprCache,\n} from './spr-cache'\nimport { execOnce } from '../lib/utils'\nimport { isBlockedPage } from './utils'\nimport { compile as compilePathToRegex } from 'next/dist/compiled/path-to-regexp'\nimport { loadEnvConfig } from '../../lib/load-env-config'\nimport './node-polyfill-fetch'\nimport { PagesManifest } from '../../build/webpack/plugins/pages-manifest-plugin'\n\nconst getCustomRouteMatcher = pathMatch(true)\n\ntype NextConfig = any\n\ntype Middleware = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) => void\n\ntype FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: ParsedUrlQuery\n}\n\nexport type ServerConstructor = {\n  /**\n   * Where the Next project is located - @default '.'\n   */\n  dir?: string\n  /**\n   * Hide error messages containing server information - @default false\n   */\n  quiet?: boolean\n  /**\n   * Object what you would use in next.config.js - @default {}\n   */\n  conf?: NextConfig\n  dev?: boolean\n  customServer?: boolean\n}\n\nexport default class Server {\n  dir: string\n  quiet: boolean\n  nextConfig: NextConfig\n  distDir: string\n  pagesDir?: string\n  publicDir: string\n  hasStaticDir: boolean\n  serverBuildDir: string\n  pagesManifest?: PagesManifest\n  buildId: string\n  renderOpts: {\n    poweredByHeader: boolean\n    buildId: string\n    generateEtags: boolean\n    runtimeConfig?: { [key: string]: any }\n    assetPrefix?: string\n    canonicalBase: string\n    dev?: boolean\n    previewProps: __ApiPreviewProps\n    customServer?: boolean\n    ampOptimizerConfig?: { [key: string]: any }\n    basePath: string\n  }\n  private compression?: Middleware\n  private onErrorMiddleware?: ({ err }: { err: Error }) => Promise<void>\n  router: Router\n  protected dynamicRoutes?: DynamicRoutes\n  protected customRoutes: CustomRoutes\n  protected staticPathsWorker?: import('jest-worker').default & {\n    loadStaticPaths: typeof import('../../server/static-paths-worker').loadStaticPaths\n  }\n\n  public constructor({\n    dir = '.',\n    quiet = false,\n    conf = null,\n    dev = false,\n    customServer = true,\n  }: ServerConstructor = {}) {\n    this.dir = resolve(dir)\n    this.quiet = quiet\n    const phase = this.currentPhase()\n    loadEnvConfig(this.dir, dev)\n\n    this.nextConfig = loadConfig(phase, this.dir, conf)\n    this.distDir = join(this.dir, this.nextConfig.distDir)\n    this.publicDir = join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n    this.hasStaticDir = fs.existsSync(join(this.dir, 'static'))\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n      compress,\n    } = this.nextConfig\n\n    this.buildId = this.readBuildId()\n\n    this.renderOpts = {\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase,\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPreviewProps(),\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.experimental.basePath,\n    }\n\n    // Only the `publicRuntimeConfig` key is exposed to the client side\n    // It'll be rendered as part of __NEXT_DATA__ on the client side\n    if (Object.keys(publicRuntimeConfig).length > 0) {\n      this.renderOpts.runtimeConfig = publicRuntimeConfig\n    }\n\n    if (compress && this.nextConfig.target === 'server') {\n      this.compression = compression() as Middleware\n    }\n\n    // Initialize next/config with the environment configuration\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.serverBuildDir = join(\n      this.distDir,\n      this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n    )\n    const pagesManifestPath = join(this.serverBuildDir, PAGES_MANIFEST)\n\n    if (!dev) {\n      this.pagesManifest = require(pagesManifestPath)\n    }\n\n    this.customRoutes = this.getCustomRoutes()\n    this.router = new Router(this.generateRoutes())\n    this.setAssetPrefix(assetPrefix)\n\n    // call init-server middleware, this is also handled\n    // individually in serverless bundles when deployed\n    if (!dev && this.nextConfig.experimental.plugins) {\n      const initServer = require(join(this.serverBuildDir, 'init-server.js'))\n        .default\n      this.onErrorMiddleware = require(join(\n        this.serverBuildDir,\n        'on-error-server.js'\n      )).default\n      initServer()\n    }\n\n    initializeSprCache({\n      dev,\n      distDir: this.distDir,\n      pagesDir: join(\n        this.distDir,\n        this._isLikeServerless\n          ? SERVERLESS_DIRECTORY\n          : `${SERVER_DIRECTORY}/static/${this.buildId}`,\n        'pages'\n      ),\n      flushToDisk: this.nextConfig.experimental.sprFlushToDisk,\n    })\n  }\n\n  protected currentPhase(): string {\n    return PHASE_PRODUCTION_SERVER\n  }\n\n  private logError(err: Error): void {\n    if (this.onErrorMiddleware) {\n      this.onErrorMiddleware({ err })\n    }\n    if (this.quiet) return\n    // tslint:disable-next-line\n    console.error(err)\n  }\n\n  private async handleRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    // Parse url if parsedUrl not provided\n    if (!parsedUrl || typeof parsedUrl !== 'object') {\n      const url: any = req.url\n      parsedUrl = parseUrl(url, true)\n    }\n\n    // Parse the querystring ourselves if the user doesn't handle querystring parsing\n    if (typeof parsedUrl.query === 'string') {\n      parsedUrl.query = parseQs(parsedUrl.query)\n    }\n\n    const { basePath } = this.nextConfig.experimental\n\n    // if basePath is set require it be present\n    if (basePath && !req.url!.startsWith(basePath)) {\n      return this.render404(req, res, parsedUrl)\n    } else {\n      // If replace ends up replacing the full url it'll be `undefined`, meaning we have to default it to `/`\n      parsedUrl.pathname = parsedUrl.pathname!.replace(basePath, '') || '/'\n      req.url = req.url!.replace(basePath, '')\n    }\n\n    res.statusCode = 200\n    try {\n      return await this.run(req, res, parsedUrl)\n    } catch (err) {\n      this.logError(err)\n      res.statusCode = 500\n      res.end('Internal Server Error')\n    }\n  }\n\n  public getRequestHandler() {\n    return this.handleRequest.bind(this)\n  }\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  // Backwards compatibility\n  public async prepare(): Promise<void> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected setImmutableAssetCacheControl(res: ServerResponse): void {\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable')\n  }\n\n  protected getCustomRoutes(): CustomRoutes {\n    return require(join(this.distDir, ROUTES_MANIFEST))\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    const manifest = require(join(this.distDir, PRERENDER_MANIFEST))\n    return (this._cachedPreviewManifest = manifest)\n  }\n\n  protected getPreviewProps(): __ApiPreviewProps {\n    return this.getPrerenderManifest().preview\n  }\n\n  protected generateRoutes(): {\n    headers: Route[]\n    rewrites: Route[]\n    fsRoutes: Route[]\n    redirects: Route[]\n    catchAllRoute: Route\n    pageChecker: PageChecker\n    useFileSystemPublicRoutes: boolean\n    dynamicRoutes: DynamicRoutes | undefined\n  } {\n    const publicRoutes = fs.existsSync(this.publicDir)\n      ? this.generatePublicRoutes()\n      : []\n\n    const staticFilesRoute = this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(\n                this.dir,\n                'static',\n                ...(params.path || []).map(encodeURIComponent)\n              )\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n\n    const fsRoutes: Route[] = [\n      {\n        match: route('/_next/static/:path*'),\n        type: 'route',\n        name: '_next/static catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          // make sure to 404 for /_next/static itself\n          if (!params.path) {\n            await this.render404(req, res, parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          if (\n            params.path[0] === CLIENT_STATIC_FILES_RUNTIME ||\n            params.path[0] === 'chunks' ||\n            params.path[0] === 'css' ||\n            params.path[0] === 'media' ||\n            params.path[0] === this.buildId ||\n            params.path[1] === 'pages'\n          ) {\n            this.setImmutableAssetCacheControl(res)\n          }\n          const p = join(\n            this.distDir,\n            CLIENT_STATIC_FILES_PATH,\n            ...(params.path || [])\n          )\n          await this.serveStatic(req, res, p, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/data/:path*'),\n        type: 'route',\n        name: '_next/data catchall',\n        fn: async (req, res, params, _parsedUrl) => {\n          // Make sure to 404 for /_next/data/ itself and\n          // we also want to 404 if the buildId isn't correct\n          if (!params.path || params.path[0] !== this.buildId) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n          // remove buildId from URL\n          params.path.shift()\n\n          // show 404 if it doesn't end with .json\n          if (!params.path[params.path.length - 1].endsWith('.json')) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          // re-create page's pathname\n          const pathname = `/${params.path\n            // we need to re-encode the params since they are decoded\n            // by path-match and we are re-building the URL\n            .map((param: string) => encodeURIComponent(param))\n            .join('/')}`\n            .replace(/\\.json$/, '')\n            .replace(/\\/index$/, '/')\n\n          const parsedUrl = parseUrl(pathname, true)\n\n          await this.render(\n            req,\n            res,\n            pathname,\n            { ..._parsedUrl.query, _nextDataReq: '1' },\n            parsedUrl\n          )\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/:path*'),\n        type: 'route',\n        name: '_next catchall',\n        // This path is needed because `render()` does a check for `/_next` and the calls the routing again\n        fn: async (req, res, _params, parsedUrl) => {\n          await this.render404(req, res, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      ...publicRoutes,\n      ...staticFilesRoute,\n    ]\n\n    const getCustomRoute = (r: Rewrite | Redirect | Header, type: RouteType) =>\n      ({\n        ...r,\n        type,\n        match: getCustomRouteMatcher(r.source),\n        name: type,\n        fn: async (_req, _res, _params, _parsedUrl) => ({ finished: false }),\n      } as Route & Rewrite & Header)\n\n    const updateHeaderValue = (value: string, params: Params): string => {\n      if (!value.includes(':')) {\n        return value\n      }\n      const { parsedDestination } = prepareDestination(value, params, {})\n\n      if (\n        !parsedDestination.pathname ||\n        !parsedDestination.pathname.startsWith('/')\n      ) {\n        // the value needs to start with a forward-slash to be compiled\n        // correctly\n        return compilePathToRegex(`/${value}`, { validate: false })(\n          params\n        ).substr(1)\n      }\n      return formatUrl(parsedDestination)\n    }\n\n    // Headers come very first\n    const headers = this.customRoutes.headers.map((r) => {\n      const headerRoute = getCustomRoute(r, 'header')\n      return {\n        match: headerRoute.match,\n        type: headerRoute.type,\n        name: `${headerRoute.type} ${headerRoute.source} header route`,\n        fn: async (_req, res, params, _parsedUrl) => {\n          const hasParams = Object.keys(params).length > 0\n\n          for (const header of (headerRoute as Header).headers) {\n            let { key, value } = header\n            if (hasParams) {\n              key = updateHeaderValue(key, params)\n              value = updateHeaderValue(value, params)\n            }\n            res.setHeader(key, value)\n          }\n          return { finished: false }\n        },\n      } as Route\n    })\n\n    const redirects = this.customRoutes.redirects.map((redirect) => {\n      const redirectRoute = getCustomRoute(redirect, 'redirect')\n      return {\n        type: redirectRoute.type,\n        match: redirectRoute.match,\n        statusCode: redirectRoute.statusCode,\n        name: `Redirect route`,\n        fn: async (_req, res, params, parsedUrl) => {\n          const { parsedDestination } = prepareDestination(\n            redirectRoute.destination,\n            params,\n            parsedUrl.query\n          )\n          const updatedDestination = formatUrl(parsedDestination)\n\n          res.setHeader('Location', updatedDestination)\n          res.statusCode = getRedirectStatus(redirectRoute as Redirect)\n\n          // Since IE11 doesn't support the 308 header add backwards\n          // compatibility using refresh header\n          if (res.statusCode === 308) {\n            res.setHeader('Refresh', `0;url=${updatedDestination}`)\n          }\n\n          res.end()\n          return {\n            finished: true,\n          }\n        },\n      } as Route\n    })\n\n    const rewrites = this.customRoutes.rewrites.map((rewrite) => {\n      const rewriteRoute = getCustomRoute(rewrite, 'rewrite')\n      return {\n        check: true,\n        type: rewriteRoute.type,\n        name: `Rewrite route`,\n        match: rewriteRoute.match,\n        fn: async (req, res, params, parsedUrl) => {\n          const { newUrl, parsedDestination } = prepareDestination(\n            rewriteRoute.destination,\n            params,\n            parsedUrl.query,\n            true\n          )\n\n          // external rewrite, proxy it\n          if (parsedDestination.protocol) {\n            const target = formatUrl(parsedDestination)\n            const proxy = new Proxy({\n              target,\n              changeOrigin: true,\n              ignorePath: true,\n            })\n            proxy.web(req, res)\n\n            proxy.on('error', (err: Error) => {\n              console.error(`Error occurred proxying ${target}`, err)\n            })\n            return {\n              finished: true,\n            }\n          }\n          ;(req as any)._nextDidRewrite = true\n          ;(req as any)._nextRewroteUrl = newUrl\n\n          return {\n            finished: false,\n            pathname: newUrl,\n            query: parsedDestination.query,\n          }\n        },\n      } as Route\n    })\n\n    const catchAllRoute: Route = {\n      match: route('/:path*'),\n      type: 'route',\n      name: 'Catchall render',\n      fn: async (req, res, params, parsedUrl) => {\n        const { pathname, query } = parsedUrl\n        if (!pathname) {\n          throw new Error('pathname is undefined')\n        }\n\n        if (params?.path?.[0] === 'api') {\n          const handled = await this.handleApiRequest(\n            req as NextApiRequest,\n            res as NextApiResponse,\n            pathname,\n            query\n          )\n          if (handled) {\n            return { finished: true }\n          }\n        }\n\n        await this.render(req, res, pathname, query, parsedUrl)\n        return {\n          finished: true,\n        }\n      },\n    }\n\n    const { useFileSystemPublicRoutes } = this.nextConfig\n\n    if (useFileSystemPublicRoutes) {\n      this.dynamicRoutes = this.getDynamicRoutes()\n    }\n\n    return {\n      headers,\n      fsRoutes,\n      rewrites,\n      redirects,\n      catchAllRoute,\n      useFileSystemPublicRoutes,\n      dynamicRoutes: this.dynamicRoutes,\n      pageChecker: this.hasPage.bind(this),\n    }\n  }\n\n  private async getPagePath(pathname: string): Promise<string> {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      this._isLikeServerless,\n      this.renderOpts.dev\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let found = false\n    try {\n      found = !!(await this.getPagePath(pathname))\n    } catch (_) {}\n\n    return found\n  }\n\n  protected async _beforeCatchAllRender(\n    _req: IncomingMessage,\n    _res: ServerResponse,\n    _params: Params,\n    _parsedUrl: UrlWithParsedQuery\n  ): Promise<boolean> {\n    return false\n  }\n\n  // Used to build API page in development\n  protected async ensureApiPage(_pathname: string): Promise<void> {}\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  private async handleApiRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery\n  ): Promise<boolean> {\n    let page = pathname\n    let params: Params | boolean = false\n    let pageFound = await this.hasPage(page)\n\n    if (!pageFound && this.dynamicRoutes) {\n      for (const dynamicRoute of this.dynamicRoutes) {\n        params = dynamicRoute.match(pathname)\n        if (dynamicRoute.page.startsWith('/api') && params) {\n          page = dynamicRoute.page\n          pageFound = true\n          break\n        }\n      }\n    }\n\n    if (!pageFound) {\n      return false\n    }\n    // Make sure the page is built before getting the path\n    // or else it won't be in the manifest yet\n    await this.ensureApiPage(page)\n\n    let builtPagePath\n    try {\n      builtPagePath = await this.getPagePath(page)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return false\n      }\n      throw err\n    }\n\n    const pageModule = require(builtPagePath)\n    query = { ...query, ...params }\n\n    if (!this.renderOpts.dev && this._isLikeServerless) {\n      if (typeof pageModule.default === 'function') {\n        prepareServerlessUrl(req, query)\n        await pageModule.default(req, res)\n        return true\n      }\n    }\n\n    await apiResolver(\n      req,\n      res,\n      query,\n      pageModule,\n      this.renderOpts.previewProps,\n      false,\n      this.onErrorMiddleware\n    )\n    return true\n  }\n\n  protected generatePublicRoutes(): Route[] {\n    const publicFiles = new Set(\n      recursiveReadDirSync(this.publicDir).map((p) => p.replace(/\\\\/g, '/'))\n    )\n\n    return [\n      {\n        match: route('/:path*'),\n        name: 'public folder catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          const pathParts: string[] = params.path || []\n          const path = `/${pathParts.join('/')}`\n\n          if (publicFiles.has(path)) {\n            await this.serveStatic(\n              req,\n              res,\n              // we need to re-encode it since send decodes it\n              join(this.publicDir, ...pathParts.map(encodeURIComponent)),\n              parsedUrl\n            )\n            return {\n              finished: true,\n            }\n          }\n          return {\n            finished: false,\n          }\n        },\n      } as Route,\n    ]\n  }\n\n  protected getDynamicRoutes() {\n    return getSortedRoutes(Object.keys(this.pagesManifest!))\n      .filter(isDynamicRoute)\n      .map((page) => ({\n        page,\n        match: getRouteMatcher(getRouteRegex(page)),\n      }))\n  }\n\n  private handleCompression(req: IncomingMessage, res: ServerResponse): void {\n    if (this.compression) {\n      this.compression(req, res, () => {})\n    }\n  }\n\n  protected async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    this.handleCompression(req, res)\n\n    try {\n      const matched = await this.router.execute(req, res, parsedUrl)\n      if (matched) {\n        return\n      }\n    } catch (err) {\n      if (err.code === 'DECODE_FAILED') {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n      throw err\n    }\n\n    await this.render404(req, res, parsedUrl)\n  }\n\n  protected async sendHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    html: string\n  ): Promise<void> {\n    const { generateEtags, poweredByHeader } = this.renderOpts\n    return sendHTML(req, res, html, { generateEtags, poweredByHeader })\n  }\n\n  public async render(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://err.sh/next.js/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const url: any = req.url\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !query._nextDataReq &&\n      (url.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && url.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    const html = await this.renderToHTML(req, res, pathname, query)\n    // Request was ended by the user\n    if (html === null) {\n      return\n    }\n\n    return this.sendHTML(req, res, html)\n  }\n\n  private async findPageComponents(\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    const paths = [\n      // try serving a static AMP version first\n      query.amp ? normalizePagePath(pathname) + '.amp' : null,\n      pathname,\n    ].filter(Boolean)\n    for (const pagePath of paths) {\n      try {\n        const components = await loadComponents(\n          this.distDir,\n          pagePath!,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps\n              ? { _nextDataReq: query._nextDataReq, amp: query.amp }\n              : query),\n            ...(params || {}),\n          },\n        }\n      } catch (err) {\n        if (err.code !== 'ENOENT') throw err\n      }\n    }\n    return null\n  }\n\n  private async getStaticPaths(\n    pathname: string\n  ): Promise<{\n    staticPaths: string[] | undefined\n    hasStaticFallback: boolean\n  }> {\n    // we lazy load the staticPaths to prevent the user\n    // from waiting on them for the page to load in dev mode\n    let staticPaths: string[] | undefined\n    let hasStaticFallback = false\n\n    if (!this.renderOpts.dev) {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths = undefined\n\n      // Read whether or not fallback should exist from the manifest.\n      hasStaticFallback =\n        typeof this.getPrerenderManifest().dynamicRoutes[pathname].fallback ===\n        'string'\n    } else {\n      const __getStaticPaths = async () => {\n        const paths = await this.staticPathsWorker!.loadStaticPaths(\n          this.distDir,\n          pathname,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n        return paths\n      }\n      ;({ paths: staticPaths, fallback: hasStaticFallback } = (\n        await withCoalescedInvoke(__getStaticPaths)(\n          `staticPaths-${pathname}`,\n          []\n        )\n      ).value)\n    }\n\n    return { staticPaths, hasStaticFallback }\n  }\n\n  private async renderToHTMLWithComponents(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    { components, query }: FindComponentsResult,\n    opts: RenderOptsPartial\n  ): Promise<string | null> {\n    // we need to ensure the status code if /404 is visited directly\n    if (pathname === '/404') {\n      res.statusCode = 404\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return components.Component\n    }\n\n    // check request state\n    const isLikeServerless =\n      typeof components.Component === 'object' &&\n      typeof (components.Component as any).renderReqToHTML === 'function'\n    const isSSG = !!components.getStaticProps\n    const isServerProps = !!components.getServerSideProps\n    const hasStaticPaths = !!components.getStaticPaths\n\n    if (!query.amp) {\n      delete query.amp\n    }\n\n    // Toggle whether or not this is a Data request\n    const isDataReq = !!query._nextDataReq && (isSSG || isServerProps)\n    delete query._nextDataReq\n\n    let previewData: string | false | object | undefined\n    let isPreviewMode = false\n\n    if (isServerProps || isSSG) {\n      previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n      isPreviewMode = previewData !== false\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = (req as any)._nextRewroteUrl\n      ? (req as any)._nextRewroteUrl\n      : `${parseUrl(req.url || '').pathname!}`\n\n    // remove trailing slash\n    urlPathname = urlPathname.replace(/(?!^)\\/$/, '')\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isDataReq && urlPathname.includes(this.buildId)) {\n      urlPathname = (urlPathname.split(this.buildId).pop() || '/')\n        .replace(/\\.json$/, '')\n        .replace(/\\/index$/, '/')\n    }\n\n    const ssgCacheKey =\n      isPreviewMode || !isSSG\n        ? undefined // Preview mode bypasses the cache\n        : `${urlPathname}${query.amp ? '.amp' : ''}`\n\n    // Complete the response with cached data if its present\n    const cachedData = ssgCacheKey ? await getSprCache(ssgCacheKey) : undefined\n\n    if (cachedData) {\n      const data = isDataReq\n        ? JSON.stringify(cachedData.pageData)\n        : cachedData.html\n\n      sendPayload(\n        res,\n        data,\n        isDataReq ? 'json' : 'html',\n        !this.renderOpts.dev\n          ? {\n              private: isPreviewMode,\n              stateful: false, // GSP response\n              revalidate:\n                cachedData.curRevalidate !== undefined\n                  ? cachedData.curRevalidate\n                  : /* default to minimum revalidate (this should be an invariant) */ 1,\n            }\n          : undefined\n      )\n\n      // Stop the request chain here if the data we sent was up-to-date\n      if (!cachedData.isStale) {\n        return null\n      }\n    }\n\n    // If we're here, that means data is missing or it's stale.\n    const maybeCoalesceInvoke = ssgCacheKey\n      ? (fn: any) => withCoalescedInvoke(fn).bind(null, ssgCacheKey, [])\n      : (fn: any) => async () => {\n          const value = await fn()\n          return { isOrigin: true, value }\n        }\n\n    const doRender = maybeCoalesceInvoke(async function (): Promise<{\n      html: string | null\n      pageData: any\n      sprRevalidate: number | false\n    }> {\n      let pageData: any\n      let html: string | null\n      let sprRevalidate: number | false\n\n      let renderResult\n      // handle serverless\n      if (isLikeServerless) {\n        renderResult = await (components.Component as any).renderReqToHTML(\n          req,\n          res,\n          'passthrough'\n        )\n\n        html = renderResult.html\n        pageData = renderResult.renderOpts.pageData\n        sprRevalidate = renderResult.renderOpts.revalidate\n      } else {\n        const renderOpts: RenderOpts = {\n          ...components,\n          ...opts,\n          isDataReq,\n        }\n        renderResult = await renderToHTML(req, res, pathname, query, renderOpts)\n\n        html = renderResult\n        // TODO: change this to a different passing mechanism\n        pageData = (renderOpts as any).pageData\n        sprRevalidate = (renderOpts as any).revalidate\n      }\n\n      return { html, pageData, sprRevalidate }\n    })\n\n    const isProduction = !this.renderOpts.dev\n    const isDynamicPathname = isDynamicRoute(pathname)\n    const didRespond = isResSent(res)\n\n    const { staticPaths, hasStaticFallback } = hasStaticPaths\n      ? await this.getStaticPaths(pathname)\n      : { staticPaths: undefined, hasStaticFallback: false }\n\n    // const isForcedBlocking =\n    //   req.headers['X-Prerender-Bypass-Mode'] !== 'Blocking'\n\n    // When we did not respond from cache, we need to choose to block on\n    // rendering or return a skeleton.\n    //\n    // * Data requests always block.\n    //\n    // * Preview mode toggles all pages to be resolved in a blocking manner.\n    //\n    // * Non-dynamic pages should block (though this is an impossible\n    //   case in production).\n    //\n    // * Dynamic pages should return their skeleton if not defined in\n    //   getStaticPaths, then finish the data request on the client-side.\n    //\n    if (\n      ssgCacheKey &&\n      !didRespond &&\n      !isDataReq &&\n      !isPreviewMode &&\n      isDynamicPathname &&\n      // Development should trigger fallback when the path is not in\n      // `getStaticPaths`\n      (isProduction || !staticPaths || !staticPaths.includes(urlPathname))\n    ) {\n      if (\n        // In development, fall through to render to handle missing\n        // getStaticPaths.\n        (isProduction || staticPaths) &&\n        // When fallback isn't present, abort this render so we 404\n        !hasStaticFallback\n      ) {\n        throw new NoFallbackError()\n      }\n\n      let html: string\n\n      // Production already emitted the fallback as static HTML.\n      if (isProduction) {\n        html = await getFallback(pathname)\n      }\n      // We need to generate the fallback on-demand for development.\n      else {\n        query.__nextFallback = 'true'\n        if (isLikeServerless) {\n          prepareServerlessUrl(req, query)\n        }\n        const { value: renderResult } = await doRender()\n        html = renderResult.html\n      }\n\n      sendPayload(res, html, 'html')\n      return null\n    }\n\n    const {\n      isOrigin,\n      value: { html, pageData, sprRevalidate },\n    } = await doRender()\n    let resHtml = html\n    if (!isResSent(res) && (isSSG || isDataReq || isServerProps)) {\n      sendPayload(\n        res,\n        isDataReq ? JSON.stringify(pageData) : html,\n        isDataReq ? 'json' : 'html',\n        !this.renderOpts.dev || (isServerProps && !isDataReq)\n          ? {\n              private: isPreviewMode,\n              stateful: !isSSG,\n              revalidate: sprRevalidate,\n            }\n          : undefined\n      )\n      resHtml = null\n    }\n\n    // Update the SPR cache if the head request and cacheable\n    if (isOrigin && ssgCacheKey) {\n      await setSprCache(ssgCacheKey, { html: html!, pageData }, sprRevalidate)\n    }\n\n    return resHtml\n  }\n\n  public async renderToHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    try {\n      const result = await this.findPageComponents(pathname, query)\n      if (result) {\n        try {\n          return await this.renderToHTMLWithComponents(\n            req,\n            res,\n            pathname,\n            result,\n            { ...this.renderOpts }\n          )\n        } catch (err) {\n          if (!(err instanceof NoFallbackError)) {\n            throw err\n          }\n        }\n      }\n\n      if (this.dynamicRoutes) {\n        for (const dynamicRoute of this.dynamicRoutes) {\n          const params = dynamicRoute.match(pathname)\n          if (!params) {\n            continue\n          }\n\n          const dynamicRouteResult = await this.findPageComponents(\n            dynamicRoute.page,\n            query,\n            params\n          )\n          if (dynamicRouteResult) {\n            try {\n              return await this.renderToHTMLWithComponents(\n                req,\n                res,\n                dynamicRoute.page,\n                dynamicRouteResult,\n                { ...this.renderOpts, params }\n              )\n            } catch (err) {\n              if (!(err instanceof NoFallbackError)) {\n                throw err\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      this.logError(err)\n      res.statusCode = 500\n      return await this.renderErrorToHTML(err, req, res, pathname, query)\n    }\n\n    res.statusCode = 404\n    return await this.renderErrorToHTML(null, req, res, pathname, query)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<void> {\n    res.setHeader(\n      'Cache-Control',\n      'no-cache, no-store, max-age=0, must-revalidate'\n    )\n    const html = await this.renderErrorToHTML(err, req, res, pathname, query)\n    if (html === null) {\n      return\n    }\n    return this.sendHTML(req, res, html)\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    console.warn(\n      chalk.bold.yellow(`Warning: `) +\n        chalk.yellow(\n          `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://err.sh/next.js/custom-error-no-custom-404`\n        )\n    )\n  })\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    _pathname: string,\n    query: ParsedUrlQuery = {}\n  ) {\n    let result: null | FindComponentsResult = null\n\n    const is404 = res.statusCode === 404\n    let using404Page = false\n\n    // use static 404 page if available and is 404 response\n    if (is404) {\n      result = await this.findPageComponents('/404')\n      using404Page = result !== null\n    }\n\n    if (!result) {\n      result = await this.findPageComponents('/_error', query)\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !using404Page &&\n      (await this.hasPage('/_error')) &&\n      !(await this.hasPage('/404'))\n    ) {\n      this.customErrorNo404Warn()\n    }\n\n    let html: string | null\n    try {\n      try {\n        html = await this.renderToHTMLWithComponents(\n          req,\n          res,\n          using404Page ? '/404' : '/_error',\n          result!,\n          {\n            ...this.renderOpts,\n            err,\n          }\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (renderToHtmlError) {\n      console.error(renderToHtmlError)\n      res.statusCode = 500\n      html = 'Internal Server Error'\n    }\n    return html\n  }\n\n  public async render404(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    const url: any = req.url\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(url, true)\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query)\n  }\n\n  public async serveStatic(\n    req: IncomingMessage,\n    res: ServerResponse,\n    path: string,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!this.isServeableUrl(path)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    if (!(req.method === 'GET' || req.method === 'HEAD')) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      return this.renderError(null, req, res, path)\n    }\n\n    try {\n      await serveStatic(req, res, path)\n    } catch (err) {\n      if (err.code === 'ENOENT' || err.statusCode === 404) {\n        this.render404(req, res, parsedUrl)\n      } else if (err.statusCode === 412) {\n        res.statusCode = 412\n        return this.renderError(err, req, res, path)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  private _validFilesystemPathSet: Set<string> | null = null\n  private getFilesystemPaths(): Set<string> {\n    if (this._validFilesystemPathSet) {\n      return this._validFilesystemPathSet\n    }\n\n    const pathUserFilesStatic = join(this.dir, 'static')\n    let userFilesStatic: string[] = []\n    if (this.hasStaticDir && fs.existsSync(pathUserFilesStatic)) {\n      userFilesStatic = recursiveReadDirSync(pathUserFilesStatic).map((f) =>\n        join('.', 'static', f)\n      )\n    }\n\n    let userFilesPublic: string[] = []\n    if (this.publicDir && fs.existsSync(this.publicDir)) {\n      userFilesPublic = recursiveReadDirSync(this.publicDir).map((f) =>\n        join('.', 'public', f)\n      )\n    }\n\n    let nextFilesStatic: string[] = []\n    nextFilesStatic = recursiveReadDirSync(\n      join(this.distDir, 'static')\n    ).map((f) => join('.', relative(this.dir, this.distDir), 'static', f))\n\n    return (this._validFilesystemPathSet = new Set<string>([\n      ...nextFilesStatic,\n      ...userFilesPublic,\n      ...userFilesStatic,\n    ]))\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = resolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // Check if .next/static, static and public are in the path.\n    // If not the path is not available.\n    if (\n      (untrustedFilePath.startsWith(join(this.distDir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'public') + sep)) === false\n    ) {\n      return false\n    }\n\n    // Check against the real filesystem paths\n    const filesystemUrls = this.getFilesystemPaths()\n    const resolved = relative(this.dir, untrustedFilePath)\n    return filesystemUrls.has(resolved)\n  }\n\n  protected readBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err) {\n      if (!fs.existsSync(buildIdFile)) {\n        throw new Error(\n          `Could not find a valid build in the '${this.distDir}' directory! Try building your app with 'next build' before starting the server.`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  private get _isLikeServerless(): boolean {\n    return isTargetLikeServerless(this.nextConfig.target)\n  }\n}\n\nfunction prepareServerlessUrl(\n  req: IncomingMessage,\n  query: ParsedUrlQuery\n): void {\n  const curUrl = parseUrl(req.url!, true)\n  req.url = formatUrl({\n    ...curUrl,\n    search: undefined,\n    query: {\n      ...curUrl.query,\n      ...query,\n    },\n  })\n}\n\nclass NoFallbackError extends Error {}\n"]}