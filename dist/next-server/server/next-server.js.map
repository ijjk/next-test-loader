{"version":3,"sources":["../../../next-server/server/next-server.ts"],"names":["getCustomRouteMatcher","Server","constructor","dir","quiet","conf","dev","customServer","nextConfig","distDir","pagesDir","publicDir","hasStaticDir","serverBuildDir","pagesManifest","buildId","renderOpts","compression","onErrorMiddleware","incrementalCache","router","dynamicRoutes","customRoutes","_cachedPreviewManifest","customErrorNo404Warn","console","warn","chalk","bold","yellow","_validFilesystemPathSet","phase","currentPhase","Log","CLIENT_PUBLIC_FILES_PATH","fs","existsSync","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","generateEtags","compress","readBuildId","poweredByHeader","canonicalBase","amp","previewProps","getPreviewProps","undefined","ampOptimizerConfig","experimental","optimizer","basePath","images","JSON","stringify","optimizeFonts","fontManifest","_isLikeServerless","optimizeImages","defaultLocale","i18n","Object","keys","length","runtimeConfig","target","envConfig","setConfig","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","pagesManifestPath","PAGES_MANIFEST","require","getCustomRoutes","Router","generateRoutes","setAssetPrefix","plugins","initServer","default","IncrementalCache","flushToDisk","sprFlushToDisk","process","env","__NEXT_OPTIMIZE_FONTS","__NEXT_OPTIMIZE_IMAGES","PHASE_PRODUCTION_SERVER","logError","err","error","handleRequest","req","res","parsedUrl","url","query","__NEXT_INIT_QUERY","assign","startsWith","_nextHadBasePath","replace","pathname","parsed","detectedLocale","locales","acceptPreferredLocale","localeDetection","accept","language","headers","host","hostname","split","toLowerCase","detectedDomain","domains","localeDomainRedirect","localePathResult","__nextStrippedLocale","localeToCheck","matchedDomain","domain","http","denormalizedPagePath","detectedDefaultLocale","shouldStripDefaultLocale","shouldAddLocalePrefix","previous","getHeader","setHeader","Array","isArray","cookie","serialize","httpOnly","path","statusCode","end","__nextLocale","run","getRequestHandler","bind","prefix","prepare","close","setImmutableAssetCacheControl","ROUTES_MANIFEST","getPrerenderManifest","manifest","PRERENDER_MANIFEST","preview","server","publicRoutes","generatePublicRoutes","staticFilesRoute","match","name","fn","params","p","serveStatic","finished","fsRoutes","type","render404","CLIENT_STATIC_FILES_RUNTIME","CLIENT_STATIC_FILES_PATH","_parsedUrl","shift","endsWith","join","render","_nextDataReq","_params","getCustomRouteBasePath","r","getCustomRoute","source","_req","_res","map","headerRoute","hasParams","header","key","value","stringifyQuery","initialQueryValues","values","encodeURIComponent","some","val","redirects","redirect","redirectRoute","parsedDestination","destination","search","updatedDestination","rewrites","rewrite","rewriteRoute","check","newUrl","protocol","proxy","Proxy","changeOrigin","ignorePath","web","on","_nextRewroteUrl","_nextDidRewrite","catchAllRoute","Error","handled","handleApiRequest","useFileSystemPublicRoutes","getDynamicRoutes","pageChecker","hasPage","getPagePath","found","_","_beforeCatchAllRender","ensureApiPage","_pathname","page","pageFound","dynamicRoute","builtPagePath","code","pageModule","prepareServerlessUrl","publicFiles","Set","encodeURI","pathParts","basePathParts","every","part","idx","splice","has","addedPages","filter","isDynamicRoute","add","item","Boolean","handleCompression","matched","execute","renderError","sendHTML","html","renderToHTML","findPageComponents","paths","pagePath","components","Component","getStaticProps","getStaticPaths","staticPaths","fallbackField","fallback","fallbackMode","renderToHTMLWithComponents","opts","is404Page","isLikeServerless","renderReqToHTML","isSSG","isServerProps","getServerSideProps","hasStaticPaths","isDataReq","locale","previewData","isPreviewMode","urlPathname","resolvedUrlPathname","stripNextDataPath","includes","pop","handleRedirect","pageData","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","PERMANENT_REDIRECT_STATUS","ssgCacheKey","cachedData","get","isNotFound","NoFallbackError","data","private","stateful","revalidate","curRevalidate","isStale","maybeCoalesceInvoke","isOrigin","doRender","sprRevalidate","isRedirect","renderResult","origQuery","resolvedUrl","resolvedAsPath","isProduction","isDynamicPathname","didRespond","getFallback","__nextFallback","resHtml","set","result","dynamicRouteResult","renderErrorToHTML","is404","using404Page","NODE_ENV","maybeFallbackError","renderToHtmlError","isServeableUrl","method","getFilesystemPaths","pathUserFilesStatic","userFilesStatic","f","userFilesPublic","nextFilesStatic","untrustedFileUrl","decodedUntrustedFilePath","decodeURIComponent","untrustedFilePath","indexOf","sep","filesystemUrls","resolved","buildIdFile","BUILD_ID_FILE","readFileSync","trim","curUrl"],"mappings":"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","sourcesContent":["import compression from 'next/dist/compiled/compression'\nimport fs from 'fs'\nimport chalk from 'chalk'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport Proxy from 'next/dist/compiled/http-proxy'\nimport { join, relative, resolve, sep } from 'path'\nimport {\n  parse as parseQs,\n  stringify as stringifyQs,\n  ParsedUrlQuery,\n} from 'querystring'\nimport { format as formatUrl, parse as parseUrl, UrlWithParsedQuery } from 'url'\nimport { PrerenderManifest } from '../../build'\nimport {\n  getRedirectStatus,\n  Header,\n  Redirect,\n  Rewrite,\n  RouteType,\n  CustomRoutes,\n} from '../../lib/load-custom-routes'\nimport { withCoalescedInvoke } from '../../lib/coalesced-function'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME,\n  PAGES_MANIFEST,\n  PERMANENT_REDIRECT_STATUS,\n  PHASE_PRODUCTION_SERVER,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n} from '../lib/constants'\nimport {\n  getRouteMatcher,\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../lib/router/utils'\nimport * as envConfig from '../lib/runtime-config'\nimport { isResSent, NextApiRequest, NextApiResponse } from '../lib/utils'\nimport {\n  apiResolver,\n  setLazyProp,\n  getCookieParser,\n  tryGetPreviewData,\n  __ApiPreviewProps,\n} from './api-utils'\nimport loadConfig, { isTargetLikeServerless } from './config'\nimport pathMatch from '../lib/router/utils/path-match'\nimport { recursiveReadDirSync } from './lib/recursive-readdir-sync'\nimport { loadComponents, LoadComponentsReturnType } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport { RenderOpts, RenderOptsPartial, renderToHTML } from './render'\nimport { getPagePath, requireFontManifest } from './require'\nimport Router, {\n  DynamicRoutes,\n  PageChecker,\n  Params,\n  route,\n  Route,\n} from './router'\nimport prepareDestination, {\n  compileNonPath,\n} from '../lib/router/utils/prepare-destination'\nimport { sendPayload } from './send-payload'\nimport { serveStatic } from './serve-static'\nimport { IncrementalCache } from './incremental-cache'\nimport { execOnce } from '../lib/utils'\nimport { isBlockedPage } from './utils'\nimport { loadEnvConfig } from '@next/env'\nimport './node-polyfill-fetch'\nimport { PagesManifest } from '../../build/webpack/plugins/pages-manifest-plugin'\nimport { removePathTrailingSlash } from '../../client/normalize-trailing-slash'\nimport getRouteFromAssetPath from '../lib/router/utils/get-route-from-asset-path'\nimport { FontManifest } from './font-utils'\nimport { denormalizePagePath } from './denormalize-page-path'\nimport accept from '@hapi/accept'\nimport { normalizeLocalePath } from '../lib/i18n/normalize-locale-path'\nimport { detectLocaleCookie } from '../lib/i18n/detect-locale-cookie'\nimport * as Log from '../../build/output/log'\nimport { imageOptimizer } from './image-optimizer'\nimport { detectDomainLocale } from '../lib/i18n/detect-domain-locale'\nimport cookie from 'next/dist/compiled/cookie'\n\nconst getCustomRouteMatcher = pathMatch(true)\n\ntype NextConfig = any\n\ntype Middleware = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) => void\n\ntype FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: ParsedUrlQuery\n}\n\ntype DynamicRouteItem = {\n  page: string\n  match: ReturnType<typeof getRouteMatcher>\n}\n\nexport type ServerConstructor = {\n  /**\n   * Where the Next project is located - @default '.'\n   */\n  dir?: string\n  /**\n   * Hide error messages containing server information - @default false\n   */\n  quiet?: boolean\n  /**\n   * Object what you would use in next.config.js - @default {}\n   */\n  conf?: NextConfig\n  dev?: boolean\n  customServer?: boolean\n}\n\nexport default class Server {\n  dir: string\n  quiet: boolean\n  nextConfig: NextConfig\n  distDir: string\n  pagesDir?: string\n  publicDir: string\n  hasStaticDir: boolean\n  serverBuildDir: string\n  pagesManifest?: PagesManifest\n  buildId: string\n  renderOpts: {\n    poweredByHeader: boolean\n    buildId: string\n    generateEtags: boolean\n    runtimeConfig?: { [key: string]: any }\n    assetPrefix?: string\n    canonicalBase: string\n    dev?: boolean\n    previewProps: __ApiPreviewProps\n    customServer?: boolean\n    ampOptimizerConfig?: { [key: string]: any }\n    basePath: string\n    optimizeFonts: boolean\n    images: string\n    fontManifest: FontManifest\n    optimizeImages: boolean\n    locale?: string\n    locales?: string[]\n    defaultLocale?: string\n  }\n  private compression?: Middleware\n  private onErrorMiddleware?: ({ err }: { err: Error }) => Promise<void>\n  private incrementalCache: IncrementalCache\n  router: Router\n  protected dynamicRoutes?: DynamicRoutes\n  protected customRoutes: CustomRoutes\n\n  public constructor({\n    dir = '.',\n    quiet = false,\n    conf = null,\n    dev = false,\n    customServer = true,\n  }: ServerConstructor = {}) {\n    this.dir = resolve(dir)\n    this.quiet = quiet\n    const phase = this.currentPhase()\n    loadEnvConfig(this.dir, dev, Log)\n\n    this.nextConfig = loadConfig(phase, this.dir, conf)\n    this.distDir = join(this.dir, this.nextConfig.distDir)\n    this.publicDir = join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n    this.hasStaticDir = fs.existsSync(join(this.dir, 'static'))\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n      compress,\n    } = this.nextConfig\n\n    this.buildId = this.readBuildId()\n\n    this.renderOpts = {\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase,\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPreviewProps(),\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: JSON.stringify(this.nextConfig.images),\n      optimizeFonts: this.nextConfig.experimental.optimizeFonts && !dev,\n      fontManifest:\n        this.nextConfig.experimental.optimizeFonts && !dev\n          ? requireFontManifest(this.distDir, this._isLikeServerless)\n          : null,\n      optimizeImages: this.nextConfig.experimental.optimizeImages,\n      defaultLocale: this.nextConfig.i18n?.defaultLocale,\n    }\n\n    // Only the `publicRuntimeConfig` key is exposed to the client side\n    // It'll be rendered as part of __NEXT_DATA__ on the client side\n    if (Object.keys(publicRuntimeConfig).length > 0) {\n      this.renderOpts.runtimeConfig = publicRuntimeConfig\n    }\n\n    if (compress && this.nextConfig.target === 'server') {\n      this.compression = compression() as Middleware\n    }\n\n    // Initialize next/config with the environment configuration\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.serverBuildDir = join(\n      this.distDir,\n      this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n    )\n    const pagesManifestPath = join(this.serverBuildDir, PAGES_MANIFEST)\n\n    if (!dev) {\n      this.pagesManifest = require(pagesManifestPath)\n    }\n\n    this.customRoutes = this.getCustomRoutes()\n    this.router = new Router(this.generateRoutes())\n    this.setAssetPrefix(assetPrefix)\n\n    // call init-server middleware, this is also handled\n    // individually in serverless bundles when deployed\n    if (!dev && this.nextConfig.experimental.plugins) {\n      const initServer = require(join(this.serverBuildDir, 'init-server.js'))\n        .default\n      this.onErrorMiddleware = require(join(\n        this.serverBuildDir,\n        'on-error-server.js'\n      )).default\n      initServer()\n    }\n\n    this.incrementalCache = new IncrementalCache({\n      dev,\n      distDir: this.distDir,\n      pagesDir: join(\n        this.distDir,\n        this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n        'pages'\n      ),\n      flushToDisk: this.nextConfig.experimental.sprFlushToDisk,\n    })\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targetting both serverless and SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_FONTS`.\n     * TODO(prateekbh@): Remove this when experimental.optimizeFonts are being clened up.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeImages) {\n      process.env.__NEXT_OPTIMIZE_IMAGES = JSON.stringify(true)\n    }\n  }\n\n  protected currentPhase(): string {\n    return PHASE_PRODUCTION_SERVER\n  }\n\n  public logError(err: Error): void {\n    if (this.onErrorMiddleware) {\n      this.onErrorMiddleware({ err })\n    }\n    if (this.quiet) return\n    console.error(err)\n  }\n\n  private async handleRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    setLazyProp({ req: req as any }, 'cookies', getCookieParser(req))\n\n    // Parse url if parsedUrl not provided\n    if (!parsedUrl || typeof parsedUrl !== 'object') {\n      const url: any = req.url\n      parsedUrl = parseUrl(url, true)\n    }\n\n    // Parse the querystring ourselves if the user doesn't handle querystring parsing\n    if (typeof parsedUrl.query === 'string') {\n      parsedUrl.query = parseQs(parsedUrl.query)\n    }\n    ;(req as any).__NEXT_INIT_QUERY = Object.assign({}, parsedUrl.query)\n\n    const { basePath, i18n } = this.nextConfig\n\n    if (basePath && req.url?.startsWith(basePath)) {\n      // store original URL to allow checking if basePath was\n      // provided or not\n      ;(req as any)._nextHadBasePath = true\n      req.url = req.url!.replace(basePath, '') || '/'\n    }\n\n    if (i18n && !parsedUrl.pathname?.startsWith('/_next')) {\n      // get pathname from URL with basePath stripped for locale detection\n      const { pathname, ...parsed } = parseUrl(req.url || '/')\n      let defaultLocale = i18n.defaultLocale\n      let detectedLocale = detectLocaleCookie(req, i18n.locales)\n      let acceptPreferredLocale =\n        i18n.localeDetection !== false\n          ? accept.language(req.headers['accept-language'], i18n.locales)\n          : detectedLocale\n\n      const { host } = req?.headers || {}\n      // remove port from host and remove port if present\n      const hostname = host?.split(':')[0].toLowerCase()\n\n      const detectedDomain = detectDomainLocale(i18n.domains, hostname)\n      if (detectedDomain) {\n        defaultLocale = detectedDomain.defaultLocale\n        detectedLocale = defaultLocale\n      }\n\n      // if not domain specific locale use accept-language preferred\n      detectedLocale = detectedLocale || acceptPreferredLocale\n\n      let localeDomainRedirect: string | undefined\n      const localePathResult = normalizeLocalePath(pathname!, i18n.locales)\n\n      if (localePathResult.detectedLocale) {\n        detectedLocale = localePathResult.detectedLocale\n        req.url = formatUrl({\n          ...parsed,\n          pathname: localePathResult.pathname,\n        })\n        ;(req as any).__nextStrippedLocale = true\n        parsedUrl.pathname = localePathResult.pathname\n      }\n\n      // If a detected locale is a domain specific locale and we aren't already\n      // on that domain and path prefix redirect to it to prevent duplicate\n      // content from multiple domains\n      if (detectedDomain && parsedUrl.pathname === '/') {\n        const localeToCheck = acceptPreferredLocale\n        // const localeToCheck = localePathResult.detectedLocale\n        //   ? detectedLocale\n        //   : acceptPreferredLocale\n\n        const matchedDomain = detectDomainLocale(\n          i18n.domains,\n          undefined,\n          localeToCheck\n        )\n\n        if (\n          matchedDomain &&\n          (matchedDomain.domain !== detectedDomain.domain ||\n            localeToCheck !== matchedDomain.defaultLocale)\n        ) {\n          localeDomainRedirect = `http${matchedDomain.http ? '' : 's'}://${\n            matchedDomain.domain\n          }/${\n            localeToCheck === matchedDomain.defaultLocale ? '' : localeToCheck\n          }`\n        }\n      }\n\n      const denormalizedPagePath = denormalizePagePath(pathname || '/')\n      const detectedDefaultLocale =\n        !detectedLocale ||\n        detectedLocale.toLowerCase() === defaultLocale.toLowerCase()\n      const shouldStripDefaultLocale = false\n      // detectedDefaultLocale &&\n      // denormalizedPagePath.toLowerCase() ===\n      //   `/${i18n.defaultLocale.toLowerCase()}`\n\n      const shouldAddLocalePrefix =\n        !detectedDefaultLocale && denormalizedPagePath === '/'\n\n      detectedLocale = detectedLocale || i18n.defaultLocale\n\n      if (\n        i18n.localeDetection !== false &&\n        (localeDomainRedirect ||\n          shouldAddLocalePrefix ||\n          shouldStripDefaultLocale)\n      ) {\n        // set the NEXT_LOCALE cookie when a user visits the default locale\n        // with the locale prefix so that they aren't redirected back to\n        // their accept-language preferred locale\n        if (\n          shouldStripDefaultLocale &&\n          acceptPreferredLocale !== defaultLocale\n        ) {\n          const previous = res.getHeader('set-cookie')\n\n          res.setHeader('set-cookie', [\n            ...(typeof previous === 'string'\n              ? [previous]\n              : Array.isArray(previous)\n              ? previous\n              : []),\n            cookie.serialize('NEXT_LOCALE', defaultLocale, {\n              httpOnly: true,\n              path: '/',\n            }),\n          ])\n        }\n\n        res.setHeader(\n          'Location',\n          formatUrl({\n            // make sure to include any query values when redirecting\n            ...parsed,\n            pathname: localeDomainRedirect\n              ? localeDomainRedirect\n              : shouldStripDefaultLocale\n              ? '/'\n              : `/${detectedLocale}`,\n          })\n        )\n        res.statusCode = 307\n        res.end()\n        return\n      }\n\n      parsedUrl.query.__nextLocale =\n        localePathResult.detectedLocale ||\n        detectedDomain?.defaultLocale ||\n        defaultLocale\n    }\n\n    res.statusCode = 200\n    try {\n      return await this.run(req, res, parsedUrl)\n    } catch (err) {\n      this.logError(err)\n      res.statusCode = 500\n      res.end('Internal Server Error')\n    }\n  }\n\n  public getRequestHandler() {\n    return this.handleRequest.bind(this)\n  }\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  // Backwards compatibility\n  public async prepare(): Promise<void> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected setImmutableAssetCacheControl(res: ServerResponse): void {\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable')\n  }\n\n  protected getCustomRoutes(): CustomRoutes {\n    return require(join(this.distDir, ROUTES_MANIFEST))\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    const manifest = require(join(this.distDir, PRERENDER_MANIFEST))\n    return (this._cachedPreviewManifest = manifest)\n  }\n\n  protected getPreviewProps(): __ApiPreviewProps {\n    return this.getPrerenderManifest().preview\n  }\n\n  protected generateRoutes(): {\n    basePath: string\n    headers: Route[]\n    rewrites: Route[]\n    fsRoutes: Route[]\n    redirects: Route[]\n    catchAllRoute: Route\n    pageChecker: PageChecker\n    useFileSystemPublicRoutes: boolean\n    dynamicRoutes: DynamicRoutes | undefined\n  } {\n    const server: Server = this\n    const publicRoutes = fs.existsSync(this.publicDir)\n      ? this.generatePublicRoutes()\n      : []\n\n    const staticFilesRoute = this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(this.dir, 'static', ...params.path)\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n\n    const fsRoutes: Route[] = [\n      {\n        match: route('/_next/static/:path*'),\n        type: 'route',\n        name: '_next/static catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          // make sure to 404 for /_next/static itself\n          if (!params.path) {\n            await this.render404(req, res, parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          if (\n            params.path[0] === CLIENT_STATIC_FILES_RUNTIME ||\n            params.path[0] === 'chunks' ||\n            params.path[0] === 'css' ||\n            params.path[0] === 'media' ||\n            params.path[0] === this.buildId ||\n            params.path[0] === 'pages' ||\n            params.path[1] === 'pages'\n          ) {\n            this.setImmutableAssetCacheControl(res)\n          }\n          const p = join(\n            this.distDir,\n            CLIENT_STATIC_FILES_PATH,\n            ...(params.path || [])\n          )\n          await this.serveStatic(req, res, p, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/data/:path*'),\n        type: 'route',\n        name: '_next/data catchall',\n        fn: async (req, res, params, _parsedUrl) => {\n          // Make sure to 404 for /_next/data/ itself and\n          // we also want to 404 if the buildId isn't correct\n          if (!params.path || params.path[0] !== this.buildId) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n          // remove buildId from URL\n          params.path.shift()\n\n          // show 404 if it doesn't end with .json\n          if (!params.path[params.path.length - 1].endsWith('.json')) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          // re-create page's pathname\n          let pathname = `/${params.path.join('/')}`\n          pathname = getRouteFromAssetPath(pathname, '.json')\n\n          const { i18n } = this.nextConfig\n\n          if (i18n) {\n            const { host } = req?.headers || {}\n            // remove port from host and remove port if present\n            const hostname = host?.split(':')[0].toLowerCase()\n            const localePathResult = normalizeLocalePath(pathname, i18n.locales)\n            const { defaultLocale } =\n              detectDomainLocale(i18n.domains, hostname) || {}\n            let detectedLocale = defaultLocale\n\n            if (localePathResult.detectedLocale) {\n              pathname = localePathResult.pathname\n              detectedLocale = localePathResult.detectedLocale\n            }\n\n            _parsedUrl.query.__nextLocale = detectedLocale!\n          }\n\n          const parsedUrl = parseUrl(pathname, true)\n\n          await this.render(\n            req,\n            res,\n            pathname,\n            { ..._parsedUrl.query, _nextDataReq: '1' },\n            parsedUrl\n          )\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/image'),\n        type: 'route',\n        name: '_next/image catchall',\n        fn: (req, res, _params, parsedUrl) =>\n          imageOptimizer(server, req, res, parsedUrl),\n      },\n      {\n        match: route('/_next/:path*'),\n        type: 'route',\n        name: '_next catchall',\n        // This path is needed because `render()` does a check for `/_next` and the calls the routing again\n        fn: async (req, res, _params, parsedUrl) => {\n          await this.render404(req, res, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      ...publicRoutes,\n      ...staticFilesRoute,\n    ]\n\n    const getCustomRouteBasePath = (r: { basePath?: false }) => {\n      return r.basePath !== false && this.renderOpts.dev\n        ? this.nextConfig.basePath\n        : ''\n    }\n\n    const getCustomRoute = (r: Rewrite | Redirect | Header, type: RouteType) =>\n      ({\n        ...r,\n        type,\n        match: getCustomRouteMatcher(`${getCustomRouteBasePath(r)}${r.source}`),\n        name: type,\n        fn: async (_req, _res, _params, _parsedUrl) => ({ finished: false }),\n      } as Route & Rewrite & Header)\n\n    // Headers come very first\n    const headers = this.customRoutes.headers.map((r) => {\n      const headerRoute = getCustomRoute(r, 'header')\n      return {\n        match: headerRoute.match,\n        type: headerRoute.type,\n        name: `${headerRoute.type} ${headerRoute.source} header route`,\n        fn: async (_req, res, params, _parsedUrl) => {\n          const hasParams = Object.keys(params).length > 0\n\n          for (const header of (headerRoute as Header).headers) {\n            let { key, value } = header\n            if (hasParams) {\n              key = compileNonPath(key, params)\n              value = compileNonPath(value, params)\n            }\n            res.setHeader(key, value)\n          }\n          return { finished: false }\n        },\n      } as Route\n    })\n\n    // since initial query values are decoded by querystring.parse\n    // we need to re-encode them here but still allow passing through\n    // values from rewrites/redirects\n    const stringifyQuery = (req: IncomingMessage, query: ParsedUrlQuery) => {\n      const initialQueryValues = Object.values((req as any).__NEXT_INIT_QUERY)\n\n      return stringifyQs(query, undefined, undefined, {\n        encodeURIComponent(value) {\n          if (initialQueryValues.some((val) => val === value)) {\n            return encodeURIComponent(value)\n          }\n          return value\n        },\n      })\n    }\n\n    const redirects = this.customRoutes.redirects.map((redirect) => {\n      const redirectRoute = getCustomRoute(redirect, 'redirect')\n      return {\n        type: redirectRoute.type,\n        match: redirectRoute.match,\n        statusCode: redirectRoute.statusCode,\n        name: `Redirect route`,\n        fn: async (req, res, params, parsedUrl) => {\n          const { parsedDestination } = prepareDestination(\n            redirectRoute.destination,\n            params,\n            parsedUrl.query,\n            false,\n            getCustomRouteBasePath(redirectRoute)\n          )\n\n          const { query } = parsedDestination\n          delete (parsedDestination as any).query\n\n          parsedDestination.search = stringifyQuery(req, query)\n\n          const updatedDestination = formatUrl(parsedDestination)\n\n          res.setHeader('Location', updatedDestination)\n          res.statusCode = getRedirectStatus(redirectRoute as Redirect)\n\n          // Since IE11 doesn't support the 308 header add backwards\n          // compatibility using refresh header\n          if (res.statusCode === 308) {\n            res.setHeader('Refresh', `0;url=${updatedDestination}`)\n          }\n\n          res.end()\n          return {\n            finished: true,\n          }\n        },\n      } as Route\n    })\n\n    const rewrites = this.customRoutes.rewrites.map((rewrite) => {\n      const rewriteRoute = getCustomRoute(rewrite, 'rewrite')\n      return {\n        ...rewriteRoute,\n        check: true,\n        type: rewriteRoute.type,\n        name: `Rewrite route`,\n        match: rewriteRoute.match,\n        fn: async (req, res, params, parsedUrl) => {\n          const { newUrl, parsedDestination } = prepareDestination(\n            rewriteRoute.destination,\n            params,\n            parsedUrl.query,\n            true,\n            getCustomRouteBasePath(rewriteRoute)\n          )\n\n          // external rewrite, proxy it\n          if (parsedDestination.protocol) {\n            const { query } = parsedDestination\n            delete (parsedDestination as any).query\n            parsedDestination.search = stringifyQuery(req, query)\n\n            const target = formatUrl(parsedDestination)\n            const proxy = new Proxy({\n              target,\n              changeOrigin: true,\n              ignorePath: true,\n            })\n            proxy.web(req, res)\n\n            proxy.on('error', (err: Error) => {\n              console.error(`Error occurred proxying ${target}`, err)\n            })\n            return {\n              finished: true,\n            }\n          }\n          ;(req as any)._nextRewroteUrl = newUrl\n          ;(req as any)._nextDidRewrite =\n            (req as any)._nextRewroteUrl !== req.url\n\n          return {\n            finished: false,\n            pathname: newUrl,\n            query: parsedDestination.query,\n          }\n        },\n      } as Route\n    })\n\n    const catchAllRoute: Route = {\n      match: route('/:path*'),\n      type: 'route',\n      name: 'Catchall render',\n      fn: async (req, res, params, parsedUrl) => {\n        let { pathname, query } = parsedUrl\n        if (!pathname) {\n          throw new Error('pathname is undefined')\n        }\n\n        // next.js core assumes page path without trailing slash\n        pathname = removePathTrailingSlash(pathname)\n\n        if (params?.path?.[0] === 'api') {\n          const handled = await this.handleApiRequest(\n            req as NextApiRequest,\n            res as NextApiResponse,\n            pathname,\n            query\n          )\n          if (handled) {\n            return { finished: true }\n          }\n        }\n\n        await this.render(req, res, pathname, query, parsedUrl)\n        return {\n          finished: true,\n        }\n      },\n    }\n\n    const { useFileSystemPublicRoutes } = this.nextConfig\n\n    if (useFileSystemPublicRoutes) {\n      this.dynamicRoutes = this.getDynamicRoutes()\n    }\n\n    return {\n      headers,\n      fsRoutes,\n      rewrites,\n      redirects,\n      catchAllRoute,\n      useFileSystemPublicRoutes,\n      dynamicRoutes: this.dynamicRoutes,\n      basePath: this.nextConfig.basePath,\n      pageChecker: this.hasPage.bind(this),\n    }\n  }\n\n  private async getPagePath(pathname: string): Promise<string> {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      this._isLikeServerless,\n      this.renderOpts.dev\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let found = false\n    try {\n      found = !!(await this.getPagePath(pathname))\n    } catch (_) {}\n\n    return found\n  }\n\n  protected async _beforeCatchAllRender(\n    _req: IncomingMessage,\n    _res: ServerResponse,\n    _params: Params,\n    _parsedUrl: UrlWithParsedQuery\n  ): Promise<boolean> {\n    return false\n  }\n\n  // Used to build API page in development\n  protected async ensureApiPage(_pathname: string): Promise<void> {}\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  private async handleApiRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery\n  ): Promise<boolean> {\n    let page = pathname\n    let params: Params | boolean = false\n    let pageFound = await this.hasPage(page)\n\n    if (!pageFound && this.dynamicRoutes) {\n      for (const dynamicRoute of this.dynamicRoutes) {\n        params = dynamicRoute.match(pathname)\n        if (dynamicRoute.page.startsWith('/api') && params) {\n          page = dynamicRoute.page\n          pageFound = true\n          break\n        }\n      }\n    }\n\n    if (!pageFound) {\n      return false\n    }\n    // Make sure the page is built before getting the path\n    // or else it won't be in the manifest yet\n    await this.ensureApiPage(page)\n\n    let builtPagePath\n    try {\n      builtPagePath = await this.getPagePath(page)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return false\n      }\n      throw err\n    }\n\n    const pageModule = await require(builtPagePath)\n    query = { ...query, ...params }\n\n    if (!this.renderOpts.dev && this._isLikeServerless) {\n      if (typeof pageModule.default === 'function') {\n        prepareServerlessUrl(req, query)\n        await pageModule.default(req, res)\n        return true\n      }\n    }\n\n    await apiResolver(\n      req,\n      res,\n      query,\n      pageModule,\n      this.renderOpts.previewProps,\n      false,\n      this.onErrorMiddleware\n    )\n    return true\n  }\n\n  protected generatePublicRoutes(): Route[] {\n    const publicFiles = new Set(\n      recursiveReadDirSync(this.publicDir).map((p) =>\n        encodeURI(p.replace(/\\\\/g, '/'))\n      )\n    )\n\n    return [\n      {\n        match: route('/:path*'),\n        name: 'public folder catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          const pathParts: string[] = params.path || []\n          const { basePath } = this.nextConfig\n\n          // if basePath is defined require it be present\n          if (basePath) {\n            const basePathParts = basePath.split('/')\n            // remove first empty value\n            basePathParts.shift()\n\n            if (\n              !basePathParts.every((part: string, idx: number) => {\n                return part === pathParts[idx]\n              })\n            ) {\n              return { finished: false }\n            }\n\n            pathParts.splice(0, basePathParts.length)\n          }\n\n          const path = `/${pathParts.join('/')}`\n\n          if (publicFiles.has(path)) {\n            await this.serveStatic(\n              req,\n              res,\n              join(this.publicDir, ...pathParts),\n              parsedUrl\n            )\n            return {\n              finished: true,\n            }\n          }\n          return {\n            finished: false,\n          }\n        },\n      } as Route,\n    ]\n  }\n\n  protected getDynamicRoutes(): Array<DynamicRouteItem> {\n    const addedPages = new Set<string>()\n\n    return getSortedRoutes(Object.keys(this.pagesManifest!))\n      .filter(isDynamicRoute)\n      .map((page) => {\n        page = normalizeLocalePath(page, this.nextConfig.i18n?.locales).pathname\n        if (addedPages.has(page)) return null\n        addedPages.add(page)\n        return {\n          page,\n          match: getRouteMatcher(getRouteRegex(page)),\n        }\n      })\n      .filter((item): item is DynamicRouteItem => Boolean(item))\n  }\n\n  private handleCompression(req: IncomingMessage, res: ServerResponse): void {\n    if (this.compression) {\n      this.compression(req, res, () => {})\n    }\n  }\n\n  protected async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    this.handleCompression(req, res)\n\n    try {\n      const matched = await this.router.execute(req, res, parsedUrl)\n      if (matched) {\n        return\n      }\n    } catch (err) {\n      if (err.code === 'DECODE_FAILED') {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n      throw err\n    }\n\n    await this.render404(req, res, parsedUrl)\n  }\n\n  protected async sendHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    html: string\n  ): Promise<void> {\n    const { generateEtags, poweredByHeader } = this.renderOpts\n    return sendPayload(req, res, html, 'html', {\n      generateEtags,\n      poweredByHeader,\n    })\n  }\n\n  public async render(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://err.sh/next.js/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const url: any = req.url\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !query._nextDataReq &&\n      (url.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && url.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    const html = await this.renderToHTML(req, res, pathname, query)\n    // Request was ended by the user\n    if (html === null) {\n      return\n    }\n\n    return this.sendHTML(req, res, html)\n  }\n\n  private async findPageComponents(\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    let paths = [\n      // try serving a static AMP version first\n      query.amp ? normalizePagePath(pathname) + '.amp' : null,\n      pathname,\n    ].filter(Boolean)\n\n    if (query.__nextLocale) {\n      paths = [\n        ...paths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        ),\n        ...paths,\n      ]\n    }\n\n    for (const pagePath of paths) {\n      try {\n        const components = await loadComponents(\n          this.distDir,\n          pagePath!,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n        // if loading an static HTML file the locale is required\n        // to be present since all HTML files are output under their locale\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath?.startsWith(`/${query.__nextLocale}`)\n        ) {\n          const err = new Error('NOT_FOUND')\n          ;(err as any).code = 'ENOENT'\n          throw err\n        }\n\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps\n              ? {\n                  amp: query.amp,\n                  _nextDataReq: query._nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                }\n              : query),\n            ...(params || {}),\n          },\n        }\n      } catch (err) {\n        if (err.code !== 'ENOENT') throw err\n      }\n    }\n    return null\n  }\n\n  protected async getStaticPaths(\n    pathname: string\n  ): Promise<{\n    staticPaths: string[] | undefined\n    fallbackMode: 'static' | 'blocking' | false\n  }> {\n    // `staticPaths` is intentionally set to `undefined` as it should've\n    // been caught when checking disk data.\n    const staticPaths = undefined\n\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField = this.getPrerenderManifest().dynamicRoutes[pathname]\n      .fallback\n\n    return {\n      staticPaths,\n      fallbackMode:\n        typeof fallbackField === 'string'\n          ? 'static'\n          : fallbackField === null\n          ? 'blocking'\n          : false,\n    }\n  }\n\n  private async renderToHTMLWithComponents(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    { components, query }: FindComponentsResult,\n    opts: RenderOptsPartial\n  ): Promise<string | null> {\n    const is404Page = pathname === '/404'\n\n    const isLikeServerless =\n      typeof components.Component === 'object' &&\n      typeof (components.Component as any).renderReqToHTML === 'function'\n    const isSSG = !!components.getStaticProps\n    const isServerProps = !!components.getServerSideProps\n    const hasStaticPaths = !!components.getStaticPaths\n\n    // Toggle whether or not this is a Data request\n    const isDataReq = !!query._nextDataReq && (isSSG || isServerProps)\n    delete query._nextDataReq\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isDataReq) {\n      res.statusCode = 404\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return components.Component\n    }\n\n    if (!query.amp) {\n      delete query.amp\n    }\n\n    const locale = query.__nextLocale as string\n    delete query.__nextLocale\n\n    const { i18n } = this.nextConfig\n    const locales = i18n.locales as string[]\n\n    let previewData: string | false | object | undefined\n    let isPreviewMode = false\n\n    if (isServerProps || isSSG) {\n      previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n      isPreviewMode = previewData !== false\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = (req as any)._nextRewroteUrl\n      ? (req as any)._nextRewroteUrl\n      : urlPathname\n\n    resolvedUrlPathname = removePathTrailingSlash(resolvedUrlPathname)\n    urlPathname = removePathTrailingSlash(urlPathname)\n\n    const stripNextDataPath = (path: string) => {\n      if (path.includes(this.buildId)) {\n        path = denormalizePagePath(\n          (path.split(this.buildId).pop() || '/').replace(/\\.json$/, '')\n        )\n      }\n\n      if (this.nextConfig.i18n) {\n        return normalizeLocalePath(path, locales).pathname\n      }\n      return path\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n      }\n      const statusCode = getRedirectStatus(redirect)\n\n      if (statusCode === PERMANENT_REDIRECT_STATUS) {\n        res.setHeader('Refresh', `0;url=${redirect.destination}`)\n      }\n\n      res.statusCode = statusCode\n      res.setHeader('Location', redirect.destination)\n      res.end()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isDataReq) {\n      resolvedUrlPathname = stripNextDataPath(resolvedUrlPathname)\n      urlPathname = stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey =\n      isPreviewMode || !isSSG\n        ? undefined // Preview mode bypasses the cache\n        : `${locale ? `/${locale}` : ''}${resolvedUrlPathname}${\n            query.amp ? '.amp' : ''\n          }`\n\n    if (is404Page && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    // Complete the response with cached data if its present\n    const cachedData = ssgCacheKey\n      ? await this.incrementalCache.get(ssgCacheKey)\n      : undefined\n\n    if (cachedData) {\n      if (cachedData.isNotFound) {\n        // we don't currently revalidate when notFound is returned\n        // so trigger rendering 404 here\n        throw new NoFallbackError()\n      }\n\n      const data = isDataReq\n        ? JSON.stringify(cachedData.pageData)\n        : cachedData.html\n\n      if (!isDataReq && cachedData.pageData?.pageProps?.__N_REDIRECT) {\n        await handleRedirect(cachedData.pageData)\n      } else {\n        sendPayload(\n          req,\n          res,\n          data,\n          isDataReq ? 'json' : 'html',\n          {\n            generateEtags: this.renderOpts.generateEtags,\n            poweredByHeader: this.renderOpts.poweredByHeader,\n          },\n          !this.renderOpts.dev\n            ? {\n                private: isPreviewMode,\n                stateful: false, // GSP response\n                revalidate:\n                  cachedData.curRevalidate !== undefined\n                    ? cachedData.curRevalidate\n                    : /* default to minimum revalidate (this should be an invariant) */ 1,\n              }\n            : undefined\n        )\n      }\n\n      // Stop the request chain here if the data we sent was up-to-date\n      if (!cachedData.isStale) {\n        return null\n      }\n    }\n\n    // If we're here, that means data is missing or it's stale.\n    const maybeCoalesceInvoke = ssgCacheKey\n      ? (fn: any) => withCoalescedInvoke(fn).bind(null, ssgCacheKey!, [])\n      : (fn: any) => async () => {\n          const value = await fn()\n          return { isOrigin: true, value }\n        }\n\n    const doRender = maybeCoalesceInvoke(\n      async (): Promise<{\n        html: string | null\n        pageData: any\n        sprRevalidate: number | false\n        isNotFound?: boolean\n        isRedirect?: boolean\n      }> => {\n        let pageData: any\n        let html: string | null\n        let sprRevalidate: number | false\n        let isNotFound: boolean | undefined\n        let isRedirect: boolean | undefined\n\n        let renderResult\n        // handle serverless\n        if (isLikeServerless) {\n          renderResult = await (components.Component as any).renderReqToHTML(\n            req,\n            res,\n            'passthrough',\n            {\n              fontManifest: this.renderOpts.fontManifest,\n              locale,\n              locales,\n              // defaultLocale,\n            }\n          )\n\n          html = renderResult.html\n          pageData = renderResult.renderOpts.pageData\n          sprRevalidate = renderResult.renderOpts.revalidate\n          isNotFound = renderResult.renderOpts.isNotFound\n          isRedirect = renderResult.renderOpts.isRedirect\n        } else {\n          const origQuery = parseUrl(req.url || '', true).query\n          const resolvedUrl = formatUrl({\n            pathname: resolvedUrlPathname,\n            // make sure to only add query values from original URL\n            query: origQuery,\n          })\n\n          const renderOpts: RenderOpts = {\n            ...components,\n            ...opts,\n            isDataReq,\n            resolvedUrl,\n            locale,\n            locales,\n            // defaultLocale,\n            // For getServerSideProps we need to ensure we use the original URL\n            // and not the resolved URL to prevent a hydration mismatch on\n            // asPath\n            resolvedAsPath: isServerProps\n              ? formatUrl({\n                  // we use the original URL pathname less the _next/data prefix if\n                  // present\n                  pathname: urlPathname,\n                  query: origQuery,\n                })\n              : resolvedUrl,\n          }\n\n          renderResult = await renderToHTML(\n            req,\n            res,\n            pathname,\n            query,\n            renderOpts\n          )\n\n          html = renderResult\n          // TODO: change this to a different passing mechanism\n          pageData = (renderOpts as any).pageData\n          sprRevalidate = (renderOpts as any).revalidate\n          isNotFound = (renderOpts as any).isNotFound\n          isRedirect = (renderOpts as any).isRedirect\n        }\n\n        return { html, pageData, sprRevalidate, isNotFound, isRedirect }\n      }\n    )\n\n    const isProduction = !this.renderOpts.dev\n    const isDynamicPathname = isDynamicRoute(pathname)\n    const didRespond = isResSent(res)\n\n    const { staticPaths, fallbackMode } = hasStaticPaths\n      ? await this.getStaticPaths(pathname)\n      : { staticPaths: undefined, fallbackMode: false }\n\n    // When we did not respond from cache, we need to choose to block on\n    // rendering or return a skeleton.\n    //\n    // * Data requests always block.\n    //\n    // * Blocking mode fallback always blocks.\n    //\n    // * Preview mode toggles all pages to be resolved in a blocking manner.\n    //\n    // * Non-dynamic pages should block (though this is an impossible\n    //   case in production).\n    //\n    // * Dynamic pages should return their skeleton if not defined in\n    //   getStaticPaths, then finish the data request on the client-side.\n    //\n    if (\n      fallbackMode !== 'blocking' &&\n      ssgCacheKey &&\n      !didRespond &&\n      !isPreviewMode &&\n      isDynamicPathname &&\n      // Development should trigger fallback when the path is not in\n      // `getStaticPaths`\n      (isProduction ||\n        !staticPaths ||\n        // static paths always includes locale so make sure it's prefixed\n        // with it\n        !staticPaths.includes(\n          `${locale ? '/' + locale : ''}${resolvedUrlPathname}`\n        ))\n    ) {\n      if (\n        // In development, fall through to render to handle missing\n        // getStaticPaths.\n        (isProduction || staticPaths) &&\n        // When fallback isn't present, abort this render so we 404\n        fallbackMode !== 'static'\n      ) {\n        throw new NoFallbackError()\n      }\n\n      if (!isDataReq) {\n        let html: string\n\n        // Production already emitted the fallback as static HTML.\n        if (isProduction) {\n          html = await this.incrementalCache.getFallback(\n            locale ? `/${locale}${pathname}` : pathname\n          )\n        }\n        // We need to generate the fallback on-demand for development.\n        else {\n          query.__nextFallback = 'true'\n          if (isLikeServerless) {\n            prepareServerlessUrl(req, query)\n          }\n          const { value: renderResult } = await doRender()\n          html = renderResult.html\n        }\n\n        sendPayload(req, res, html, 'html', {\n          generateEtags: this.renderOpts.generateEtags,\n          poweredByHeader: this.renderOpts.poweredByHeader,\n        })\n        return null\n      }\n    }\n\n    const {\n      isOrigin,\n      value: { html, pageData, sprRevalidate, isNotFound, isRedirect },\n    } = await doRender()\n    let resHtml = html\n\n    if (\n      !isResSent(res) &&\n      !isNotFound &&\n      (isSSG || isDataReq || isServerProps)\n    ) {\n      if (isRedirect && !isDataReq) {\n        await handleRedirect(pageData)\n      } else {\n        sendPayload(\n          req,\n          res,\n          isDataReq ? JSON.stringify(pageData) : html,\n          isDataReq ? 'json' : 'html',\n          {\n            generateEtags: this.renderOpts.generateEtags,\n            poweredByHeader: this.renderOpts.poweredByHeader,\n          },\n          !this.renderOpts.dev || (isServerProps && !isDataReq)\n            ? {\n                private: isPreviewMode,\n                stateful: !isSSG,\n                revalidate: sprRevalidate,\n              }\n            : undefined\n        )\n      }\n      resHtml = null\n    }\n\n    // Update the cache if the head request and cacheable\n    if (isOrigin && ssgCacheKey) {\n      await this.incrementalCache.set(\n        ssgCacheKey,\n        { html: html!, pageData, isNotFound, isRedirect },\n        sprRevalidate\n      )\n    }\n\n    if (isNotFound) {\n      throw new NoFallbackError()\n    }\n    return resHtml\n  }\n\n  public async renderToHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    try {\n      const result = await this.findPageComponents(pathname, query)\n      if (result) {\n        try {\n          return await this.renderToHTMLWithComponents(\n            req,\n            res,\n            pathname,\n            result,\n            { ...this.renderOpts }\n          )\n        } catch (err) {\n          if (!(err instanceof NoFallbackError)) {\n            throw err\n          }\n        }\n      }\n\n      if (this.dynamicRoutes) {\n        for (const dynamicRoute of this.dynamicRoutes) {\n          const params = dynamicRoute.match(pathname)\n          if (!params) {\n            continue\n          }\n\n          const dynamicRouteResult = await this.findPageComponents(\n            dynamicRoute.page,\n            query,\n            params\n          )\n          if (dynamicRouteResult) {\n            try {\n              return await this.renderToHTMLWithComponents(\n                req,\n                res,\n                dynamicRoute.page,\n                dynamicRouteResult,\n                { ...this.renderOpts, params }\n              )\n            } catch (err) {\n              if (!(err instanceof NoFallbackError)) {\n                throw err\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      this.logError(err)\n\n      if (err && err.code === 'DECODE_FAILED') {\n        res.statusCode = 400\n        return await this.renderErrorToHTML(err, req, res, pathname, query)\n      }\n      res.statusCode = 500\n      return await this.renderErrorToHTML(err, req, res, pathname, query)\n    }\n    res.statusCode = 404\n    return await this.renderErrorToHTML(null, req, res, pathname, query)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<void> {\n    res.setHeader(\n      'Cache-Control',\n      'no-cache, no-store, max-age=0, must-revalidate'\n    )\n    const html = await this.renderErrorToHTML(err, req, res, pathname, query)\n    if (html === null) {\n      return\n    }\n    return this.sendHTML(req, res, html)\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    console.warn(\n      chalk.bold.yellow(`Warning: `) +\n        chalk.yellow(\n          `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://err.sh/next.js/custom-error-no-custom-404`\n        )\n    )\n  })\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    _pathname: string,\n    query: ParsedUrlQuery = {}\n  ) {\n    let result: null | FindComponentsResult = null\n\n    const is404 = res.statusCode === 404\n    let using404Page = false\n\n    // use static 404 page if available and is 404 response\n    if (is404) {\n      result = await this.findPageComponents('/404', query)\n      using404Page = result !== null\n    }\n\n    if (!result) {\n      result = await this.findPageComponents('/_error', query)\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !using404Page &&\n      (await this.hasPage('/_error')) &&\n      !(await this.hasPage('/404'))\n    ) {\n      this.customErrorNo404Warn()\n    }\n\n    let html: string | null\n    try {\n      try {\n        html = await this.renderToHTMLWithComponents(\n          req,\n          res,\n          using404Page ? '/404' : '/_error',\n          result!,\n          {\n            ...this.renderOpts,\n            err,\n          }\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (renderToHtmlError) {\n      console.error(renderToHtmlError)\n      res.statusCode = 500\n      html = 'Internal Server Error'\n    }\n    return html\n  }\n\n  public async render404(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    const url: any = req.url\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(url, true)\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query)\n  }\n\n  public async serveStatic(\n    req: IncomingMessage,\n    res: ServerResponse,\n    path: string,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!this.isServeableUrl(path)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    if (!(req.method === 'GET' || req.method === 'HEAD')) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      return this.renderError(null, req, res, path)\n    }\n\n    try {\n      await serveStatic(req, res, path)\n    } catch (err) {\n      if (err.code === 'ENOENT' || err.statusCode === 404) {\n        this.render404(req, res, parsedUrl)\n      } else if (err.statusCode === 412) {\n        res.statusCode = 412\n        return this.renderError(err, req, res, path)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  private _validFilesystemPathSet: Set<string> | null = null\n  private getFilesystemPaths(): Set<string> {\n    if (this._validFilesystemPathSet) {\n      return this._validFilesystemPathSet\n    }\n\n    const pathUserFilesStatic = join(this.dir, 'static')\n    let userFilesStatic: string[] = []\n    if (this.hasStaticDir && fs.existsSync(pathUserFilesStatic)) {\n      userFilesStatic = recursiveReadDirSync(pathUserFilesStatic).map((f) =>\n        join('.', 'static', f)\n      )\n    }\n\n    let userFilesPublic: string[] = []\n    if (this.publicDir && fs.existsSync(this.publicDir)) {\n      userFilesPublic = recursiveReadDirSync(this.publicDir).map((f) =>\n        join('.', 'public', f)\n      )\n    }\n\n    let nextFilesStatic: string[] = []\n    nextFilesStatic = recursiveReadDirSync(\n      join(this.distDir, 'static')\n    ).map((f) => join('.', relative(this.dir, this.distDir), 'static', f))\n\n    return (this._validFilesystemPathSet = new Set<string>([\n      ...nextFilesStatic,\n      ...userFilesPublic,\n      ...userFilesStatic,\n    ]))\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = resolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // Check if .next/static, static and public are in the path.\n    // If not the path is not available.\n    if (\n      (untrustedFilePath.startsWith(join(this.distDir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'public') + sep)) === false\n    ) {\n      return false\n    }\n\n    // Check against the real filesystem paths\n    const filesystemUrls = this.getFilesystemPaths()\n    const resolved = relative(this.dir, untrustedFilePath)\n    return filesystemUrls.has(resolved)\n  }\n\n  protected readBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err) {\n      if (!fs.existsSync(buildIdFile)) {\n        throw new Error(\n          `Could not find a valid build in the '${this.distDir}' directory! Try building your app with 'next build' before starting the server.`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected get _isLikeServerless(): boolean {\n    return isTargetLikeServerless(this.nextConfig.target)\n  }\n}\n\nfunction prepareServerlessUrl(\n  req: IncomingMessage,\n  query: ParsedUrlQuery\n): void {\n  const curUrl = parseUrl(req.url!, true)\n  req.url = formatUrl({\n    ...curUrl,\n    search: undefined,\n    query: {\n      ...curUrl.query,\n      ...query,\n    },\n  })\n}\n\nclass NoFallbackError extends Error {}\n"]}