{"version":3,"sources":["../../../../server/lib/squoosh/impl.ts"],"names":["FIXED_VERSION","DELAY_MS","_promise","delayOnce","ms","Promise","resolve","setTimeout","maybeDelay","isAppleM1","process","arch","platform","semver","lt","version","decodeBuffer","_buffer","buffer","Buffer","from","firstChunk","slice","firstChunkString","Array","map","v","String","fromCodePoint","join","key","Object","entries","supportedFormats","find","detectors","some","detector","exec","Error","d","dec","decode","Uint8Array","rotate","image","numRotations","ImageData","m","preprocessors","instantiate","data","width","height","resize","p","defaultOptions","encodeJpeg","quality","e","enc","r","encode","defaultEncoderOptions","encodeWebp","encodePng"],"mappings":"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","sourcesContent":["import semver from 'next/dist/compiled/semver'\nimport { codecs as supportedFormats, preprocessors } from './codecs'\nimport ImageData from './image_data'\n\n// Fixed in Node.js 16.5.0 and newer.\n// See https://github.com/nodejs/node/pull/39337\n// Eventually, remove this delay when engines is updated.\n// See https://git.io/JCTr0\nconst FIXED_VERSION = '16.5.0'\nconst DELAY_MS = 1000\nlet _promise: Promise<void> | undefined\n\nfunction delayOnce(ms: number): Promise<void> {\n  if (!_promise) {\n    _promise = new Promise((resolve) => {\n      setTimeout(resolve, ms)\n    })\n  }\n  return _promise\n}\n\nfunction maybeDelay(): Promise<void> {\n  const isAppleM1 = process.arch === 'arm64' && process.platform === 'darwin'\n  if (isAppleM1 && semver.lt(process.version, FIXED_VERSION)) {\n    return delayOnce(DELAY_MS)\n  }\n  return Promise.resolve()\n}\n\nexport async function decodeBuffer(\n  _buffer: Buffer | Uint8Array\n): Promise<ImageData> {\n  const buffer = Buffer.from(_buffer)\n  const firstChunk = buffer.slice(0, 16)\n  const firstChunkString = Array.from(firstChunk)\n    .map((v) => String.fromCodePoint(v))\n    .join('')\n  const key = Object.entries(supportedFormats).find(([, { detectors }]) =>\n    detectors.some((detector) => detector.exec(firstChunkString))\n  )?.[0] as keyof typeof supportedFormats\n  if (!key) {\n    throw Error(`Buffer has an unsupported format`)\n  }\n  const d = await supportedFormats[key].dec()\n  return d.decode(new Uint8Array(buffer))\n}\n\nexport async function rotate(\n  image: ImageData,\n  numRotations: number\n): Promise<ImageData> {\n  image = ImageData.from(image)\n\n  const m = await preprocessors['rotate'].instantiate()\n  return await m(image.data, image.width, image.height, { numRotations })\n}\n\ntype ResizeOpts = { image: ImageData } & (\n  | { width: number; height?: never }\n  | { height: number; width?: never }\n)\n\nexport async function resize({ image, width, height }: ResizeOpts) {\n  image = ImageData.from(image)\n\n  const p = preprocessors['resize']\n  const m = await p.instantiate()\n  await maybeDelay()\n  return await m(image.data, image.width, image.height, {\n    ...p.defaultOptions,\n    width,\n    height,\n  })\n}\n\nexport async function encodeJpeg(\n  image: ImageData,\n  { quality }: { quality: number }\n): Promise<Buffer | Uint8Array> {\n  image = ImageData.from(image)\n\n  const e = supportedFormats['mozjpeg']\n  const m = await e.enc()\n  await maybeDelay()\n  const r = await m.encode!(image.data, image.width, image.height, {\n    ...e.defaultEncoderOptions,\n    quality,\n  })\n  return Buffer.from(r)\n}\n\nexport async function encodeWebp(\n  image: ImageData,\n  { quality }: { quality: number }\n): Promise<Buffer | Uint8Array> {\n  image = ImageData.from(image)\n\n  const e = supportedFormats['webp']\n  const m = await e.enc()\n  await maybeDelay()\n  const r = await m.encode!(image.data, image.width, image.height, {\n    ...e.defaultEncoderOptions,\n    quality,\n  })\n  return Buffer.from(r)\n}\n\nexport async function encodePng(\n  image: ImageData\n): Promise<Buffer | Uint8Array> {\n  image = ImageData.from(image)\n\n  const e = supportedFormats['oxipng']\n  const m = await e.enc()\n  await maybeDelay()\n  const r = await m.encode(image.data, image.width, image.height, {\n    ...e.defaultEncoderOptions,\n  })\n  return Buffer.from(r)\n}\n"]}