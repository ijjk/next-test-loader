{"version":3,"sources":["../../server/next-server.ts"],"names":["getCustomRouteMatcher","Server","constructor","dir","quiet","conf","dev","minimalMode","customServer","nextConfig","distDir","pagesDir","publicDir","hasStaticDir","serverBuildDir","pagesManifest","buildId","renderOpts","compression","incrementalCache","responseCache","router","dynamicRoutes","customRoutes","_cachedPreviewManifest","customErrorNo404Warn","console","warn","chalk","bold","yellow","_validFilesystemPathSet","Log","CLIENT_PUBLIC_FILES_PATH","fs","existsSync","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","generateEtags","compress","readBuildId","poweredByHeader","canonicalBase","amp","previewProps","getPreviewProps","undefined","ampOptimizerConfig","experimental","optimizer","basePath","images","JSON","stringify","optimizeFonts","fontManifest","_isLikeServerless","optimizeImages","optimizeCss","disableOptimizedLoading","domainLocales","i18n","domains","Object","keys","length","runtimeConfig","target","envConfig","setConfig","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","pagesManifestPath","PAGES_MANIFEST","require","getCustomRoutes","Router","generateRoutes","setAssetPrefix","IncrementalCache","locales","flushToDisk","sprFlushToDisk","ResponseCache","process","env","__NEXT_OPTIMIZE_FONTS","__NEXT_OPTIMIZE_IMAGES","__NEXT_OPTIMIZE_CSS","logError","err","error","handleRequest","req","res","parsedUrl","url","query","__NEXT_INIT_QUERY","assign","startsWith","_nextHadBasePath","replace","headers","reqUrlIsDataUrl","includes","matchedPathIsDataUrl","isDataUrl","parsedPath","pathname","matchedPathname","matchedPathnameNoExt","localePathResult","detectedLocale","__nextLocale","pageIsDynamic","combinedRewrites","push","rewrites","beforeFiles","afterFiles","fallback","utils","page","handleRewrites","params","paramsResult","normalizeDynamicRouteParams","hasValidParams","opts","getParamsFromRouteMatches","locale","dynamicRouteMatcher","interpolateDynamicPath","normalizeVercelUrl","parsed","defaultLocale","acceptPreferredLocale","localeDetection","accept","language","_","host","hostname","split","toLowerCase","detectedDomain","__nextIsLocaleDomain","localeDomainRedirect","__nextHadTrailingSlash","endsWith","trailingSlash","__nextStrippedLocale","render404","localeToCheck","matchedDomain","domain","http","denormalizedPagePath","detectedDefaultLocale","shouldStripDefaultLocale","shouldAddLocalePrefix","previous","getHeader","setHeader","Array","isArray","cookie","serialize","httpOnly","path","statusCode","TEMPORARY_REDIRECT_STATUS","end","__nextDefaultLocale","run","getRequestHandler","bind","prefix","prepare","close","setImmutableAssetCacheControl","ROUTES_MANIFEST","getPrerenderManifest","manifest","PRERENDER_MANIFEST","preview","server","publicRoutes","generatePublicRoutes","staticFilesRoute","match","name","fn","p","serveStatic","finished","fsRoutes","type","CLIENT_STATIC_FILES_RUNTIME","CLIENT_STATIC_FILES_PATH","_parsedUrl","shift","join","render","_nextDataReq","_params","restrictedRedirectPaths","map","getCustomRoute","r","source","internal","regex","_req","_res","headerRoute","has","hasParams","header","key","value","stringifyQuery","initialQueryValues","values","encodeURIComponent","some","val","redirects","redirect","redirectRoute","parsedDestination","destination","search","updatedDestination","buildRewrite","rewrite","check","rewriteRoute","newUrl","protocol","proxy","Proxy","changeOrigin","ignorePath","proxyTimeout","Promise","proxyResolve","proxyReject","on","proxyReq","web","_nextRewroteUrl","_nextDidRewrite","catchAllRoute","Error","bubbleNoFallback","_nextBubbleNoFallback","handled","handleApiRequest","NoFallbackError","useFileSystemPublicRoutes","getDynamicRoutes","pageChecker","hasPage","getPagePath","found","_beforeCatchAllRender","ensureApiPage","_pathname","pageFound","dynamicRoute","builtPagePath","code","pageModule","default","prepareServerlessUrl","publicFiles","Set","encodeURI","pathParts","basePathParts","every","part","idx","splice","addedPages","add","filter","item","Boolean","handleCompression","matched","execute","DecodeError","renderError","sendResponse","body","revalidateOptions","response","renderToResponse","findPageComponents","paths","pagePath","components","Component","getStaticProps","getStaticPaths","staticPaths","fallbackField","fallbackMode","renderToResponseWithComponents","is404Page","is500Page","isLikeServerless","renderReqToHTML","isSSG","hasServerProps","getServerSideProps","hasStaticPaths","hasGetInitialProps","getInitialProps","isDataReq","STATIC_STATUS_PAGES","parseInt","substr","previewData","isPreviewMode","urlPathname","resolvedUrlPathname","stripNextDataPath","splitPath","substring","indexOf","handleRedirect","pageData","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","PERMANENT_REDIRECT_STATUS","ssgCacheKey","seg","decodeURIComponent","doRender","html","sprRevalidate","isNotFound","isRedirect","renderResult","revalidate","origQuery","hadTrailingSlash","resolvedUrl","resolvedAsPath","kind","props","cacheEntry","get","hasResolved","isProduction","isDynamicPathname","didRespond","getFallback","__nextFallback","result","cachedData","private","stateful","isNoFallbackError","dynamicRouteResult","renderErrorToResponse","isWrappedError","WrappedBuildError","innerError","renderToHTML","setHeaders","_err","is404","using404Page","statusPage","NODE_ENV","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","isServeableUrl","method","getFilesystemPaths","pathUserFilesStatic","userFilesStatic","f","userFilesPublic","nextFilesStatic","untrustedFileUrl","decodedUntrustedFilePath","untrustedFilePath","sep","filesystemUrls","resolved","buildIdFile","BUILD_ID_FILE","readFileSync","trim","curUrl"],"mappings":"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","sourcesContent":["import compression from 'next/dist/compiled/compression'\nimport fs from 'fs'\nimport chalk from 'chalk'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport Proxy from 'next/dist/compiled/http-proxy'\nimport { join, relative, resolve, sep } from 'path'\nimport {\n  parse as parseQs,\n  stringify as stringifyQs,\n  ParsedUrlQuery,\n} from 'querystring'\nimport { format as formatUrl, parse as parseUrl, UrlWithParsedQuery } from 'url'\nimport { PrerenderManifest } from '../build'\nimport {\n  getRedirectStatus,\n  Header,\n  Redirect,\n  Rewrite,\n  RouteType,\n  CustomRoutes,\n  modifyRouteRegex,\n} from '../lib/load-custom-routes'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME,\n  PAGES_MANIFEST,\n  PERMANENT_REDIRECT_STATUS,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  STATIC_STATUS_PAGES,\n  TEMPORARY_REDIRECT_STATUS,\n} from '../shared/lib/constants'\nimport {\n  getRouteMatcher,\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../shared/lib/router/utils'\nimport * as envConfig from '../shared/lib/runtime-config'\nimport {\n  DecodeError,\n  isResSent,\n  NextApiRequest,\n  NextApiResponse,\n} from '../shared/lib/utils'\nimport {\n  apiResolver,\n  setLazyProp,\n  getCookieParser,\n  tryGetPreviewData,\n  __ApiPreviewProps,\n} from './api-utils'\nimport { DomainLocales, isTargetLikeServerless, NextConfig } from './config'\nimport pathMatch from '../shared/lib/router/utils/path-match'\nimport { recursiveReadDirSync } from './lib/recursive-readdir-sync'\nimport { loadComponents, LoadComponentsReturnType } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport { RenderOpts, RenderOptsPartial, renderToHTML } from './render'\nimport { getPagePath, requireFontManifest } from './require'\nimport Router, {\n  DynamicRoutes,\n  PageChecker,\n  Params,\n  route,\n  Route,\n} from './router'\nimport prepareDestination, {\n  compileNonPath,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { sendPayload, setRevalidateHeaders } from './send-payload'\nimport { serveStatic } from './serve-static'\nimport { IncrementalCache } from './incremental-cache'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage } from './utils'\nimport { loadEnvConfig } from '@next/env'\nimport './node-polyfill-fetch'\nimport { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { removePathTrailingSlash } from '../client/normalize-trailing-slash'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { FontManifest } from './font-utils'\nimport { denormalizePagePath } from './denormalize-page-path'\nimport accept from '@hapi/accept'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { detectLocaleCookie } from '../shared/lib/i18n/detect-locale-cookie'\nimport * as Log from '../build/output/log'\nimport { imageOptimizer } from './image-optimizer'\nimport { detectDomainLocale } from '../shared/lib/i18n/detect-domain-locale'\nimport cookie from 'next/dist/compiled/cookie'\nimport escapePathDelimiters from '../shared/lib/router/utils/escape-path-delimiters'\nimport { getUtils } from '../build/webpack/loaders/next-serverless-loader/utils'\nimport { PreviewData } from 'next/types'\nimport ResponseCache, {\n  ResponseCacheEntry,\n  ResponseCacheValue,\n} from './response-cache'\nimport { NextConfigComplete } from './config-shared'\n\nconst getCustomRouteMatcher = pathMatch(true)\n\ntype Middleware = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) => void\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: ParsedUrlQuery\n}\n\ntype DynamicRouteItem = {\n  page: string\n  match: ReturnType<typeof getRouteMatcher>\n}\n\nexport type ServerConstructor = {\n  /**\n   * Where the Next project is located - @default '.'\n   */\n  dir?: string\n  /**\n   * Hide error messages containing server information - @default false\n   */\n  quiet?: boolean\n  /**\n   * Object what you would use in next.config.js - @default {}\n   */\n  conf?: NextConfig | null\n  dev?: boolean\n  customServer?: boolean\n}\n\nexport default class Server {\n  protected dir: string\n  protected quiet: boolean\n  protected nextConfig: NextConfigComplete\n  protected distDir: string\n  protected pagesDir?: string\n  protected publicDir: string\n  protected hasStaticDir: boolean\n  protected serverBuildDir: string\n  protected pagesManifest?: PagesManifest\n  protected buildId: string\n  protected minimalMode: boolean\n  protected renderOpts: {\n    poweredByHeader: boolean\n    buildId: string\n    generateEtags: boolean\n    runtimeConfig?: { [key: string]: any }\n    assetPrefix?: string\n    canonicalBase: string\n    dev?: boolean\n    previewProps: __ApiPreviewProps\n    customServer?: boolean\n    ampOptimizerConfig?: { [key: string]: any }\n    basePath: string\n    optimizeFonts: boolean\n    images: string\n    fontManifest: FontManifest\n    optimizeImages: boolean\n    disableOptimizedLoading?: boolean\n    optimizeCss: any\n    locale?: string\n    locales?: string[]\n    defaultLocale?: string\n    domainLocales?: DomainLocales\n    distDir: string\n  }\n  private compression?: Middleware\n  private incrementalCache: IncrementalCache\n  private responseCache: ResponseCache\n  protected router: Router\n  protected dynamicRoutes?: DynamicRoutes\n  protected customRoutes: CustomRoutes\n\n  public constructor({\n    dir = '.',\n    quiet = false,\n    conf,\n    dev = false,\n    minimalMode = false,\n    customServer = true,\n  }: ServerConstructor & { conf: NextConfig; minimalMode?: boolean }) {\n    this.dir = resolve(dir)\n    this.quiet = quiet\n    loadEnvConfig(this.dir, dev, Log)\n\n    this.nextConfig = conf as NextConfigComplete\n\n    this.distDir = join(this.dir, this.nextConfig.distDir)\n    this.publicDir = join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n    this.hasStaticDir = !minimalMode && fs.existsSync(join(this.dir, 'static'))\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n      compress,\n    } = this.nextConfig\n\n    this.buildId = this.readBuildId()\n    this.minimalMode = minimalMode\n\n    this.renderOpts = {\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPreviewProps(),\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: JSON.stringify(this.nextConfig.images),\n      optimizeFonts: !!this.nextConfig.optimizeFonts && !dev,\n      fontManifest:\n        this.nextConfig.optimizeFonts && !dev\n          ? requireFontManifest(this.distDir, this._isLikeServerless)\n          : null,\n      optimizeImages: !!this.nextConfig.experimental.optimizeImages,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      disableOptimizedLoading: this.nextConfig.experimental\n        .disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n    }\n\n    // Only the `publicRuntimeConfig` key is exposed to the client side\n    // It'll be rendered as part of __NEXT_DATA__ on the client side\n    if (Object.keys(publicRuntimeConfig).length > 0) {\n      this.renderOpts.runtimeConfig = publicRuntimeConfig\n    }\n\n    if (compress && this.nextConfig.target === 'server') {\n      this.compression = compression() as Middleware\n    }\n\n    // Initialize next/config with the environment configuration\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.serverBuildDir = join(\n      this.distDir,\n      this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n    )\n    const pagesManifestPath = join(this.serverBuildDir, PAGES_MANIFEST)\n\n    if (!dev) {\n      this.pagesManifest = require(pagesManifestPath)\n    }\n\n    this.customRoutes = this.getCustomRoutes()\n    this.router = new Router(this.generateRoutes())\n    this.setAssetPrefix(assetPrefix)\n\n    this.incrementalCache = new IncrementalCache({\n      dev,\n      distDir: this.distDir,\n      pagesDir: join(\n        this.distDir,\n        this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n        'pages'\n      ),\n      locales: this.nextConfig.i18n?.locales,\n      flushToDisk: !minimalMode && this.nextConfig.experimental.sprFlushToDisk,\n    })\n    this.responseCache = new ResponseCache(this.incrementalCache)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting both serverless and SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_IMAGES`.\n     * TODO(atcastle@): Remove this when experimental.optimizeImages are being cleaned up.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeImages) {\n      process.env.__NEXT_OPTIMIZE_IMAGES = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    console.error(err)\n  }\n\n  private async handleRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    setLazyProp({ req: req as any }, 'cookies', getCookieParser(req))\n\n    // Parse url if parsedUrl not provided\n    if (!parsedUrl || typeof parsedUrl !== 'object') {\n      const url: any = req.url\n      parsedUrl = parseUrl(url, true)\n    }\n    const { basePath, i18n } = this.nextConfig\n\n    // Parse the querystring ourselves if the user doesn't handle querystring parsing\n    if (typeof parsedUrl.query === 'string') {\n      parsedUrl.query = parseQs(parsedUrl.query)\n    }\n    ;(req as any).__NEXT_INIT_QUERY = Object.assign({}, parsedUrl.query)\n\n    if (basePath && req.url?.startsWith(basePath)) {\n      // store original URL to allow checking if basePath was\n      // provided or not\n      ;(req as any)._nextHadBasePath = true\n      req.url = req.url!.replace(basePath, '') || '/'\n    }\n\n    if (\n      this.minimalMode &&\n      req.headers['x-matched-path'] &&\n      typeof req.headers['x-matched-path'] === 'string'\n    ) {\n      const reqUrlIsDataUrl = req.url?.includes('/_next/data')\n      const matchedPathIsDataUrl = req.headers['x-matched-path']?.includes(\n        '/_next/data'\n      )\n      const isDataUrl = reqUrlIsDataUrl || matchedPathIsDataUrl\n\n      let parsedPath = parseUrl(\n        isDataUrl ? req.url! : (req.headers['x-matched-path'] as string),\n        true\n      )\n      const { pathname, query } = parsedPath\n      let matchedPathname = pathname as string\n\n      let matchedPathnameNoExt = isDataUrl\n        ? matchedPathname.replace(/\\.json$/, '')\n        : matchedPathname\n\n      if (i18n) {\n        const localePathResult = normalizeLocalePath(\n          matchedPathname || '/',\n          i18n.locales\n        )\n\n        if (localePathResult.detectedLocale) {\n          parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n        }\n      }\n\n      if (isDataUrl) {\n        matchedPathname = denormalizePagePath(matchedPathname)\n        matchedPathnameNoExt = denormalizePagePath(matchedPathnameNoExt)\n      }\n\n      const pageIsDynamic = isDynamicRoute(matchedPathnameNoExt)\n      const combinedRewrites: Rewrite[] = []\n\n      combinedRewrites.push(...this.customRoutes.rewrites.beforeFiles)\n      combinedRewrites.push(...this.customRoutes.rewrites.afterFiles)\n      combinedRewrites.push(...this.customRoutes.rewrites.fallback)\n\n      const utils = getUtils({\n        pageIsDynamic,\n        page: matchedPathnameNoExt,\n        i18n: this.nextConfig.i18n,\n        basePath: this.nextConfig.basePath,\n        rewrites: combinedRewrites,\n      })\n\n      utils.handleRewrites(req, parsedUrl)\n\n      // interpolate dynamic params and normalize URL if needed\n      if (pageIsDynamic) {\n        let params: ParsedUrlQuery | false = {}\n\n        Object.assign(parsedUrl.query, query)\n        const paramsResult = utils.normalizeDynamicRouteParams(parsedUrl.query)\n\n        if (paramsResult.hasValidParams) {\n          params = paramsResult.params\n        } else if (req.headers['x-now-route-matches']) {\n          const opts: Record<string, string> = {}\n          params = utils.getParamsFromRouteMatches(\n            req,\n            opts,\n            (parsedUrl.query.__nextLocale as string | undefined) || ''\n          )\n\n          if (opts.locale) {\n            parsedUrl.query.__nextLocale = opts.locale\n          }\n        } else {\n          params = utils.dynamicRouteMatcher!(matchedPathnameNoExt)\n        }\n\n        if (params) {\n          params = utils.normalizeDynamicRouteParams(params).params\n\n          matchedPathname = utils.interpolateDynamicPath(\n            matchedPathname,\n            params\n          )\n          req.url = utils.interpolateDynamicPath(req.url!, params)\n        }\n\n        if (reqUrlIsDataUrl && matchedPathIsDataUrl) {\n          req.url = formatUrl({\n            ...parsedPath,\n            pathname: matchedPathname,\n          })\n        }\n\n        Object.assign(parsedUrl.query, params)\n        utils.normalizeVercelUrl(req, true)\n      }\n\n      parsedUrl.pathname = `${basePath || ''}${\n        matchedPathname === '/' && basePath ? '' : matchedPathname\n      }`\n    }\n\n    if (i18n) {\n      // get pathname from URL with basePath stripped for locale detection\n      let { pathname, ...parsed } = parseUrl(req.url || '/')\n      pathname = pathname || '/'\n\n      let defaultLocale = i18n.defaultLocale\n      let detectedLocale = detectLocaleCookie(req, i18n.locales)\n      let acceptPreferredLocale\n      try {\n        acceptPreferredLocale =\n          i18n.localeDetection !== false\n            ? accept.language(req.headers['accept-language'], i18n.locales)\n            : detectedLocale\n      } catch (_) {\n        acceptPreferredLocale = detectedLocale\n      }\n      const { host } = req?.headers || {}\n      // remove port from host if present\n      const hostname = host?.split(':')[0].toLowerCase()\n\n      const detectedDomain = detectDomainLocale(i18n.domains, hostname)\n      if (detectedDomain) {\n        defaultLocale = detectedDomain.defaultLocale\n        detectedLocale = defaultLocale\n        ;(req as any).__nextIsLocaleDomain = true\n      }\n\n      // if not domain specific locale use accept-language preferred\n      detectedLocale = detectedLocale || acceptPreferredLocale\n\n      let localeDomainRedirect: string | undefined\n      ;(req as any).__nextHadTrailingSlash = pathname!.endsWith('/')\n\n      if (pathname === '/') {\n        ;(req as any).__nextHadTrailingSlash = this.nextConfig.trailingSlash\n      }\n      const localePathResult = normalizeLocalePath(pathname!, i18n.locales)\n\n      if (localePathResult.detectedLocale) {\n        detectedLocale = localePathResult.detectedLocale\n        req.url = formatUrl({\n          ...parsed,\n          pathname: localePathResult.pathname,\n        })\n        ;(req as any).__nextStrippedLocale = true\n\n        if (\n          localePathResult.pathname === '/api' ||\n          localePathResult.pathname.startsWith('/api/')\n        ) {\n          return this.render404(req, res, parsedUrl)\n        }\n      }\n\n      // If a detected locale is a domain specific locale and we aren't already\n      // on that domain and path prefix redirect to it to prevent duplicate\n      // content from multiple domains\n      if (detectedDomain && pathname === '/') {\n        const localeToCheck = acceptPreferredLocale\n        // const localeToCheck = localePathResult.detectedLocale\n        //   ? detectedLocale\n        //   : acceptPreferredLocale\n\n        const matchedDomain = detectDomainLocale(\n          i18n.domains,\n          undefined,\n          localeToCheck\n        )\n\n        if (\n          matchedDomain &&\n          (matchedDomain.domain !== detectedDomain.domain ||\n            localeToCheck !== matchedDomain.defaultLocale)\n        ) {\n          localeDomainRedirect = `http${matchedDomain.http ? '' : 's'}://${\n            matchedDomain.domain\n          }/${\n            localeToCheck === matchedDomain.defaultLocale ? '' : localeToCheck\n          }`\n        }\n      }\n\n      const denormalizedPagePath = denormalizePagePath(pathname || '/')\n      const detectedDefaultLocale =\n        !detectedLocale ||\n        detectedLocale.toLowerCase() === defaultLocale.toLowerCase()\n      const shouldStripDefaultLocale = false\n      // detectedDefaultLocale &&\n      // denormalizedPagePath.toLowerCase() ===\n      //   `/${i18n.defaultLocale.toLowerCase()}`\n\n      const shouldAddLocalePrefix =\n        !detectedDefaultLocale && denormalizedPagePath === '/'\n\n      detectedLocale = detectedLocale || i18n.defaultLocale\n\n      if (\n        i18n.localeDetection !== false &&\n        (localeDomainRedirect ||\n          shouldAddLocalePrefix ||\n          shouldStripDefaultLocale)\n      ) {\n        // set the NEXT_LOCALE cookie when a user visits the default locale\n        // with the locale prefix so that they aren't redirected back to\n        // their accept-language preferred locale\n        if (\n          shouldStripDefaultLocale &&\n          acceptPreferredLocale !== defaultLocale\n        ) {\n          const previous = res.getHeader('set-cookie')\n\n          res.setHeader('set-cookie', [\n            ...(typeof previous === 'string'\n              ? [previous]\n              : Array.isArray(previous)\n              ? previous\n              : []),\n            cookie.serialize('NEXT_LOCALE', defaultLocale, {\n              httpOnly: true,\n              path: '/',\n            }),\n          ])\n        }\n\n        res.setHeader(\n          'Location',\n          localeDomainRedirect\n            ? localeDomainRedirect\n            : formatUrl({\n                // make sure to include any query values when redirecting\n                ...parsed,\n                pathname: shouldStripDefaultLocale\n                  ? basePath || `/`\n                  : `${basePath || ''}/${detectedLocale}`,\n              })\n        )\n        res.statusCode = TEMPORARY_REDIRECT_STATUS\n        res.end()\n        return\n      }\n\n      parsedUrl.query.__nextDefaultLocale =\n        detectedDomain?.defaultLocale || i18n.defaultLocale\n\n      if (!this.minimalMode || !parsedUrl.query.__nextLocale) {\n        parsedUrl.query.__nextLocale =\n          localePathResult.detectedLocale ||\n          detectedDomain?.defaultLocale ||\n          defaultLocale\n      }\n    }\n\n    res.statusCode = 200\n    try {\n      return await this.run(req, res, parsedUrl)\n    } catch (err) {\n      if (this.minimalMode) {\n        throw err\n      }\n      this.logError(err)\n      res.statusCode = 500\n      res.end('Internal Server Error')\n    }\n  }\n\n  public getRequestHandler() {\n    return this.handleRequest.bind(this)\n  }\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  // Backwards compatibility\n  public async prepare(): Promise<void> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected setImmutableAssetCacheControl(res: ServerResponse): void {\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable')\n  }\n\n  protected getCustomRoutes(): CustomRoutes {\n    const customRoutes = require(join(this.distDir, ROUTES_MANIFEST))\n    let rewrites: CustomRoutes['rewrites']\n\n    // rewrites can be stored as an array when an array is\n    // returned in next.config.js so massage them into\n    // the expected object format\n    if (Array.isArray(customRoutes.rewrites)) {\n      rewrites = {\n        beforeFiles: [],\n        afterFiles: customRoutes.rewrites,\n        fallback: [],\n      }\n    } else {\n      rewrites = customRoutes.rewrites\n    }\n    return Object.assign(customRoutes, { rewrites })\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    const manifest = require(join(this.distDir, PRERENDER_MANIFEST))\n    return (this._cachedPreviewManifest = manifest)\n  }\n\n  protected getPreviewProps(): __ApiPreviewProps {\n    return this.getPrerenderManifest().preview\n  }\n\n  protected generateRoutes(): {\n    basePath: string\n    headers: Route[]\n    rewrites: {\n      beforeFiles: Route[]\n      afterFiles: Route[]\n      fallback: Route[]\n    }\n    fsRoutes: Route[]\n    redirects: Route[]\n    catchAllRoute: Route\n    pageChecker: PageChecker\n    useFileSystemPublicRoutes: boolean\n    dynamicRoutes: DynamicRoutes | undefined\n    locales: string[]\n  } {\n    const server: Server = this\n    const publicRoutes = fs.existsSync(this.publicDir)\n      ? this.generatePublicRoutes()\n      : []\n\n    const staticFilesRoute = this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(this.dir, 'static', ...params.path)\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n\n    const fsRoutes: Route[] = [\n      {\n        match: route('/_next/static/:path*'),\n        type: 'route',\n        name: '_next/static catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          // make sure to 404 for /_next/static itself\n          if (!params.path) {\n            await this.render404(req, res, parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          if (\n            params.path[0] === CLIENT_STATIC_FILES_RUNTIME ||\n            params.path[0] === 'chunks' ||\n            params.path[0] === 'css' ||\n            params.path[0] === 'image' ||\n            params.path[0] === 'media' ||\n            params.path[0] === this.buildId ||\n            params.path[0] === 'pages' ||\n            params.path[1] === 'pages'\n          ) {\n            this.setImmutableAssetCacheControl(res)\n          }\n          const p = join(\n            this.distDir,\n            CLIENT_STATIC_FILES_PATH,\n            ...(params.path || [])\n          )\n          await this.serveStatic(req, res, p, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/data/:path*'),\n        type: 'route',\n        name: '_next/data catchall',\n        fn: async (req, res, params, _parsedUrl) => {\n          // Make sure to 404 for /_next/data/ itself and\n          // we also want to 404 if the buildId isn't correct\n          if (!params.path || params.path[0] !== this.buildId) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n          // remove buildId from URL\n          params.path.shift()\n\n          // show 404 if it doesn't end with .json\n          if (!params.path[params.path.length - 1].endsWith('.json')) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          // re-create page's pathname\n          let pathname = `/${params.path.join('/')}`\n          pathname = getRouteFromAssetPath(pathname, '.json')\n\n          const { i18n } = this.nextConfig\n\n          if (i18n) {\n            const { host } = req?.headers || {}\n            // remove port from host and remove port if present\n            const hostname = host?.split(':')[0].toLowerCase()\n            const localePathResult = normalizeLocalePath(pathname, i18n.locales)\n            const { defaultLocale } =\n              detectDomainLocale(i18n.domains, hostname) || {}\n\n            let detectedLocale = ''\n\n            if (localePathResult.detectedLocale) {\n              pathname = localePathResult.pathname\n              detectedLocale = localePathResult.detectedLocale\n            }\n\n            _parsedUrl.query.__nextLocale = detectedLocale!\n            _parsedUrl.query.__nextDefaultLocale =\n              defaultLocale || i18n.defaultLocale\n\n            if (!detectedLocale) {\n              _parsedUrl.query.__nextLocale =\n                _parsedUrl.query.__nextDefaultLocale\n              await this.render404(req, res, _parsedUrl)\n              return { finished: true }\n            }\n          }\n\n          const parsedUrl = parseUrl(pathname, true)\n\n          await this.render(\n            req,\n            res,\n            pathname,\n            { ..._parsedUrl.query, _nextDataReq: '1' },\n            parsedUrl\n          )\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/image'),\n        type: 'route',\n        name: '_next/image catchall',\n        fn: (req, res, _params, parsedUrl) =>\n          imageOptimizer(\n            server,\n            req,\n            res,\n            parsedUrl,\n            server.nextConfig,\n            server.distDir,\n            this.renderOpts.dev\n          ),\n      },\n      {\n        match: route('/_next/:path*'),\n        type: 'route',\n        name: '_next catchall',\n        // This path is needed because `render()` does a check for `/_next` and the calls the routing again\n        fn: async (req, res, _params, parsedUrl) => {\n          await this.render404(req, res, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      ...publicRoutes,\n      ...staticFilesRoute,\n    ]\n\n    const restrictedRedirectPaths = ['/_next'].map((p) =>\n      this.nextConfig.basePath ? `${this.nextConfig.basePath}${p}` : p\n    )\n\n    const getCustomRoute = (\n      r: Rewrite | Redirect | Header,\n      type: RouteType\n    ) => {\n      const match = getCustomRouteMatcher(\n        r.source,\n        !(r as any).internal\n          ? (regex: string) =>\n              modifyRouteRegex(\n                regex,\n                type === 'redirect' ? restrictedRedirectPaths : undefined\n              )\n          : undefined\n      )\n\n      return {\n        ...r,\n        type,\n        match,\n        name: type,\n        fn: async (_req, _res, _params, _parsedUrl) => ({ finished: false }),\n      } as Route & Rewrite & Header\n    }\n\n    // Headers come very first\n    const headers = this.minimalMode\n      ? []\n      : this.customRoutes.headers.map((r) => {\n          const headerRoute = getCustomRoute(r, 'header')\n          return {\n            match: headerRoute.match,\n            has: headerRoute.has,\n            type: headerRoute.type,\n            name: `${headerRoute.type} ${headerRoute.source} header route`,\n            fn: async (_req, res, params, _parsedUrl) => {\n              const hasParams = Object.keys(params).length > 0\n\n              for (const header of (headerRoute as Header).headers) {\n                let { key, value } = header\n                if (hasParams) {\n                  key = compileNonPath(key, params)\n                  value = compileNonPath(value, params)\n                }\n                res.setHeader(key, value)\n              }\n              return { finished: false }\n            },\n          } as Route\n        })\n\n    // since initial query values are decoded by querystring.parse\n    // we need to re-encode them here but still allow passing through\n    // values from rewrites/redirects\n    const stringifyQuery = (req: IncomingMessage, query: ParsedUrlQuery) => {\n      const initialQueryValues = Object.values((req as any).__NEXT_INIT_QUERY)\n\n      return stringifyQs(query, undefined, undefined, {\n        encodeURIComponent(value) {\n          if (initialQueryValues.some((val) => val === value)) {\n            return encodeURIComponent(value)\n          }\n          return value\n        },\n      })\n    }\n\n    const redirects = this.minimalMode\n      ? []\n      : this.customRoutes.redirects.map((redirect) => {\n          const redirectRoute = getCustomRoute(redirect, 'redirect')\n          return {\n            internal: redirectRoute.internal,\n            type: redirectRoute.type,\n            match: redirectRoute.match,\n            has: redirectRoute.has,\n            statusCode: redirectRoute.statusCode,\n            name: `Redirect route ${redirectRoute.source}`,\n            fn: async (req, res, params, parsedUrl) => {\n              const { parsedDestination } = prepareDestination(\n                redirectRoute.destination,\n                params,\n                parsedUrl.query,\n                false\n              )\n\n              const { query } = parsedDestination\n              delete (parsedDestination as any).query\n\n              parsedDestination.search = stringifyQuery(req, query)\n\n              const updatedDestination = formatUrl(parsedDestination)\n\n              res.setHeader('Location', updatedDestination)\n              res.statusCode = getRedirectStatus(redirectRoute as Redirect)\n\n              // Since IE11 doesn't support the 308 header add backwards\n              // compatibility using refresh header\n              if (res.statusCode === 308) {\n                res.setHeader('Refresh', `0;url=${updatedDestination}`)\n              }\n\n              res.end()\n              return {\n                finished: true,\n              }\n            },\n          } as Route\n        })\n\n    const buildRewrite = (rewrite: Rewrite, check = true) => {\n      const rewriteRoute = getCustomRoute(rewrite, 'rewrite')\n      return {\n        ...rewriteRoute,\n        check,\n        type: rewriteRoute.type,\n        name: `Rewrite route ${rewriteRoute.source}`,\n        match: rewriteRoute.match,\n        fn: async (req, res, params, parsedUrl) => {\n          const { newUrl, parsedDestination } = prepareDestination(\n            rewriteRoute.destination,\n            params,\n            parsedUrl.query,\n            true\n          )\n\n          // external rewrite, proxy it\n          if (parsedDestination.protocol) {\n            const { query } = parsedDestination\n            delete (parsedDestination as any).query\n            parsedDestination.search = stringifyQuery(req, query)\n\n            const target = formatUrl(parsedDestination)\n            const proxy = new Proxy({\n              target,\n              changeOrigin: true,\n              ignorePath: true,\n              proxyTimeout: 30_000, // limit proxying to 30 seconds\n            })\n\n            await new Promise((proxyResolve, proxyReject) => {\n              let finished = false\n\n              proxy.on('proxyReq', (proxyReq) => {\n                proxyReq.on('close', () => {\n                  if (!finished) {\n                    finished = true\n                    proxyResolve(true)\n                  }\n                })\n              })\n              proxy.on('error', (err) => {\n                if (!finished) {\n                  finished = true\n                  proxyReject(err)\n                }\n              })\n              proxy.web(req, res)\n            })\n\n            return {\n              finished: true,\n            }\n          }\n          ;(req as any)._nextRewroteUrl = newUrl\n          ;(req as any)._nextDidRewrite =\n            (req as any)._nextRewroteUrl !== req.url\n\n          return {\n            finished: false,\n            pathname: newUrl,\n            query: parsedDestination.query,\n          }\n        },\n      } as Route\n    }\n\n    let beforeFiles: Route[] = []\n    let afterFiles: Route[] = []\n    let fallback: Route[] = []\n\n    if (!this.minimalMode) {\n      if (Array.isArray(this.customRoutes.rewrites)) {\n        afterFiles = this.customRoutes.rewrites.map((r) => buildRewrite(r))\n      } else {\n        beforeFiles = this.customRoutes.rewrites.beforeFiles.map((r) =>\n          buildRewrite(r, false)\n        )\n        afterFiles = this.customRoutes.rewrites.afterFiles.map((r) =>\n          buildRewrite(r)\n        )\n        fallback = this.customRoutes.rewrites.fallback.map((r) =>\n          buildRewrite(r)\n        )\n      }\n    }\n\n    const catchAllRoute: Route = {\n      match: route('/:path*'),\n      type: 'route',\n      name: 'Catchall render',\n      fn: async (req, res, _params, parsedUrl) => {\n        let { pathname, query } = parsedUrl\n        if (!pathname) {\n          throw new Error('pathname is undefined')\n        }\n\n        // next.js core assumes page path without trailing slash\n        pathname = removePathTrailingSlash(pathname)\n\n        if (this.nextConfig.i18n) {\n          const localePathResult = normalizeLocalePath(\n            pathname,\n            this.nextConfig.i18n?.locales\n          )\n\n          if (localePathResult.detectedLocale) {\n            pathname = localePathResult.pathname\n            parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n          }\n        }\n        const bubbleNoFallback = !!query._nextBubbleNoFallback\n\n        if (pathname === '/api' || pathname.startsWith('/api/')) {\n          delete query._nextBubbleNoFallback\n\n          const handled = await this.handleApiRequest(\n            req as NextApiRequest,\n            res as NextApiResponse,\n            pathname,\n            query\n          )\n          if (handled) {\n            return { finished: true }\n          }\n        }\n\n        try {\n          await this.render(req, res, pathname, query, parsedUrl)\n\n          return {\n            finished: true,\n          }\n        } catch (err) {\n          if (err instanceof NoFallbackError && bubbleNoFallback) {\n            return {\n              finished: false,\n            }\n          }\n          throw err\n        }\n      },\n    }\n\n    const { useFileSystemPublicRoutes } = this.nextConfig\n\n    if (useFileSystemPublicRoutes) {\n      this.dynamicRoutes = this.getDynamicRoutes()\n    }\n\n    return {\n      headers,\n      fsRoutes,\n      rewrites: {\n        beforeFiles,\n        afterFiles,\n        fallback,\n      },\n      redirects,\n      catchAllRoute,\n      useFileSystemPublicRoutes,\n      dynamicRoutes: this.dynamicRoutes,\n      basePath: this.nextConfig.basePath,\n      pageChecker: this.hasPage.bind(this),\n      locales: this.nextConfig.i18n?.locales || [],\n    }\n  }\n\n  private async getPagePath(\n    pathname: string,\n    locales?: string[]\n  ): Promise<string> {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      this._isLikeServerless,\n      this.renderOpts.dev,\n      locales\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let found = false\n    try {\n      found = !!(await this.getPagePath(\n        pathname,\n        this.nextConfig.i18n?.locales\n      ))\n    } catch (_) {}\n\n    return found\n  }\n\n  protected async _beforeCatchAllRender(\n    _req: IncomingMessage,\n    _res: ServerResponse,\n    _params: Params,\n    _parsedUrl: UrlWithParsedQuery\n  ): Promise<boolean> {\n    return false\n  }\n\n  // Used to build API page in development\n  protected async ensureApiPage(_pathname: string): Promise<void> {}\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  private async handleApiRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery\n  ): Promise<boolean> {\n    let page = pathname\n    let params: Params | boolean = false\n    let pageFound = await this.hasPage(page)\n\n    if (!pageFound && this.dynamicRoutes) {\n      for (const dynamicRoute of this.dynamicRoutes) {\n        params = dynamicRoute.match(pathname)\n        if (dynamicRoute.page.startsWith('/api') && params) {\n          page = dynamicRoute.page\n          pageFound = true\n          break\n        }\n      }\n    }\n\n    if (!pageFound) {\n      return false\n    }\n    // Make sure the page is built before getting the path\n    // or else it won't be in the manifest yet\n    await this.ensureApiPage(page)\n\n    let builtPagePath\n    try {\n      builtPagePath = await this.getPagePath(page)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return false\n      }\n      throw err\n    }\n\n    const pageModule = await require(builtPagePath)\n    query = { ...query, ...params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n\n    if (!this.renderOpts.dev && this._isLikeServerless) {\n      if (typeof pageModule.default === 'function') {\n        prepareServerlessUrl(req, query)\n        await pageModule.default(req, res)\n        return true\n      }\n    }\n\n    await apiResolver(\n      req,\n      res,\n      query,\n      pageModule,\n      this.renderOpts.previewProps,\n      this.minimalMode\n    )\n    return true\n  }\n\n  protected generatePublicRoutes(): Route[] {\n    const publicFiles = new Set(\n      recursiveReadDirSync(this.publicDir).map((p) =>\n        encodeURI(p.replace(/\\\\/g, '/'))\n      )\n    )\n\n    return [\n      {\n        match: route('/:path*'),\n        name: 'public folder catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          const pathParts: string[] = params.path || []\n          const { basePath } = this.nextConfig\n\n          // if basePath is defined require it be present\n          if (basePath) {\n            const basePathParts = basePath.split('/')\n            // remove first empty value\n            basePathParts.shift()\n\n            if (\n              !basePathParts.every((part: string, idx: number) => {\n                return part === pathParts[idx]\n              })\n            ) {\n              return { finished: false }\n            }\n\n            pathParts.splice(0, basePathParts.length)\n          }\n\n          const path = `/${pathParts.join('/')}`\n\n          if (publicFiles.has(path)) {\n            await this.serveStatic(\n              req,\n              res,\n              join(this.publicDir, ...pathParts),\n              parsedUrl\n            )\n            return {\n              finished: true,\n            }\n          }\n          return {\n            finished: false,\n          }\n        },\n      } as Route,\n    ]\n  }\n\n  protected getDynamicRoutes(): Array<DynamicRouteItem> {\n    const addedPages = new Set<string>()\n\n    return getSortedRoutes(\n      Object.keys(this.pagesManifest!).map(\n        (page) =>\n          normalizeLocalePath(page, this.nextConfig.i18n?.locales).pathname\n      )\n    )\n      .map((page) => {\n        if (addedPages.has(page) || !isDynamicRoute(page)) return null\n        addedPages.add(page)\n        return {\n          page,\n          match: getRouteMatcher(getRouteRegex(page)),\n        }\n      })\n      .filter((item): item is DynamicRouteItem => Boolean(item))\n  }\n\n  private handleCompression(req: IncomingMessage, res: ServerResponse): void {\n    if (this.compression) {\n      this.compression(req, res, () => {})\n    }\n  }\n\n  protected async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    this.handleCompression(req, res)\n\n    try {\n      const matched = await this.router.execute(req, res, parsedUrl)\n      if (matched) {\n        return\n      }\n    } catch (err) {\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n      throw err\n    }\n\n    await this.render404(req, res, parsedUrl)\n  }\n\n  protected async sendResponse(\n    req: IncomingMessage,\n    res: ServerResponse,\n    { type, body, revalidateOptions }: ResponsePayload\n  ): Promise<void> {\n    if (!isResSent(res)) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n      if (dev) {\n        // In dev, we should not cache pages for any reason.\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n      }\n      return sendPayload(\n        req,\n        res,\n        body,\n        type,\n        {\n          generateEtags,\n          poweredByHeader,\n        },\n        revalidateOptions\n      )\n    }\n  }\n\n  public async render(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const url: any = req.url\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !this.minimalMode &&\n      !query._nextDataReq &&\n      (url.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && url.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    // Custom server users can run `app.render()` which needs compression.\n    if (this.renderOpts.customServer) {\n      this.handleCompression(req, res)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    const response = await this.renderToResponse(req, res, pathname, query)\n    // Request was ended by the user\n    if (response === null) {\n      return\n    }\n\n    return this.sendResponse(req, res, response)\n  }\n\n  protected async findPageComponents(\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    let paths = [\n      // try serving a static AMP version first\n      query.amp ? normalizePagePath(pathname) + '.amp' : null,\n      pathname,\n    ].filter(Boolean)\n\n    if (query.__nextLocale) {\n      paths = [\n        ...paths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        ),\n        ...paths,\n      ]\n    }\n\n    for (const pagePath of paths) {\n      try {\n        const components = await loadComponents(\n          this.distDir,\n          pagePath!,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath?.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps\n              ? {\n                  amp: query.amp,\n                  _nextDataReq: query._nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                }\n              : query),\n            ...(params || {}),\n          },\n        }\n      } catch (err) {\n        if (err.code !== 'ENOENT') throw err\n      }\n    }\n    return null\n  }\n\n  protected async getStaticPaths(\n    pathname: string\n  ): Promise<{\n    staticPaths: string[] | undefined\n    fallbackMode: 'static' | 'blocking' | false\n  }> {\n    // `staticPaths` is intentionally set to `undefined` as it should've\n    // been caught when checking disk data.\n    const staticPaths = undefined\n\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField = this.getPrerenderManifest().dynamicRoutes[pathname]\n      .fallback\n\n    return {\n      staticPaths,\n      fallbackMode:\n        typeof fallbackField === 'string'\n          ? 'static'\n          : fallbackField === null\n          ? 'blocking'\n          : false,\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    { components, query }: FindComponentsResult,\n    opts: RenderOptsPartial\n  ): Promise<ResponsePayload | null> {\n    const is404Page = pathname === '/404'\n    const is500Page = pathname === '/500'\n\n    const isLikeServerless =\n      typeof components.Component === 'object' &&\n      typeof (components.Component as any).renderReqToHTML === 'function'\n    const isSSG = !!components.getStaticProps\n    const hasServerProps = !!components.getServerSideProps\n    const hasStaticPaths = !!components.getStaticPaths\n    const hasGetInitialProps = !!(components.Component as any).getInitialProps\n\n    // Toggle whether or not this is a Data request\n    const isDataReq = !!query._nextDataReq && (isSSG || hasServerProps)\n    delete query._nextDataReq\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isDataReq) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.substr(1), 10)\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        type: 'html',\n        body: components.Component,\n      }\n    }\n\n    if (!query.amp) {\n      delete query.amp\n    }\n\n    const locale = query.__nextLocale as string\n    const defaultLocale = isSSG\n      ? this.nextConfig.i18n?.defaultLocale\n      : (query.__nextDefaultLocale as string)\n\n    const { i18n } = this.nextConfig\n    const locales = i18n?.locales\n\n    let previewData: PreviewData\n    let isPreviewMode = false\n\n    if (hasServerProps || isSSG) {\n      previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n      isPreviewMode = previewData !== false\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = (req as any)._nextRewroteUrl\n      ? (req as any)._nextRewroteUrl\n      : urlPathname\n\n    urlPathname = removePathTrailingSlash(urlPathname)\n    resolvedUrlPathname = normalizeLocalePath(\n      removePathTrailingSlash(resolvedUrlPathname),\n      this.nextConfig.i18n?.locales\n    ).pathname\n\n    const stripNextDataPath = (path: string) => {\n      if (path.includes(this.buildId)) {\n        const splitPath = path.substring(\n          path.indexOf(this.buildId) + this.buildId.length\n        )\n\n        path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n      }\n\n      if (this.nextConfig.i18n) {\n        return normalizeLocalePath(path, locales).pathname\n      }\n      return path\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n      }\n      const statusCode = getRedirectStatus(redirect)\n      const { basePath } = this.nextConfig\n\n      if (\n        basePath &&\n        redirect.basePath !== false &&\n        redirect.destination.startsWith('/')\n      ) {\n        redirect.destination = `${basePath}${redirect.destination}`\n      }\n\n      if (statusCode === PERMANENT_REDIRECT_STATUS) {\n        res.setHeader('Refresh', `0;url=${redirect.destination}`)\n      }\n\n      res.statusCode = statusCode\n      res.setHeader('Location', redirect.destination)\n      res.end()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isDataReq) {\n      resolvedUrlPathname = stripNextDataPath(resolvedUrlPathname)\n      urlPathname = stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey =\n      isPreviewMode || !isSSG || this.minimalMode\n        ? null // Preview mode bypasses the cache\n        : `${locale ? `/${locale}` : ''}${\n            (pathname === '/' || resolvedUrlPathname === '/') && locale\n              ? ''\n              : resolvedUrlPathname\n          }${query.amp ? '.amp' : ''}`\n\n    if ((is404Page || is500Page) && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    if (ssgCacheKey) {\n      // we only encode path delimiters for path segments from\n      // getStaticPaths so we need to attempt decoding the URL\n      // to match against and only escape the path delimiters\n      // this allows non-ascii values to be handled e.g. Japanese characters\n\n      // TODO: investigate adding this handling for non-SSG pages so\n      // non-ascii names work there also\n      ssgCacheKey = ssgCacheKey\n        .split('/')\n        .map((seg) => {\n          try {\n            seg = escapePathDelimiters(decodeURIComponent(seg), true)\n          } catch (_) {\n            // An improperly encoded URL was provided\n            throw new DecodeError('failed to decode param')\n          }\n          return seg\n        })\n        .join('/')\n    }\n\n    const doRender: () => Promise<ResponseCacheEntry> = async () => {\n      let pageData: any\n      let html: string | null\n      let sprRevalidate: number | false\n      let isNotFound: boolean | undefined\n      let isRedirect: boolean | undefined\n\n      let renderResult\n      // handle serverless\n      if (isLikeServerless) {\n        renderResult = await (components.Component as any).renderReqToHTML(\n          req,\n          res,\n          'passthrough',\n          {\n            locale,\n            locales,\n            defaultLocale,\n            optimizeCss: this.renderOpts.optimizeCss,\n            distDir: this.distDir,\n            fontManifest: this.renderOpts.fontManifest,\n            domainLocales: this.renderOpts.domainLocales,\n          }\n        )\n\n        html = renderResult.html\n        pageData = renderResult.renderOpts.pageData\n        sprRevalidate = renderResult.renderOpts.revalidate\n        isNotFound = renderResult.renderOpts.isNotFound\n        isRedirect = renderResult.renderOpts.isRedirect\n      } else {\n        const origQuery = parseUrl(req.url || '', true).query\n        const hadTrailingSlash =\n          urlPathname !== '/' && this.nextConfig.trailingSlash\n\n        const resolvedUrl = formatUrl({\n          pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n          // make sure to only add query values from original URL\n          query: origQuery,\n        })\n\n        const renderOpts: RenderOpts = {\n          ...components,\n          ...opts,\n          isDataReq,\n          resolvedUrl,\n          locale,\n          locales,\n          defaultLocale,\n          // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n          // and not the resolved URL to prevent a hydration mismatch on\n          // asPath\n          resolvedAsPath:\n            hasServerProps || hasGetInitialProps\n              ? formatUrl({\n                  // we use the original URL pathname less the _next/data prefix if\n                  // present\n                  pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                  query: origQuery,\n                })\n              : resolvedUrl,\n        }\n\n        renderResult = await renderToHTML(req, res, pathname, query, renderOpts)\n\n        html = renderResult\n        // TODO: change this to a different passing mechanism\n        pageData = (renderOpts as any).pageData\n        sprRevalidate = (renderOpts as any).revalidate\n        isNotFound = (renderOpts as any).isNotFound\n        isRedirect = (renderOpts as any).isRedirect\n      }\n\n      let value: ResponseCacheValue | null\n      if (isNotFound) {\n        value = null\n      } else if (isRedirect) {\n        value = { kind: 'REDIRECT', props: pageData }\n      } else {\n        value = { kind: 'PAGE', html: html!, pageData }\n      }\n      return { revalidate: sprRevalidate, value }\n    }\n\n    const cacheEntry = await this.responseCache.get(\n      ssgCacheKey,\n      async (hasResolved) => {\n        const isProduction = !this.renderOpts.dev\n        const isDynamicPathname = isDynamicRoute(pathname)\n        const didRespond = hasResolved || isResSent(res)\n\n        const { staticPaths, fallbackMode } = hasStaticPaths\n          ? await this.getStaticPaths(pathname)\n          : { staticPaths: undefined, fallbackMode: false }\n\n        // When we did not respond from cache, we need to choose to block on\n        // rendering or return a skeleton.\n        //\n        // * Data requests always block.\n        //\n        // * Blocking mode fallback always blocks.\n        //\n        // * Preview mode toggles all pages to be resolved in a blocking manner.\n        //\n        // * Non-dynamic pages should block (though this is an impossible\n        //   case in production).\n        //\n        // * Dynamic pages should return their skeleton if not defined in\n        //   getStaticPaths, then finish the data request on the client-side.\n        //\n        if (\n          this.minimalMode !== true &&\n          fallbackMode !== 'blocking' &&\n          ssgCacheKey &&\n          !didRespond &&\n          !isPreviewMode &&\n          isDynamicPathname &&\n          // Development should trigger fallback when the path is not in\n          // `getStaticPaths`\n          (isProduction ||\n            !staticPaths ||\n            !staticPaths.includes(\n              // we use ssgCacheKey here as it is normalized to match the\n              // encoding from getStaticPaths along with including the locale\n              query.amp ? ssgCacheKey.replace(/\\.amp$/, '') : ssgCacheKey\n            ))\n        ) {\n          if (\n            // In development, fall through to render to handle missing\n            // getStaticPaths.\n            (isProduction || staticPaths) &&\n            // When fallback isn't present, abort this render so we 404\n            fallbackMode !== 'static'\n          ) {\n            throw new NoFallbackError()\n          }\n\n          if (!isDataReq) {\n            // Production already emitted the fallback as static HTML.\n            if (isProduction) {\n              const html = await this.incrementalCache.getFallback(\n                locale ? `/${locale}${pathname}` : pathname\n              )\n              return {\n                value: {\n                  kind: 'PAGE',\n                  html,\n                  pageData: {},\n                },\n              }\n            }\n            // We need to generate the fallback on-demand for development.\n            else {\n              query.__nextFallback = 'true'\n              if (isLikeServerless) {\n                prepareServerlessUrl(req, query)\n              }\n              const result = await doRender()\n              // Prevent caching this result\n              delete result.revalidate\n              return result\n            }\n          }\n        }\n\n        const result = await doRender()\n        return {\n          ...result,\n          revalidate:\n            result.revalidate !== undefined\n              ? result.revalidate\n              : /* default to minimum revalidate (this should be an invariant) */ 1,\n        }\n      }\n    )\n\n    const { revalidate, value: cachedData } = cacheEntry\n    const revalidateOptions: any =\n      typeof revalidate !== 'undefined' &&\n      (!this.renderOpts.dev || (hasServerProps && !isDataReq))\n        ? {\n            // When the page is 404 cache-control should not be added\n            private: isPreviewMode || is404Page,\n            stateful: !isSSG,\n            revalidate,\n          }\n        : undefined\n\n    if (!cachedData) {\n      if (revalidateOptions) {\n        setRevalidateHeaders(res, revalidateOptions)\n      }\n      if (isDataReq) {\n        res.statusCode = 404\n        res.end('{\"notFound\":true}')\n        return null\n      } else {\n        await this.render404(req, res, {\n          pathname,\n          query,\n        } as UrlWithParsedQuery)\n        return null\n      }\n    } else if (cachedData.kind === 'REDIRECT') {\n      if (isDataReq) {\n        return {\n          type: 'json',\n          body: JSON.stringify(cachedData.props),\n          revalidateOptions,\n        }\n      } else {\n        await handleRedirect(cachedData.props)\n        return null\n      }\n    } else {\n      return {\n        type: isDataReq ? 'json' : 'html',\n        body: isDataReq ? JSON.stringify(cachedData.pageData) : cachedData.html,\n        revalidateOptions,\n      }\n    }\n  }\n\n  private async renderToResponse(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<ResponsePayload | null> {\n    const bubbleNoFallback = !!query._nextBubbleNoFallback\n    delete query._nextBubbleNoFallback\n\n    try {\n      const result = await this.findPageComponents(pathname, query)\n      if (result) {\n        try {\n          return await this.renderToResponseWithComponents(\n            req,\n            res,\n            pathname,\n            result,\n            { ...this.renderOpts }\n          )\n        } catch (err) {\n          const isNoFallbackError = err instanceof NoFallbackError\n\n          if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n            throw err\n          }\n        }\n      }\n\n      if (this.dynamicRoutes) {\n        for (const dynamicRoute of this.dynamicRoutes) {\n          const params = dynamicRoute.match(pathname)\n          if (!params) {\n            continue\n          }\n\n          const dynamicRouteResult = await this.findPageComponents(\n            dynamicRoute.page,\n            query,\n            params\n          )\n          if (dynamicRouteResult) {\n            try {\n              return await this.renderToResponseWithComponents(\n                req,\n                res,\n                dynamicRoute.page,\n                dynamicRouteResult,\n                { ...this.renderOpts, params }\n              )\n            } catch (err) {\n              const isNoFallbackError = err instanceof NoFallbackError\n\n              if (\n                !isNoFallbackError ||\n                (isNoFallbackError && bubbleNoFallback)\n              ) {\n                throw err\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(err, req, res, pathname, query)\n      }\n\n      res.statusCode = 500\n      const isWrappedError = err instanceof WrappedBuildError\n      const response = await this.renderErrorToResponse(\n        isWrappedError ? err.innerError : err,\n        req,\n        res,\n        pathname,\n        query\n      )\n\n      if (!isWrappedError) {\n        if (this.minimalMode) {\n          throw err\n        }\n        this.logError(err)\n      }\n      return response\n    }\n    res.statusCode = 404\n    return this.renderErrorToResponse(null, req, res, pathname, query)\n  }\n\n  public async renderToHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    const response = await this.renderToResponse(req, res, pathname, query)\n    return response ? response.body : null\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n    const response = await this.renderErrorToResponse(\n      err,\n      req,\n      res,\n      pathname,\n      query\n    )\n\n    if (this.minimalMode && res.statusCode === 500) {\n      throw err\n    }\n    if (response === null) {\n      return\n    }\n    return this.sendResponse(req, res, response)\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    console.warn(\n      chalk.bold.yellow(`Warning: `) +\n        chalk.yellow(\n          `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n        )\n    )\n  })\n\n  private async renderErrorToResponse(\n    _err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    _pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<ResponsePayload | null> {\n    let err = _err\n    if (this.renderOpts.dev && !err && res.statusCode === 500) {\n      err = new Error(\n        'An undefined error was thrown sometime during render... ' +\n          'See https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      // use static 404 page if available and is 404 response\n      if (is404) {\n        result = await this.findPageComponents('/404', query)\n        using404Page = result !== null\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (!result && STATIC_STATUS_PAGES.includes(statusPage)) {\n        result = await this.findPageComponents(statusPage, query)\n      }\n\n      if (!result) {\n        result = await this.findPageComponents('/_error', query)\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          req,\n          res,\n          statusPage,\n          result!,\n          {\n            ...this.renderOpts,\n            err,\n          }\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (renderToHtmlError) {\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents()\n\n      if (fallbackComponents) {\n        return this.renderToResponseWithComponents(\n          req,\n          res,\n          '/_error',\n          {\n            query,\n            components: fallbackComponents,\n          },\n          {\n            ...this.renderOpts,\n            // We render `renderToHtmlError` here because `err` is\n            // already captured in the stacktrace.\n            err: isWrappedError\n              ? renderToHtmlError.innerError\n              : renderToHtmlError,\n          }\n        )\n      }\n      return {\n        type: 'html',\n        body: 'Internal Server Error',\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    const response = await this.renderErrorToResponse(\n      err,\n      req,\n      res,\n      pathname,\n      query\n    )\n    return response ? response.body : null\n  }\n\n  protected async getFallbackErrorComponents(): Promise<LoadComponentsReturnType | null> {\n    // The development server will provide an implementation for this\n    return null\n  }\n\n  public async render404(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery,\n    setHeaders = true\n  ): Promise<void> {\n    const url: any = req.url\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(url, true)\n    const { i18n } = this.nextConfig\n\n    if (i18n) {\n      query.__nextLocale = query.__nextLocale || i18n.defaultLocale\n      query.__nextDefaultLocale =\n        query.__nextDefaultLocale || i18n.defaultLocale\n    }\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n\n  public async serveStatic(\n    req: IncomingMessage,\n    res: ServerResponse,\n    path: string,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!this.isServeableUrl(path)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    if (!(req.method === 'GET' || req.method === 'HEAD')) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      return this.renderError(null, req, res, path)\n    }\n\n    try {\n      await serveStatic(req, res, path)\n    } catch (err) {\n      if (err.code === 'ENOENT' || err.statusCode === 404) {\n        this.render404(req, res, parsedUrl)\n      } else if (err.statusCode === 412) {\n        res.statusCode = 412\n        return this.renderError(err, req, res, path)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  private _validFilesystemPathSet: Set<string> | null = null\n  private getFilesystemPaths(): Set<string> {\n    if (this._validFilesystemPathSet) {\n      return this._validFilesystemPathSet\n    }\n\n    const pathUserFilesStatic = join(this.dir, 'static')\n    let userFilesStatic: string[] = []\n    if (this.hasStaticDir && fs.existsSync(pathUserFilesStatic)) {\n      userFilesStatic = recursiveReadDirSync(pathUserFilesStatic).map((f) =>\n        join('.', 'static', f)\n      )\n    }\n\n    let userFilesPublic: string[] = []\n    if (this.publicDir && fs.existsSync(this.publicDir)) {\n      userFilesPublic = recursiveReadDirSync(this.publicDir).map((f) =>\n        join('.', 'public', f)\n      )\n    }\n\n    let nextFilesStatic: string[] = []\n    nextFilesStatic = !this.minimalMode\n      ? recursiveReadDirSync(join(this.distDir, 'static')).map((f) =>\n          join('.', relative(this.dir, this.distDir), 'static', f)\n        )\n      : []\n\n    return (this._validFilesystemPathSet = new Set<string>([\n      ...nextFilesStatic,\n      ...userFilesPublic,\n      ...userFilesStatic,\n    ]))\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = resolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // Check if .next/static, static and public are in the path.\n    // If not the path is not available.\n    if (\n      (untrustedFilePath.startsWith(join(this.distDir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'public') + sep)) === false\n    ) {\n      return false\n    }\n\n    // Check against the real filesystem paths\n    const filesystemUrls = this.getFilesystemPaths()\n    const resolved = relative(this.dir, untrustedFilePath)\n    return filesystemUrls.has(resolved)\n  }\n\n  protected readBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err) {\n      if (!fs.existsSync(buildIdFile)) {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected get _isLikeServerless(): boolean {\n    return isTargetLikeServerless(this.nextConfig.target)\n  }\n}\n\nfunction prepareServerlessUrl(\n  req: IncomingMessage,\n  query: ParsedUrlQuery\n): void {\n  const curUrl = parseUrl(req.url!, true)\n  req.url = formatUrl({\n    ...curUrl,\n    search: undefined,\n    query: {\n      ...curUrl.query,\n      ...query,\n    },\n  })\n}\n\nclass NoFallbackError extends Error {}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  type: 'html' | 'json'\n  body: string\n  revalidateOptions?: any\n}\n"]}