{"version":3,"sources":["../../server/utils.ts"],"sourcesContent":["import { BLOCKED_PAGES } from '../shared/lib/constants'\n\nexport function isBlockedPage(pathname: string): boolean {\n  return BLOCKED_PAGES.includes(pathname)\n}\n\nexport function cleanAmpPath(pathname: string): string {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?')\n  }\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, '')\n  }\n  pathname = pathname.replace(/\\?$/, '')\n  return pathname\n}\n\nexport type Disposable = () => void\nexport type Observer<T> = {\n  next(chunk: T): void\n  error(error: Error): void\n  complete(): void\n}\nexport type RenderResult = (observer: Observer<string>) => Disposable\n\nexport function resultFromChunks(chunks: string[]): RenderResult {\n  return ({ next, complete, error }) => {\n    let canceled = false\n    process.nextTick(() => {\n      try {\n        for (const chunk of chunks) {\n          if (canceled) {\n            return\n          }\n          next(chunk)\n        }\n      } catch (err) {\n        if (!canceled) {\n          canceled = true\n          error(err)\n        }\n      }\n\n      if (!canceled) {\n        canceled = true\n        complete()\n      }\n    })\n\n    return () => {\n      canceled = true\n    }\n  }\n}\n\nexport function resultToChunks(result: RenderResult): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    const chunks: string[] = []\n    result({\n      next: (chunk) => {\n        chunks.push(chunk)\n      },\n      error: (error) => reject(error),\n      complete: () => resolve(chunks),\n    })\n  })\n}\n"],"names":[],"mappings":";;;;QAEgB,aAAa,GAAb,aAAa;QAIb,YAAY,GAAZ,YAAY;QAmBZ,gBAAgB,GAAhB,gBAAgB;QA8BhB,cAAc,GAAd,cAAc;AAvDA,GAAyB,CAAzB,UAAyB;SAEvC,aAAa,CAAC,QAAgB,EAAW,CAAC;WAF5B,UAAyB,eAGhC,QAAQ,CAAC,QAAQ;AACxC,CAAC;SAEe,YAAY,CAAC,QAAgB,EAAU,CAAC;IACtD,EAAE,EAAE,QAAQ,CAAC,KAAK,0BAA0B,CAAC;QAC3C,QAAQ,GAAG,QAAQ,CAAC,OAAO,4BAA2B,CAAG;IAC3D,CAAC;IACD,EAAE,EAAE,QAAQ,CAAC,KAAK,yBAAyB,CAAC;QAC1C,QAAQ,GAAG,QAAQ,CAAC,OAAO;IAC7B,CAAC;IACD,QAAQ,GAAG,QAAQ,CAAC,OAAO;WACpB,QAAQ;AACjB,CAAC;SAUe,gBAAgB,CAAC,MAAgB,EAAgB,CAAC;cACtD,IAAI,GAAE,QAAQ,GAAE,KAAK,MAAO,CAAC;QACrC,GAAG,CAAC,QAAQ,GAAG,KAAK;QACpB,OAAO,CAAC,QAAQ,KAAO,CAAC;gBAClB,CAAC;qBACE,KAAK,CAAC,KAAK,IAAI,MAAM,CAAE,CAAC;oBAC3B,EAAE,EAAE,QAAQ,EAAE,CAAC;;oBAEf,CAAC;oBACD,IAAI,CAAC,KAAK;gBACZ,CAAC;YACH,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACb,EAAE,GAAG,QAAQ,EAAE,CAAC;oBACd,QAAQ,GAAG,IAAI;oBACf,KAAK,CAAC,GAAG;gBACX,CAAC;YACH,CAAC;YAED,EAAE,GAAG,QAAQ,EAAE,CAAC;gBACd,QAAQ,GAAG,IAAI;gBACf,QAAQ;YACV,CAAC;QACH,CAAC;mBAEY,CAAC;YACZ,QAAQ,GAAG,IAAI;QACjB,CAAC;IACH,CAAC;AACH,CAAC;SAEe,cAAc,CAAC,MAAoB,EAAqB,CAAC;WAChE,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,GAAK,CAAC;QACvC,KAAK,CAAC,MAAM;QACZ,MAAM;YACJ,IAAI,GAAG,KAAK,GAAK,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC,KAAK;YACnB,CAAC;YACD,KAAK,GAAG,KAAK,GAAK,MAAM,CAAC,KAAK;;YAC9B,QAAQ,MAAQ,OAAO,CAAC,MAAM;;IAElC,CAAC;AACH,CAAC"}