{"version":3,"sources":["../../../../telemetry/trace/report/to-telemetry.ts"],"names":["TRACE_EVENT_ACCESSLIST","Map","Object","entries","reportToTelemetry","spanName","duration","eventName","get","telemetry","traceGlobals","record","payload","durationInMicroseconds"],"mappings":"4DAAA,iCAEA,KAAMA,CAAAA,sBAAsB,CAAG,GAAIC,CAAAA,GAAJ,CAC7BC,MAAM,CAACC,OAAP,CAAe,CACb,sBAAuB,qBADV,CAAf,CAD6B,CAA/B,CAMA,KAAMC,CAAAA,iBAAiB,CAAG,CAACC,QAAD,CAAmBC,QAAnB,GAAwC,CAChE,KAAMC,CAAAA,SAAS,CAAGP,sBAAsB,CAACQ,GAAvB,CAA2BH,QAA3B,CAAlB,CACA,GAAI,CAACE,SAAL,CAAgB,CACd,OACD,CACD,KAAME,CAAAA,SAAS,CAAGC,qBAAaF,GAAb,CAAiB,WAAjB,CAAlB,CACA,GAAI,CAACC,SAAL,CAAgB,CACd,OACD,CAEDA,SAAS,CAACE,MAAV,CAAiB,CACfJ,SADe,CAEfK,OAAO,CAAE,CACPC,sBAAsB,CAAEP,QADjB,CAFM,CAAjB,EAMD,CAhBD,C,aAkBeF,iB","sourcesContent":["import { traceGlobals } from '../shared'\n\nconst TRACE_EVENT_ACCESSLIST = new Map(\n  Object.entries({\n    'webpack-invalidated': 'WEBPACK_INVALIDATED',\n  })\n)\n\nconst reportToTelemetry = (spanName: string, duration: number) => {\n  const eventName = TRACE_EVENT_ACCESSLIST.get(spanName)\n  if (!eventName) {\n    return\n  }\n  const telemetry = traceGlobals.get('telemetry')\n  if (!telemetry) {\n    return\n  }\n\n  telemetry.record({\n    eventName,\n    payload: {\n      durationInMicroseconds: duration,\n    },\n  })\n}\n\nexport default reportToTelemetry\n"]}